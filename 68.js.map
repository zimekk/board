{"version":3,"file":"68.js","mappings":"sKAUO,MAAMA,EAAW,GAAIC,WAAUC,cACnC,GAAEA,MAAaD,SADM,CAEtB,IAAIE,IACD,GAA0BC,OAAOC,SAASC,OAAOC,QAChD,aACA,WAKN,SAASC,IACP,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,WAAsB,IAAM,QAEpDC,EAAAA,EAAAA,YAAU,KACRC,MAAM,SACHC,MAAMC,GAAQA,EAAIC,SAClBF,MAAK,EAAGL,UAAWA,IACnBK,KAAKJ,EAAQ,GACf,IAEH,MAAMO,GAAeC,EAAAA,EAAAA,cAClBC,IACCA,EAAEC,iBACFP,MACG,cAAaQ,mBACXF,EAAEG,OAA6BC,QAAQC,WAI9C,IAGF,OAAa,OAATf,EACKgB,EAAAA,cAACC,EAAAA,EAAO,MAIfD,EAAAA,cAAA,WACEA,EAAAA,cAAA,UACGhB,EAAKkB,KAAI,EAAGH,UACXC,EAAAA,cAAA,MAAIG,IAAKJ,GACPC,EAAAA,cAAA,KACEnB,KAAO,SAAQe,mBAAmBG,KAClC,YAAWA,EACXF,OAAO,SACPO,QAASZ,GAERO,OAOf,CAEA,SAASM,IACP,MAAOC,EAAMC,IAAWrB,EAAAA,EAAAA,UAAS,MAyBjC,OAvBAC,EAAAA,EAAAA,YAAU,KACR,MAAMqB,EAASC,EAAAA,EAAKC,QAAQnC,GAiB5B,OAfAoC,QAAQC,IAAI,CAAErC,aAEdiC,EAAOK,GAAG,WAAW,KACnBL,EAAOM,UAAU,UAAWC,OAI1B,IAGJP,EAAOK,GAAG,WAAW,CAACG,EAAQC,KAE5BV,EAAQ7B,IAAIwC,gBAAgB,IAAIC,KAAK,CAACF,KAAW,IAG5C,KACLT,EAAOY,KAAK,CACb,GACA,IAEId,EACLN,EAAAA,cAAA,OACEqB,MAAO,CAELC,OAAQ,EACRC,MAAO,EACPC,OAAQ,oBAGVxB,EAAAA,cAAA,OACEqB,MAAO,CACLI,SAAU,QAEZC,IAAKpB,KAGP,IACN,CAEe,SAASqB,IACtB,OACE3B,EAAAA,cAAA,eACEA,EAAAA,cAAA,UAAI,SACJA,EAAAA,cAACjB,EAAI,MACLiB,EAAAA,cAACK,EAAI,MAGX,C,qGCjHA,MAAMuB,E,SAAgBC,GAAOC,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+C1B,SAAS7B,IACd,OACED,EAAAA,cAAC4B,EAAa,KACZ5B,EAAAA,cAAA,OAAK+B,UAAU,UAAUC,QAAQ,aAC/BhC,EAAAA,cAAA,UACE+B,UAAU,OACVE,GAAG,KACHC,GAAG,KACHC,EAAE,KACFC,KAAK,OACLC,YAAY,OAKtB,C","sources":["webpack://@dev/web/../photo/src/containers/index.tsx","webpack://@dev/web/../video/src/components/Spinner/index.tsx"],"sourcesContent":["import mqtt from \"mqtt\";\nimport React, {\n  type MouseEventHandler,\n  useCallback,\n  useState,\n  useEffect,\n} from \"react\";\nimport { Spinner } from \"@dev/video/components\";\nimport { type PhotoType } from \"../schema\";\n\nexport const MQTT_URL = (({ hostname, protocol }) =>\n  `${protocol}//${hostname}:9001`)(\n  new URL(\n    `${process.env.MQTT_URL || window.location.href}`.replace(\n      /^mqtt:\\/\\//,\n      \"ws://\",\n    ),\n  ),\n);\n\nfunction List() {\n  const [list, setList] = useState<PhotoType[]>(() => null);\n\n  useEffect(() => {\n    fetch(\"photo\")\n      .then((res) => res.json())\n      .then(({ list }) => list)\n      .then(setList);\n  }, []);\n\n  const handleSelect = useCallback<MouseEventHandler<HTMLAnchorElement>>(\n    (e) => (\n      e.preventDefault(),\n      fetch(\n        `photo/send/${encodeURIComponent(\n          (e.target as HTMLAnchorElement).dataset.name,\n        )}`,\n      )\n    ),\n    [],\n  );\n\n  if (list === null) {\n    return <Spinner />;\n  }\n\n  return (\n    <div>\n      <ul>\n        {list.map(({ name }) => (\n          <li key={name}>\n            <a\n              href={`photo/${encodeURIComponent(name)}`}\n              data-name={name}\n              target=\"_blank\"\n              onClick={handleSelect}\n            >\n              {name}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction Item() {\n  const [item, setItem] = useState(null);\n\n  useEffect(() => {\n    const client = mqtt.connect(MQTT_URL);\n\n    console.log({ MQTT_URL });\n\n    client.on(\"connect\", () => {\n      client.subscribe(\"photos\", (err) => {\n        // if (!err) {\n        //   client.publish(\"presence\", \"Hello mqtt\");\n        // }\n      });\n    });\n\n    client.on(\"message\", (_topic, message) => {\n      // message is Buffer\n      setItem(URL.createObjectURL(new Blob([message])));\n    });\n\n    return () => {\n      client.end();\n    };\n  }, []);\n\n  return item ? (\n    <div\n      style={{\n        // position: \"fixed\",\n        bottom: 0,\n        right: 0,\n        border: \"2px solid black\",\n      }}\n    >\n      <img\n        style={{\n          maxWidth: \"100%\",\n        }}\n        src={item}\n      />\n    </div>\n  ) : null;\n}\n\nexport default function Section() {\n  return (\n    <section>\n      <h2>Photo</h2>\n      <List />\n      <Item />\n    </section>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// https://codepen.io/GeoffreyCrofte/pen/ZQrgZm\n// https://codepen.io/supah/pen/BjYLdW\n// https://codesandbox.io/s/m3v440z36j\nconst StyledSpinner = styled.div`\n  display: inline-block;\n  width: 1em;\n  height: 1em;\n  position: relative;\n\n  .spinner {\n    position: absolute;\n    width: 1.5em;\n    height: 1.5em;\n    margin: 0;\n  }\n\n  svg {\n    animation: rotate 2s linear infinite;\n    margin: -25px 0 0 -25px;\n    width: 50px;\n    height: 50px;\n\n    & .path {\n      stroke: #5652bf;\n      stroke-linecap: round;\n      animation: dash 1.5s ease-in-out infinite;\n    }\n  }\n\n  @keyframes rotate {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes dash {\n    0% {\n      stroke-dasharray: 1, 150;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -35;\n    }\n    100% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -124;\n    }\n  }\n`;\n\nexport function Spinner() {\n  return (\n    <StyledSpinner>\n      <svg className=\"spinner\" viewBox=\"0 0 50 50\">\n        <circle\n          className=\"path\"\n          cx=\"25\"\n          cy=\"25\"\n          r=\"20\"\n          fill=\"none\"\n          strokeWidth=\"5\"\n        />\n      </svg>\n    </StyledSpinner>\n  );\n}\n"],"names":["MQTT_URL","hostname","protocol","URL","window","location","href","replace","List","list","setList","useState","useEffect","fetch","then","res","json","handleSelect","useCallback","e","preventDefault","encodeURIComponent","target","dataset","name","React","Spinner","map","key","onClick","Item","item","setItem","client","mqtt","connect","console","log","on","subscribe","err","_topic","message","createObjectURL","Blob","end","style","bottom","right","border","maxWidth","src","Section","StyledSpinner","styled","div","className","viewBox","cx","cy","r","fill","strokeWidth"],"sourceRoot":""}
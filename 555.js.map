{"version":3,"file":"555.js","mappings":"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","sources":["webpack://@dev/web/../video/src/videos.ts","webpack://@dev/web/../video/src/containers/index.tsx"],"sourcesContent":["export default [\n  \"https://www.youtube.com/watch?v=yxW5yuzVi8w\",\n  \"https://www.youtube.com/watch?v=BilaShsQphM\",\n  \"https://www.youtube.com/watch?v=Fp_P_e1cPOE\",\n  \"https://www.youtube.com/watch?v=XXYlFuWEuKI\",\n  \"https://www.youtube.com/watch?v=a0q6JMuLBYQ\",\n  \"https://www.youtube.com/watch?v=b6U3xeYqdKQ\",\n  \"https://www.youtube.com/watch?v=4qvBnEgCvkc\",\n  \"https://www.youtube.com/watch?v=m8_8tMzmpTg\",\n  \"https://www.youtube.com/watch?v=j4IXCjWnAkY\",\n  \"https://www.youtube.com/watch?v=gCadlN8fexk\",\n  \"https://www.youtube.com/watch?v=aAkMkVFwAoo\",\n  \"https://www.youtube.com/watch?v=E8gmARGvPlI\",\n  \"https://www.youtube.com/watch?v=L4QxmPMplYc\",\n  \"https://www.youtube.com/watch?v=WJvtX-Ec1S8\",\n  \"https://www.youtube.com/watch?v=wXWZiGnaeqo\",\n  \"https://www.youtube.com/watch?v=OiC1rgCPmUQ\",\n  \"https://www.youtube.com/watch?v=suAR1PYFNYA\",\n  \"https://www.youtube.com/watch?v=ekmHAfUIu1M\",\n  \"https://www.youtube.com/watch?v=YFoDEQXJLcQ\",\n  \"https://www.youtube.com/watch?v=6vEeOfkwXwc\",\n  \"https://www.youtube.com/watch?v=DsoWvXDMo1c\",\n  \"https://www.youtube.com/watch?v=TdZyXgadFG0\",\n  \"https://www.youtube.com/watch?v=NZqEICgKwrw\",\n  \"https://www.youtube.com/watch?v=4TYv2PhG89A\",\n  \"https://www.youtube.com/watch?v=XrsbfrFPATs\",\n  \"https://www.youtube.com/watch?v=U2waT9TxPU0\",\n  \"https://www.youtube.com/watch?v=Uq9gPaIzbe8\",\n  \"https://www.youtube.com/watch?v=5FNCukepaS8\",\n  \"https://www.youtube.com/watch?v=4m1EFMoRFvY\",\n  \"https://www.youtube.com/watch?v=6Mgqbai3fKo\",\n  \"https://www.youtube.com/watch?v=59Q_lhgGANc\",\n  \"https://www.youtube.com/watch?v=oC-GflRB0y4\",\n  \"https://www.youtube.com/watch?v=c8WDzsqQ7UY\",\n  \"https://www.youtube.com/watch?v=GKTV6-9ONzE\",\n  \"https://www.youtube.com/watch?v=PQZhN65vq9E\",\n  \"https://www.youtube.com/watch?v=lY2yjAdbvdQ\",\n  \"https://www.youtube.com/watch?v=8GotXeCwUnc\",\n  \"https://www.youtube.com/watch?v=PUdyuKaGQd4\",\n  \"https://www.youtube.com/watch?v=hT_nvWreIhg\",\n  \"https://www.youtube.com/watch?v=L1v7hXEQhsQ\",\n  \"https://www.youtube.com/watch?v=wbOTkDn49qI\",\n  \"https://www.youtube.com/watch?v=7jMlFXouPk8\",\n  \"https://www.youtube.com/watch?v=HrxX9TBj2zY\",\n  \"https://www.youtube.com/watch?v=ghSh-xqJX8A\",\n  \"https://www.youtube.com/watch?v=b_zHQ6kFuQ0\",\n  \"https://www.youtube.com/watch?v=0-EF60neguk\",\n  \"https://www.youtube.com/watch?v=u1ZoHfJZACA\",\n  \"https://www.youtube.com/watch?v=d8OI9FllKfg\",\n  \"https://www.youtube.com/watch?v=VYG1-czlu2s\",\n  \"https://www.youtube.com/watch?v=ywQvbGcCIEk\",\n  \"https://www.youtube.com/watch?v=1sM89qLmd9Y\",\n  \"https://www.youtube.com/watch?v=a5irTX82olg\",\n  \"https://www.youtube.com/watch?v=LMOKlXfXn50\",\n  \"https://www.youtube.com/watch?v=u3u22OYqFGo\",\n  \"https://www.youtube.com/watch?v=tbbKjDjMDok\",\n  \"https://www.youtube.com/watch?v=RIsgWYVXIcA\",\n  \"https://www.youtube.com/watch?v=d5wURLqNTXE\",\n  \"https://www.youtube.com/watch?v=S2TaAcwC_zI\",\n  \"https://www.youtube.com/watch?v=WjLcVqjIkLo\",\n  \"https://www.youtube.com/watch?v=Ps2Jc28tQrw\",\n  \"https://www.youtube.com/watch?v=JYIaWeVL1JM\",\n  \"https://www.youtube.com/watch?v=pvmNeNd5SYk\",\n  \"https://www.youtube.com/watch?v=noezMrwMGuY\",\n  \"https://www.youtube.com/watch?v=9EcjWd-O4jI\",\n  \"https://www.youtube.com/watch?v=aBJZsHDJvf0\",\n  \"https://www.youtube.com/watch?v=oW0VovnyjPY\",\n  \"https://www.youtube.com/watch?v=dBLr0PKjXDw\",\n  \"https://www.youtube.com/watch?v=4uPDfuC3Jck\",\n  \"https://www.youtube.com/watch?v=iM5c0L5nqfs\",\n  \"https://www.youtube.com/watch?v=A3I8BISQfWc\",\n  \"https://www.youtube.com/watch?v=ePNUSmH3dMI\",\n  \"https://www.youtube.com/watch?v=ePwwMgrPMW8\",\n  \"https://www.youtube.com/watch?v=ghk3ETIy_ww\",\n  \"https://www.youtube.com/watch?v=ypbjIwbTR8c\",\n];\n","import React, {\n  type ChangeEventHandler,\n  type MouseEventHandler,\n  useCallback,\n  useState,\n  useEffect,\n} from \"react\";\nimport ReactPlayer from \"react-player/youtube\";\nimport { Spinner } from \"../components/Spinner\";\nimport {\n  type BasicInfoType as InfoType,\n  BasicInfoSchema as InfoSchema,\n} from \"../schema\";\nimport videos from \"../videos\";\n\nfunction Data({ data }: { data: object }) {\n  const [show, setShow] = useState(false);\n\n  const handleClick = useCallback(\n    (e) => (e.preventDefault(), setShow((show) => !show)),\n    [],\n  );\n\n  return (\n    <a href=\"#\" onClick={handleClick} style={{ textDecoration: \"none\" }}>\n      <pre>{show ? JSON.stringify(data, null, 2) : `[...]`}</pre>\n    </a>\n  );\n}\n\nfunction Info({\n  link,\n  onClick: handleClick,\n}: {\n  link: string;\n  onClick: MouseEventHandler<HTMLAnchorElement>;\n}) {\n  const [info, setInfo] = useState<InfoType | null>(null);\n\n  useEffect(() => {\n    fetch(`video/info?videoId=${link}`)\n      .then((res) => res.json())\n      .then((info) => InfoSchema.parseAsync(info))\n      .then(setInfo);\n  }, []);\n\n  return info ? (\n    <div>\n      {info.videoDetails.thumbnails\n        .slice(0, 1)\n        .map(({ url, width, height }, key) => (\n          <div key={key}>\n            <a href={link} onClick={handleClick}>\n              <img\n                src={url}\n                width={width}\n                height={height}\n                referrerPolicy=\"no-referrer\"\n              />\n            </a>\n            <div>\n              <strong>{info.videoDetails.title}</strong>\n            </div>\n          </div>\n        ))}\n      <Data data={info} />\n    </div>\n  ) : (\n    <Spinner />\n  );\n}\n\nfunction List() {\n  const [selected, setSelected] = useState<string[]>(() => []);\n  const [videoId, setVideoId] = useState(\"\");\n  const [list] = useState(() => videos);\n\n  useEffect(() => {\n    fetch(\"video\")\n      .then((res) => res.json())\n      .then(console.info);\n  }, []);\n\n  const handleClick = useCallback<MouseEventHandler<HTMLAnchorElement>>(\n    (e) => (\n      e.preventDefault(),\n      ((videoId) => setVideoId(videoId))(e.currentTarget.href)\n    ),\n    [],\n  );\n\n  const handleClickDownload = useCallback<MouseEventHandler<HTMLAnchorElement>>(\n    (e) => (\n      e.preventDefault(),\n      ((videoId) =>\n        fetch(`video/download-video?videoId=${videoId}`)\n          .then((res) => res.json())\n          .then(console.info))(e.currentTarget.href)\n    ),\n    [],\n  );\n\n  const handleClickDownloadAudio = useCallback<\n    MouseEventHandler<HTMLAnchorElement>\n  >(\n    (e) => (\n      e.preventDefault(),\n      ((videoId) =>\n        fetch(`video/download-audio?videoId=${videoId}`)\n          .then((res) => res.json())\n          .then(console.info))(e.currentTarget.href)\n    ),\n    [],\n  );\n\n  const handleSelect = useCallback<ChangeEventHandler<HTMLInputElement>>(\n    ({ target }) =>\n      setSelected((selected) =>\n        !target.checked\n          ? selected.filter((value) => value !== target.value)\n          : selected.concat(target.value),\n      ),\n    [],\n  );\n\n  const handleSelectAll = useCallback<ChangeEventHandler<HTMLInputElement>>(\n    ({ target }) => setSelected(() => (!target.checked ? [] : list)),\n    [],\n  );\n\n  return (\n    <div>\n      <div>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={selected.length === list.length}\n            onChange={handleSelectAll}\n          />\n          <span>select all</span>{\" \"}\n        </label>\n      </div>\n      <ul>\n        {list.map((link) => (\n          <li key={link}>\n            <input\n              type=\"checkbox\"\n              value={link}\n              checked={selected.includes(link)}\n              onChange={handleSelect}\n            />\n            <a href={link} onClick={handleClick}>\n              {link}\n            </a>\n            [\n            <a href={link} onClick={handleClickDownload}>\n              download\n            </a>\n            ][\n            <a href={link} onClick={handleClickDownloadAudio}>\n              download-audio\n            </a>\n            ]\n            {selected.includes(link) && (\n              <Info link={link} onClick={handleClick} />\n            )}\n          </li>\n        ))}\n      </ul>\n      <div\n        style={{\n          position: \"fixed\",\n          bottom: 0,\n          right: 0,\n          border: \"2px solid black\",\n        }}\n      >\n        {videoId && (\n          <ReactPlayer\n            url={videoId}\n            width={320}\n            height={180}\n            controls\n            light\n            loop\n            pip\n            playing\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default function Section() {\n  return (\n    <section>\n      <h2>Video</h2>\n      <List />\n    </section>\n  );\n}\n"],"names":["Data","data","show","setShow","useState","handleClick","useCallback","e","preventDefault","React","href","onClick","style","textDecoration","JSON","stringify","Info","link","info","setInfo","useEffect","fetch","then","res","json","InfoSchema","parseAsync","videoDetails","thumbnails","slice","map","url","width","height","key","src","referrerPolicy","title","Spinner","List","selected","setSelected","videoId","setVideoId","list","videos","console","currentTarget","handleClickDownload","handleClickDownloadAudio","handleSelect","target","checked","concat","value","filter","handleSelectAll","type","length","onChange","includes","position","bottom","right","border","ReactPlayer","controls","light","loop","pip","playing","Section"],"sourceRoot":""}
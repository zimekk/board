{"version":3,"file":"449.js","mappings":"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","sources":["webpack://@dev/web/../../node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js","webpack://@dev/web/../../node_modules/.pnpm/parse-ms@4.0.0/node_modules/parse-ms/index.js","webpack://@dev/web/../../node_modules/.pnpm/pretty-ms@9.2.0/node_modules/pretty-ms/index.js","webpack://@dev/web/../../node_modules/.pnpm/use-asset@1.0.4_react@18.3.1/node_modules/use-asset/dist/index.js","webpack://@dev/web/../status/src/utils/index.ts","webpack://@dev/web/../status/src/containers/index.tsx","webpack://@dev/web/../../node_modules/.pnpm/pretty-bytes@6.1.1/node_modules/pretty-bytes/index.js"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","const toZeroIfInfinity = value => Number.isFinite(value) ? value : 0;\n\nfunction parseNumber(milliseconds) {\n\treturn {\n\t\tdays: Math.trunc(milliseconds / 86_400_000),\n\t\thours: Math.trunc(milliseconds / 3_600_000 % 24),\n\t\tminutes: Math.trunc(milliseconds / 60_000 % 60),\n\t\tseconds: Math.trunc(milliseconds / 1000 % 60),\n\t\tmilliseconds: Math.trunc(milliseconds % 1000),\n\t\tmicroseconds: Math.trunc(toZeroIfInfinity(milliseconds * 1000) % 1000),\n\t\tnanoseconds: Math.trunc(toZeroIfInfinity(milliseconds * 1e6) % 1000),\n\t};\n}\n\nfunction parseBigint(milliseconds) {\n\treturn {\n\t\tdays: milliseconds / 86_400_000n,\n\t\thours: milliseconds / 3_600_000n % 24n,\n\t\tminutes: milliseconds / 60_000n % 60n,\n\t\tseconds: milliseconds / 1000n % 60n,\n\t\tmilliseconds: milliseconds % 1000n,\n\t\tmicroseconds: 0n,\n\t\tnanoseconds: 0n,\n\t};\n}\n\nexport default function parseMilliseconds(milliseconds) {\n\tswitch (typeof milliseconds) {\n\t\tcase 'number': {\n\t\t\tif (Number.isFinite(milliseconds)) {\n\t\t\t\treturn parseNumber(milliseconds);\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase 'bigint': {\n\t\t\treturn parseBigint(milliseconds);\n\t\t}\n\n\t\t// No default\n\t}\n\n\tthrow new TypeError('Expected a finite number or bigint');\n}\n","import parseMilliseconds from 'parse-ms';\n\nconst isZero = value => value === 0 || value === 0n;\nconst pluralize = (word, count) => (count === 1 || count === 1n) ? word : `${word}s`;\n\nconst SECOND_ROUNDING_EPSILON = 0.000_000_1;\nconst ONE_DAY_IN_MILLISECONDS = 24n * 60n * 60n * 1000n;\n\nexport default function prettyMilliseconds(milliseconds, options) {\n\tconst isBigInt = typeof milliseconds === 'bigint';\n\tif (!isBigInt && !Number.isFinite(milliseconds)) {\n\t\tthrow new TypeError('Expected a finite number or bigint');\n\t}\n\n\toptions = {...options};\n\n\tconst sign = milliseconds < 0 ? '-' : '';\n\tmilliseconds = milliseconds < 0 ? -milliseconds : milliseconds; // Cannot use `Math.abs()` because of BigInt support.\n\n\tif (options.colonNotation) {\n\t\toptions.compact = false;\n\t\toptions.formatSubMilliseconds = false;\n\t\toptions.separateMilliseconds = false;\n\t\toptions.verbose = false;\n\t}\n\n\tif (options.compact) {\n\t\toptions.unitCount = 1;\n\t\toptions.secondsDecimalDigits = 0;\n\t\toptions.millisecondsDecimalDigits = 0;\n\t}\n\n\tlet result = [];\n\n\tconst floorDecimals = (value, decimalDigits) => {\n\t\tconst flooredInterimValue = Math.floor((value * (10 ** decimalDigits)) + SECOND_ROUNDING_EPSILON);\n\t\tconst flooredValue = Math.round(flooredInterimValue) / (10 ** decimalDigits);\n\t\treturn flooredValue.toFixed(decimalDigits);\n\t};\n\n\tconst add = (value, long, short, valueString) => {\n\t\tif (\n\t\t\t(result.length === 0 || !options.colonNotation)\n\t\t\t&& isZero(value)\n\t\t\t&& !(options.colonNotation && short === 'm')) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalueString ??= String(value);\n\t\tif (options.colonNotation) {\n\t\t\tconst wholeDigits = valueString.includes('.') ? valueString.split('.')[0].length : valueString.length;\n\t\t\tconst minLength = result.length > 0 ? 2 : 1;\n\t\t\tvalueString = '0'.repeat(Math.max(0, minLength - wholeDigits)) + valueString;\n\t\t} else {\n\t\t\tvalueString += options.verbose ? ' ' + pluralize(long, value) : short;\n\t\t}\n\n\t\tresult.push(valueString);\n\t};\n\n\tconst parsed = parseMilliseconds(milliseconds);\n\tconst days = BigInt(parsed.days);\n\n\tif (options.hideYearAndDays) {\n\t\tadd((BigInt(days) * 24n) + BigInt(parsed.hours), 'hour', 'h');\n\t} else {\n\t\tif (options.hideYear) {\n\t\t\tadd(days, 'day', 'd');\n\t\t} else {\n\t\t\tadd(days / 365n, 'year', 'y');\n\t\t\tadd(days % 365n, 'day', 'd');\n\t\t}\n\n\t\tadd(Number(parsed.hours), 'hour', 'h');\n\t}\n\n\tadd(Number(parsed.minutes), 'minute', 'm');\n\n\tif (!options.hideSeconds) {\n\t\tif (\n\t\t\toptions.separateMilliseconds\n\t\t\t|| options.formatSubMilliseconds\n\t\t\t|| (!options.colonNotation && milliseconds < 1000)\n\t\t) {\n\t\t\tconst seconds = Number(parsed.seconds);\n\t\t\tconst milliseconds = Number(parsed.milliseconds);\n\t\t\tconst microseconds = Number(parsed.microseconds);\n\t\t\tconst nanoseconds = Number(parsed.nanoseconds);\n\n\t\t\tadd(seconds, 'second', 's');\n\n\t\t\tif (options.formatSubMilliseconds) {\n\t\t\t\tadd(milliseconds, 'millisecond', 'ms');\n\t\t\t\tadd(microseconds, 'microsecond', 'µs');\n\t\t\t\tadd(nanoseconds, 'nanosecond', 'ns');\n\t\t\t} else {\n\t\t\t\tconst millisecondsAndBelow\n\t\t\t\t\t= milliseconds\n\t\t\t\t\t+ (microseconds / 1000)\n\t\t\t\t\t+ (nanoseconds / 1e6);\n\n\t\t\t\tconst millisecondsDecimalDigits\n\t\t\t\t\t= typeof options.millisecondsDecimalDigits === 'number'\n\t\t\t\t\t\t? options.millisecondsDecimalDigits\n\t\t\t\t\t\t: 0;\n\n\t\t\t\tconst roundedMilliseconds = millisecondsAndBelow >= 1\n\t\t\t\t\t? Math.round(millisecondsAndBelow)\n\t\t\t\t\t: Math.ceil(millisecondsAndBelow);\n\n\t\t\t\tconst millisecondsString = millisecondsDecimalDigits\n\t\t\t\t\t? millisecondsAndBelow.toFixed(millisecondsDecimalDigits)\n\t\t\t\t\t: roundedMilliseconds;\n\n\t\t\t\tadd(\n\t\t\t\t\tNumber.parseFloat(millisecondsString),\n\t\t\t\t\t'millisecond',\n\t\t\t\t\t'ms',\n\t\t\t\t\tmillisecondsString,\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tconst seconds = (\n\t\t\t\t(isBigInt ? Number(milliseconds % ONE_DAY_IN_MILLISECONDS) : milliseconds)\n\t\t\t\t/ 1000\n\t\t\t) % 60;\n\t\t\tconst secondsDecimalDigits\n\t\t\t\t= typeof options.secondsDecimalDigits === 'number'\n\t\t\t\t\t? options.secondsDecimalDigits\n\t\t\t\t\t: 1;\n\t\t\tconst secondsFixed = floorDecimals(seconds, secondsDecimalDigits);\n\t\t\tconst secondsString = options.keepDecimalsOnWholeSeconds\n\t\t\t\t? secondsFixed\n\t\t\t\t: secondsFixed.replace(/\\.0+$/, '');\n\t\t\tadd(Number.parseFloat(secondsString), 'second', 's', secondsString);\n\t\t}\n\t}\n\n\tif (result.length === 0) {\n\t\treturn sign + '0' + (options.verbose ? ' milliseconds' : 'ms');\n\t}\n\n\tconst separator = options.colonNotation ? ':' : ' ';\n\tif (typeof options.unitCount === 'number') {\n\t\tresult = result.slice(0, Math.max(options.unitCount, 1));\n\t}\n\n\treturn sign + result.join(separator);\n}\n","import deepEqual from 'fast-deep-equal';\n\nconst globalCache = [];\n\nfunction handleAsset(fn, cache, args, lifespan = 0, preload = false) {\n  for (const entry of cache) {\n    // Find a match\n    if (deepEqual(args, entry.args)) {\n      // If we're pre-loading and the element is present, just return\n      if (preload) return; // If an error occurred, throw\n\n      if (entry.error) throw entry.error; // If a response was successful, return\n\n      if (entry.response) return entry.response; // If the promise is still unresolved, throw\n\n      throw entry.promise;\n    }\n  } // The request is new or has changed.\n\n\n  const entry = {\n    args,\n    promise: // Make the promise request.\n    fn(...args) // Response can't be undefined or else the loop above wouldn't be able to return it\n    // This is for promises that do not return results (delays for instance)\n    .then(response => entry.response = response != null ? response : true).catch(e => entry.error = e != null ? e : 'unknown error').then(() => {\n      if (lifespan > 0) {\n        setTimeout(() => {\n          const index = cache.indexOf(entry);\n          if (index !== -1) cache.splice(index, 1);\n        }, lifespan);\n      }\n    })\n  };\n  cache.push(entry);\n  if (!preload) throw entry.promise;\n}\n\nfunction clear(cache, ...args) {\n  if (args === undefined || args.length === 0) cache.splice(0, cache.length);else {\n    const entry = cache.find(entry => deepEqual(args, entry.args));\n\n    if (entry) {\n      const index = cache.indexOf(entry);\n      if (index !== -1) cache.splice(index, 1);\n    }\n  }\n}\n\nfunction createAsset(fn, lifespan = 0) {\n  const cache = [];\n  return {\n    /**\n     * @throws Suspense Promise if asset is not yet ready\n     * @throws Error if the promise rejected for some reason\n     */\n    read: (...args) => handleAsset(fn, cache, args, lifespan),\n    preload: (...args) => void handleAsset(fn, cache, args, lifespan, true),\n    clear: (...args) => clear(cache, ...args),\n    peek: (...args) => {\n      var _cache$find;\n\n      return (_cache$find = cache.find(entry => deepEqual(args, entry.args))) == null ? void 0 : _cache$find.response;\n    }\n  };\n}\n\nfunction useAsset(fn, ...args) {\n  return handleAsset(fn, globalCache, args, useAsset.lifespan);\n}\n\nuseAsset.lifespan = 0;\n\nuseAsset.clear = (...args) => clear(globalCache, ...args);\n\nuseAsset.preload = (fn, ...args) => void handleAsset(fn, globalCache, args, useAsset.lifespan, true);\n\nuseAsset.peek = (...args) => {\n  var _globalCache$find;\n\n  return (_globalCache$find = globalCache.find(entry => deepEqual(args, entry.args))) == null ? void 0 : _globalCache$find.response;\n};\n\nexport { createAsset, useAsset };\n","export const getTotal = (usage: string[]) =>\n  Number(\n    ((\n      (usage\n        .map((line) => line.split(/\\s+/))\n        .find((cols) => cols[5].match(/hostname/)) || [])[4] || \"\"\n    ).match(/^(\\d+)%/) || [])[1],\n  );\n","import mqtt from \"mqtt\";\nimport React, { useEffect, useState } from \"react\";\nimport prettyMilliseconds from \"pretty-ms\";\nimport prettyBytes from \"pretty-bytes\";\nimport { createAsset } from \"use-asset\";\nimport type { StatusType } from \"../schema\";\nimport { getTotal } from \"../utils\";\n\nexport const API_URL = process.env.API_URL || \"\";\nexport const MQTT_URL = (({ hostname, protocol }) =>\n  `${protocol}//${hostname}:9001`)(\n  new URL(\n    `${process.env.MQTT_URL || window.location.href}`.replace(\n      /^mqtt:\\/\\//,\n      \"ws://\",\n    ),\n  ),\n);\n\n// https://github.com/pmndrs/use-asset\nconst asset = createAsset(() =>\n  fetch(`${API_URL}status`)\n    .then((res) => res.json())\n    .then<StatusType>(({ result }) => result)\n    .catch(\n      (error) => (\n        console.error(error),\n        {\n          databases: [],\n          usage: [],\n          cpus: [],\n          hostname: null,\n          platform: null,\n          type: null,\n          loadavg: null,\n          freemem: 0,\n          totalmem: 0,\n          uptime: 0,\n        }\n      ),\n    ),\n);\n\nfunction Status() {\n  const [status, setStatus] = useState({});\n\n  useEffect(() => {\n    const client = mqtt.connect(MQTT_URL);\n\n    console.log({ MQTT_URL });\n\n    client.on(\"connect\", () => {\n      client.subscribe(\"status\", (err) => {\n        // if (!err) {\n        //   client.publish(\"presence\", \"Hello mqtt\");\n        // }\n      });\n    });\n\n    client.on(\"message\", (_topic, message) => {\n      // message is Buffer\n      const result = JSON.parse(message.toString());\n      setStatus((status) => ({\n        ...status,\n        [result.hostname]: result,\n      }));\n    });\n\n    return () => {\n      client.end();\n    };\n  }, []);\n\n  return (\n    <div>\n      <a\n        href=\"http://www.emqx.io/online-mqtt-client\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        online-mqtt-client\n      </a>\n      <pre>{JSON.stringify(status, null, 2)}</pre>\n    </div>\n  );\n}\n\nexport default function Section() {\n  const result = asset.read();\n\n  console.log({ result });\n  console.log({ total: getTotal(result.usage) });\n\n  return (\n    <section>\n      <h2>Status</h2>\n      <Status />\n      <h3>databases</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>name</th>\n            <th>size</th>\n          </tr>\n          {result.databases.map(({ name, size }, key) => (\n            <tr key={key}>\n              <td>{name}</td>\n              <td>{size}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <h3>disks</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>filesystem</th>\n            <th>size</th>\n            <th>used</th>\n            <th>avail</th>\n            <th>capacity</th>\n          </tr>\n          {result.usage.map((line, key) => (\n            <tr key={key}>\n              <td colSpan={5}>{line}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <h3>cpus</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>model</th>\n            <th>speed</th>\n            <th>times</th>\n          </tr>\n          {result.cpus.map(({ model, speed, times }, key) => (\n            <tr key={key}>\n              <td>{model}</td>\n              <td>{speed}</td>\n              <td>\n                <pre>{JSON.stringify(times, null, 2)}</pre>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <h3>host</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>hostname</th>\n            <th>platform</th>\n            <th>type</th>\n            <th>loadavg</th>\n          </tr>\n          {[result].map(({ hostname, platform, type, loadavg }, key) => (\n            <tr key={key}>\n              <td>{hostname}</td>\n              <td>{platform}</td>\n              <td>{type}</td>\n              <td>\n                <pre>{JSON.stringify(loadavg, null, 2)}</pre>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <h3>mem</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>freemem</th>\n            <th>totalmem</th>\n            <th>usage</th>\n          </tr>\n          {[result].map(({ freemem, totalmem }, key) => (\n            <tr key={key}>\n              <td>{prettyBytes(freemem)}</td>\n              <td>{prettyBytes(totalmem)}</td>\n              <td>{prettyBytes(totalmem - freemem)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <h3>uptime</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>uptime</th>\n          </tr>\n          {[result].map(({ uptime }, key) => (\n            <tr key={key}>\n              <td>{prettyMilliseconds(uptime * 1000)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <pre>{JSON.stringify(result, null, 2)}</pre>\n    </section>\n  );\n}\n","const BYTE_UNITS = [\n\t'B',\n\t'kB',\n\t'MB',\n\t'GB',\n\t'TB',\n\t'PB',\n\t'EB',\n\t'ZB',\n\t'YB',\n];\n\nconst BIBYTE_UNITS = [\n\t'B',\n\t'KiB',\n\t'MiB',\n\t'GiB',\n\t'TiB',\n\t'PiB',\n\t'EiB',\n\t'ZiB',\n\t'YiB',\n];\n\nconst BIT_UNITS = [\n\t'b',\n\t'kbit',\n\t'Mbit',\n\t'Gbit',\n\t'Tbit',\n\t'Pbit',\n\t'Ebit',\n\t'Zbit',\n\t'Ybit',\n];\n\nconst BIBIT_UNITS = [\n\t'b',\n\t'kibit',\n\t'Mibit',\n\t'Gibit',\n\t'Tibit',\n\t'Pibit',\n\t'Eibit',\n\t'Zibit',\n\t'Yibit',\n];\n\n/*\nFormats the given number using `Number#toLocaleString`.\n- If locale is a string, the value is expected to be a locale-key (for example: `de`).\n- If locale is true, the system default locale is used for translation.\n- If no value for locale is specified, the number is returned unmodified.\n*/\nconst toLocaleString = (number, locale, options) => {\n\tlet result = number;\n\tif (typeof locale === 'string' || Array.isArray(locale)) {\n\t\tresult = number.toLocaleString(locale, options);\n\t} else if (locale === true || options !== undefined) {\n\t\tresult = number.toLocaleString(undefined, options);\n\t}\n\n\treturn result;\n};\n\nexport default function prettyBytes(number, options) {\n\tif (!Number.isFinite(number)) {\n\t\tthrow new TypeError(`Expected a finite number, got ${typeof number}: ${number}`);\n\t}\n\n\toptions = {\n\t\tbits: false,\n\t\tbinary: false,\n\t\tspace: true,\n\t\t...options,\n\t};\n\n\tconst UNITS = options.bits\n\t\t? (options.binary ? BIBIT_UNITS : BIT_UNITS)\n\t\t: (options.binary ? BIBYTE_UNITS : BYTE_UNITS);\n\n\tconst separator = options.space ? ' ' : '';\n\n\tif (options.signed && number === 0) {\n\t\treturn ` 0${separator}${UNITS[0]}`;\n\t}\n\n\tconst isNegative = number < 0;\n\tconst prefix = isNegative ? '-' : (options.signed ? '+' : '');\n\n\tif (isNegative) {\n\t\tnumber = -number;\n\t}\n\n\tlet localeOptions;\n\n\tif (options.minimumFractionDigits !== undefined) {\n\t\tlocaleOptions = {minimumFractionDigits: options.minimumFractionDigits};\n\t}\n\n\tif (options.maximumFractionDigits !== undefined) {\n\t\tlocaleOptions = {maximumFractionDigits: options.maximumFractionDigits, ...localeOptions};\n\t}\n\n\tif (number < 1) {\n\t\tconst numberString = toLocaleString(number, options.locale, localeOptions);\n\t\treturn prefix + numberString + separator + UNITS[0];\n\t}\n\n\tconst exponent = Math.min(Math.floor(options.binary ? Math.log(number) / Math.log(1024) : Math.log10(number) / 3), UNITS.length - 1);\n\tnumber /= (options.binary ? 1024 : 1000) ** exponent;\n\n\tif (!localeOptions) {\n\t\tnumber = number.toPrecision(3);\n\t}\n\n\tconst numberString = toLocaleString(Number(number), options.locale, localeOptions);\n\n\tconst unit = UNITS[exponent];\n\n\treturn prefix + numberString + separator + unit;\n}\n"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","toZeroIfInfinity","value","Number","isFinite","isZero","pluralize","word","count","SECOND_ROUNDING_EPSILON","ONE_DAY_IN_MILLISECONDS","prettyMilliseconds","milliseconds","options","isBigInt","TypeError","sign","colonNotation","compact","formatSubMilliseconds","separateMilliseconds","verbose","unitCount","secondsDecimalDigits","millisecondsDecimalDigits","result","add","long","short","valueString","String","wholeDigits","includes","split","minLength","repeat","Math","max","push","parsed","days","trunc","hours","minutes","seconds","microseconds","nanoseconds","parseNumber","parseBigint","parseMilliseconds","BigInt","hideYearAndDays","hideYear","hideSeconds","millisecondsAndBelow","roundedMilliseconds","round","ceil","millisecondsString","toFixed","parseFloat","secondsFixed","decimalDigits","flooredInterimValue","floor","floorDecimals","secondsString","keepDecimalsOnWholeSeconds","replace","separator","slice","join","globalCache","handleAsset","fn","cache","args","lifespan","preload","entry","error","response","promise","then","catch","e","setTimeout","index","indexOf","splice","clear","undefined","find","useAsset","peek","_globalCache$find","getTotal","usage","map","line","cols","match","MQTT_URL","hostname","protocol","URL","window","location","href","asset","read","_cache$find","createAsset","fetch","res","json","console","databases","cpus","platform","type","loadavg","freemem","totalmem","uptime","Status","status","setStatus","useState","useEffect","client","mqtt","connect","log","on","subscribe","err","_topic","message","JSON","parse","end","React","rel","target","stringify","Section","total","name","size","colSpan","model","speed","times","prettyBytes","BYTE_UNITS","BIBYTE_UNITS","BIT_UNITS","BIBIT_UNITS","toLocaleString","number","locale","UNITS","bits","binary","space","signed","isNegative","prefix","localeOptions","minimumFractionDigits","maximumFractionDigits","exponent","min","log10","toPrecision"],"sourceRoot":""}
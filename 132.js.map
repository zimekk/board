{"version":3,"file":"132.js","mappings":"sMAIA,SAASA,GAAK,WAAEC,IACd,MAAMC,GAAQC,EAAAA,EAAAA,UAAQ,KACpB,IAAIC,EAAU,CACZC,aAAaC,EAAAA,EAAAA,GAAQ,IAAIC,KAAQ,GACjCC,SAASC,EAAAA,EAAAA,GAAQ,IAAIF,KAAQ,KAG/B,MAAMG,EAAWC,IAAAA,gBAAuBV,EAAYG,GAC9CF,EAAQ,GACd,KAAOQ,EAASE,YACdV,EAAMW,KAAKH,EAASI,OAAOC,YACvBb,EAAMc,OAAS,MAIrB,OAAOd,CAAK,GACX,CAACD,IAEJ,OACEgB,EAAAA,cAAA,WACEA,EAAAA,cAAA,WACEA,EAAAA,cAAA,SAAIhB,IAELC,EAAMgB,KAAI,CAACC,EAAOC,IACjBH,EAAAA,cAAA,OAAKG,IAAKA,IAAMC,EAAAA,EAAAA,IAAOF,EAAO,0BAItC,CACe,SAASG,IAEtB,MAAOC,IAAQC,EAAAA,EAAAA,WAAS,IAAM,CAE5B,YACA,6BACA,aACA,aACA,cACA,gBAGF,OACEP,EAAAA,cAAA,eACEA,EAAAA,cAAA,UAAI,QACHM,EAAKL,KAAI,CAACjB,EAAYmB,IACrBH,EAAAA,cAACjB,EAAI,CAACoB,IAAKA,EAAKnB,WAAYA,MAIpC,C","sources":["webpack://@dev/web/../cron/src/containers/index.tsx"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport parser from \"cron-parser\";\nimport { addDays, format, subDays } from \"date-fns\";\n\nfunction Cron({ expression }: { expression: string }) {\n  const dates = useMemo(() => {\n    var options = {\n      currentDate: subDays(new Date(), 1),\n      endDate: addDays(new Date(), 30),\n      // iterator: true\n    };\n    const interval = parser.parseExpression(expression, options);\n    const dates = [];\n    while (interval.hasNext()) {\n      dates.push(interval.next().toDate());\n      if (dates.length > 5) {\n        break;\n      }\n    }\n    return dates;\n  }, [expression]);\n\n  return (\n    <div>\n      <div>\n        <b>{expression}</b>\n      </div>\n      {dates.map((value, key) => (\n        <div key={key}>{format(value, \"yyyy-MM-dd HH:mm:ss\")}</div>\n      ))}\n    </div>\n  );\n}\nexport default function Section() {\n  // https://elmah.io/tools/cron-parser/#*_*_*_*_*\n  const [cron] = useState(() => [\n    // \"*/22 * * * *\",\n    \"0 9 1 * *\", // \"At 09:00 AM, on day 1 of the month\"\n    \"0 9 1,5,10,15,20,25,30 * *\", // \"At 09:00 AM, on day 1, 5, 10, 15, 20, 25, and 30 of the month\"\n    \"0 9 10 * *\", // \"At 09:00 AM, on day 10 of the month\"\n    \"0 9 20 * *\", // \"At 09:00 AM, on day 20 of the month\"\n    \"15 8 23 * *\", // \"At 08:15 AM, on day 23 of the month\"\n    \"0 9 28 * *\", // \"At 09:00 AM, on day 28 of the month\"\n  ]);\n\n  return (\n    <section>\n      <h2>Cron</h2>\n      {cron.map((expression, key) => (\n        <Cron key={key} expression={expression} />\n      ))}\n    </section>\n  );\n}\n"],"names":["Cron","expression","dates","useMemo","options","currentDate","subDays","Date","endDate","addDays","interval","parser","hasNext","push","next","toDate","length","React","map","value","key","format","Section","cron","useState"],"sourceRoot":""}
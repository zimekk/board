{"version":3,"file":"980.js","mappings":"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","sources":["webpack://@dev/web/../recipes/src/containers/index.tsx"],"sourcesContent":["import React, {\n  type MouseEventHandler,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\nimport ReactPlayer from \"react-player/youtube\";\nimport { Spinner } from \"@dev/video/components\";\nimport {\n  type BasicInfoType as InfoType,\n  BasicInfoSchema as InfoSchema,\n} from \"@dev/video/schema\";\n\ninterface RecipeType {\n  name: string;\n  link?: string;\n  video?: string;\n  servings?: number;\n  ingredients?: (servings?: number) => string[];\n  preparation?: string[];\n  additions?: string[];\n}\n\nfunction Checklist({ list }: { list: string[] }) {\n  const [checked, setChecked] = useState<number[]>([]);\n\n  return (\n    <ol>\n      {list.map((item, index) => (\n        <li key={index}>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={checked.includes(index)}\n              onChange={({ target }) =>\n                setChecked((checked) =>\n                  target.checked\n                    ? checked.concat(index)\n                    : checked.filter((i) => i !== index),\n                )\n              }\n            />\n            <span>{item}</span>\n          </label>\n        </li>\n      ))}\n    </ol>\n  );\n}\n\nfunction Recipe({\n  recipe,\n  setVideoId,\n}: {\n  recipe: RecipeType;\n  setVideoId: (video: string) => void;\n}) {\n  const [info, setInfo] = useState<InfoType | null>(null);\n  const [servings, setServings] = useState<RecipeType[\"servings\"]>(\n    recipe.servings,\n  );\n\n  useEffect(() => {\n    fetch(`video/info?videoId=${recipe.video}`)\n      .then((res) => res.json())\n      .then((info) => InfoSchema.parseAsync(info))\n      .then(setInfo);\n  }, []);\n\n  const handleClick = useCallback<MouseEventHandler<HTMLAnchorElement>>(\n    (e) => (e.preventDefault(), setVideoId(recipe.video)),\n    [],\n  );\n\n  return (\n    <details>\n      <summary>\n        <h3 style={{ display: \"inline\" }}>{recipe.name}</h3>\n      </summary>\n      <section style={{ padding: \"1em\" }}>\n        {info ? (\n          <div>\n            {info.videoDetails.thumbnails\n              .slice(0, 1)\n              .map(({ url, width, height }, key) => (\n                <div key={key}>\n                  <a href={recipe.video} onClick={handleClick}>\n                    <img\n                      src={url}\n                      width={width}\n                      height={height}\n                      referrerPolicy=\"no-referrer\"\n                    />\n                  </a>\n                  <div>\n                    <strong>{info.videoDetails.title}</strong>\n                  </div>\n                </div>\n              ))}\n          </div>\n        ) : (\n          <Spinner />\n        )}\n        {recipe.servings && (\n          <div>\n            <label>\n              <select\n                value={servings}\n                onChange={({ target }) => setServings(Number(target.value))}\n              >\n                {[1, 2, 3, 4, 5, 6].map((servings) => (\n                  <option key={servings} value={servings}>\n                    {servings}\n                  </option>\n                ))}\n              </select>\n              <span>servings</span>\n            </label>\n          </div>\n        )}\n        {recipe.ingredients && (\n          <div>\n            <h4>ingredients</h4>\n            <Checklist list={recipe.ingredients(servings)} />\n          </div>\n        )}\n        {recipe.preparation && (\n          <div>\n            <h4>preparation</h4>\n            <Checklist list={recipe.preparation} />\n          </div>\n        )}\n        {recipe.additions && (\n          <div>\n            <h4>additions</h4>\n            <Checklist list={recipe.additions} />\n          </div>\n        )}\n        {recipe.link && (\n          <div>\n            <a\n              href={recipe.link}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              onClick={(e) => e.preventDefault()}\n            >\n              {recipe.link.split(\"//\")[1]}\n            </a>\n          </div>\n        )}\n      </section>\n    </details>\n  );\n}\n\nconst textToList = (text: string) =>\n  text\n    .split(\"\\n\")\n    .map((s) => s.trim())\n    .filter(Boolean);\n\nexport default function Section() {\n  const [videoId, setVideoId] = useState(\"\");\n  const [recipes] = useState<RecipeType[]>(() => [\n    {\n      name: \"Domowa PIZZA lepsza niż z pizzerii - przepis na najlepsze ciasto na pizzę 🍕\",\n      video: \"https://www.youtube.com/watch?v=fvm7uz4IUZ0\",\n      servings: 2,\n      ingredients: (servings) =>\n        ((rate) =>\n          textToList(`${350 * rate}g mąki 00 (W250-280)\n      ${200 * rate}-${210 * rate}ml zimnej wody\n      ${10 * rate}g soli (ok ${1.5 * rate} łyżeczki)\n      ${10 * rate}ml oliwy (ok ${2 * rate} łyżeczki)\n      ${1 * rate}g drożdży świeżych\n      `))(servings / 2),\n      preparation: textToList(`200ml wody + 1,5 łyżeczki sól + 2 łyżeczki oliwy\n      rozetrzeć w wodzie 1g drożdży + wsypać połowę mąki\n      dosypać resztę mąki\n      uformować kulkę i przykryć na 20 min wilgotną ściereczką (lub zwilżyć ciasto)\n      uformować blok i pozostawić szczelnie zamknięte na 1h\n      podzielić i uformować na kulki i pozostawić do wyrośnięcia 6-7h (2h pierwszego dnia + 4-5h kolejnego po wyjęciu z lodówki)\n      najlepiej włożyć do lodówki na 12h\n      `),\n      additions: textToList(`mozzarella świeża w kulce\n      parmezan\n      prosciutto cotto, anchois, oliwki, cebula, kapary, salami, pieczarki\n      `),\n    },\n    {\n      name: \"Ciasto na Napoletanę - Pierwszy TEST miksera planetarnego MAXIMA\",\n      video: \"https://www.youtube.com/watch?v=WS1XryTDFX0\",\n      ingredients: () =>\n        textToList(`500g mąki W260 - W280\n      300g wody\n      13g soli\n      1g drożdży świeżych\n      `),\n      preparation: textToList(`1 min (woda + drożdże + 1/2 mąki)\n      10 min (reszta mąki + sól)\n      uformować 5-10 min przerwy\n      1 min - wyrabianie\n      uformować i odczekać 10-15 min\n      12 h w temperaturze otoczenia\n      porcjowanie na kulki (4x 200 g)\n      pozostawić na 6-7h w temperaturze otoczenia\n      wrzucić do lodówki na kolejne 24h\n      wyciągnąć na 3-4h przed wypiekiem\n      `),\n    },\n    {\n      name: \"Puszysty omlet z 2 jaj 👌 pyszne i szybkie śniadanie w 10 minut 👍\",\n      video: \"https://www.youtube.com/watch?v=3HTbEWhpe9k\",\n      servings: 2,\n      ingredients: (servings) =>\n        ((rate) =>\n          textToList(`${2 * rate} jajka\n      ${0.5 * rate} szklanki mleka (${125 * rate}ml)\n      ${3 * rate} łyżki mąki (${50 * rate}g)\n      ${2 * rate} łyżki oleju (${20 * rate}g)\n      ${0.24 * rate} łyżeczki soli (${1 * rate}g)\n      `))(servings / 2),\n    },\n    {\n      name: \"Przepis na najlepsze bułki do burgerów - Brioche. Jak je najlepiej zrobić.\",\n      video: \"https://www.youtube.com/watch?v=PILcY1a5amc\",\n      ingredients: () =>\n        textToList(`60ml mleka\n      30ml wody\n      20g mąki typ 00\n      120ml mleka 35st\n      9g drożdży suchych\n      320g mąki\n      1 jajko + 1 żółtko\n      35g cukru i 7g soli\n      40g miękkiego masła\n      `),\n    },\n    {\n      name: \"Puszyste, maślane BUŁKI DO BURGERÓW! Nigdy nie jedliście lepszych!\",\n      video: \"https://www.youtube.com/watch?v=Nn3rVOEgC7Y\",\n      ingredients: () =>\n        textToList(`Przestudzony Tangzhong: 200g wody + 40 mąki\n      600g mąki pszennej typ 650\n      30g świeżych lub 10g suchych drożdży\n      40g cukru\n      1 jajko\n      1 żółtko\n      180g ciepłego mleka\n      120g masła\n      2 łyżeczki soli\n  Do posmarowania:\n      1 jajko + 2 łyżki mleka,\n      odrobina sezamu\n  Na wykończenie:\n      2 łyżki rozpuszczonego masła do posmarowania.\n      `),\n    },\n    {\n      name: \"Jak zrobić idealne BUŁKI do HAMBURGERÓW\",\n      link: \"https://policzona-szama.pl/blogs/przepisy/bulka-do-hamburgera-prosta-i-smaczna\",\n      video: \"https://www.youtube.com/watch?v=JL4jyt-LbWI\",\n      ingredients: () =>\n        textToList(`na 4 bułki do burgerów:\n      mąka typ 650 – 400 g\n      masło – 40 g\n      mleka 1,5% (bez laktozy – słodsze w smaku) – 150 ml\n      drożdże świeże – 25 g\n      sól – 5 g\n      cukier brązowy – 10 g\n      woda – 100 ml\n      do posmarowania: żółtko + mleko, sezam\n      `),\n    },\n    {\n      name: \"Najlepszy przepis na BUŁKI do BURGERÓW!\",\n      video: \"https://www.youtube.com/watch?v=apmsMiRddtU\",\n      ingredients: () =>\n        textToList(`300g mąki pszennej (w trakcie dodaliśmy jeszcze ok. 50g)\n      100 ml wody\n      150 ml mleka\n      40 g masła\n      2 jajka\n      5 g drożdży suchych **\n      1 łyzka cukru\n      pół łyżeczki soli\n      sezam/ czarnuszka/ mak\n      `),\n    },\n    {\n      name: 'Policzone SAJGONKI. Lepsze niż \"U CHIŃCZYKA\" ?',\n      video: \"https://www.youtube.com/watch?v=hszZgtrbYtY\",\n    },\n  ]);\n\n  return (\n    <section>\n      <h2>Recipes</h2>\n      <div style={{ padding: \"0 1em 1em\" }}>\n        {recipes.map((recipe, key) => (\n          <Recipe key={key} recipe={recipe} setVideoId={setVideoId} />\n        ))}\n      </div>\n      {videoId && (\n        <div\n          style={{\n            position: \"fixed\",\n            bottom: 0,\n            right: 0,\n            border: \"2px solid black\",\n            background: \"lightgray\",\n          }}\n        >\n          <ReactPlayer\n            url={videoId}\n            width={320}\n            height={180}\n            controls\n            light\n            loop\n            pip\n            playing\n          />\n        </div>\n      )}\n    </section>\n  );\n}\n"],"names":["Checklist","list","checked","setChecked","useState","React","map","item","index","key","type","includes","onChange","target","concat","filter","i","Recipe","recipe","setVideoId","info","setInfo","servings","setServings","useEffect","fetch","video","then","res","json","InfoSchema","parseAsync","handleClick","useCallback","e","preventDefault","style","display","name","padding","videoDetails","thumbnails","slice","url","width","height","href","onClick","src","referrerPolicy","title","Spinner","value","Number","ingredients","preparation","additions","link","rel","split","textToList","text","s","trim","Boolean","Section","videoId","recipes","rate","position","bottom","right","border","background","ReactPlayer","controls","light","loop","pip","playing"],"sourceRoot":""}
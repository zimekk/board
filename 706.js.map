{"version":3,"file":"706.js","mappings":"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","sources":["webpack://@dev/web/../video/src/components/Spinner/index.tsx","webpack://@dev/web/../video/src/schema/index.ts"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\n// https://codepen.io/GeoffreyCrofte/pen/ZQrgZm\n// https://codepen.io/supah/pen/BjYLdW\n// https://codesandbox.io/s/m3v440z36j\nconst StyledSpinner = styled.div`\n  display: inline-block;\n  width: 1em;\n  height: 1em;\n  position: relative;\n\n  .spinner {\n    position: absolute;\n    width: 1.5em;\n    height: 1.5em;\n    margin: 0;\n  }\n\n  svg {\n    animation: rotate 2s linear infinite;\n    margin: -25px 0 0 -25px;\n    width: 50px;\n    height: 50px;\n\n    & .path {\n      stroke: #5652bf;\n      stroke-linecap: round;\n      animation: dash 1.5s ease-in-out infinite;\n    }\n  }\n\n  @keyframes rotate {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes dash {\n    0% {\n      stroke-dasharray: 1, 150;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -35;\n    }\n    100% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -124;\n    }\n  }\n`;\n\nexport function Spinner() {\n  return (\n    <StyledSpinner>\n      <svg className=\"spinner\" viewBox=\"0 0 50 50\">\n        <circle\n          className=\"path\"\n          cx=\"25\"\n          cy=\"25\"\n          r=\"20\"\n          fill=\"none\"\n          strokeWidth=\"5\"\n        />\n      </svg>\n    </StyledSpinner>\n  );\n}\n","import { z } from \"zod\";\n\nexport const BasicInfoSchema = z.object({\n  page: z.string(),\n  player_response: z.object({\n    responseContext: z.object({\n      serviceTrackingParams: z.array(\n        z.object({\n          service: z.string(),\n          params: z.array(z.object({ key: z.string(), value: z.string() })),\n        }),\n      ),\n      maxAgeSeconds: z.number(),\n      mainAppWebResponseContext: z.object({\n        loggedOut: z.boolean(),\n        trackingParam: z.string(),\n      }),\n      webResponseContextExtensionData: z.object({ hasDecorated: z.boolean() }),\n    }),\n    playabilityStatus: z.object({\n      status: z.string(),\n      playableInEmbed: z.boolean(),\n      miniplayer: z.object({\n        miniplayerRenderer: z.object({ playbackMode: z.string() }),\n      }),\n      contextParams: z.string(),\n    }),\n    streamingData: z.object({\n      expiresInSeconds: z.string(),\n      formats: z.array(\n        z.object({\n          itag: z.number(),\n          mimeType: z.string(),\n          bitrate: z.number(),\n          width: z.number(),\n          height: z.number(),\n          lastModified: z.string(),\n          quality: z.string(),\n          fps: z.number(),\n          qualityLabel: z.string(),\n          projectionType: z.string(),\n          audioQuality: z.string(),\n          approxDurationMs: z.string(),\n          audioSampleRate: z.string(),\n          audioChannels: z.number(),\n          signatureCipher: z.string().optional(),\n        }),\n      ),\n      adaptiveFormats: z\n        .object({\n          // itag: z.number(),\n          // mimeType: z.string(),\n          // bitrate: z.number(),\n          // initRange: z.object({ start: z.string(), end: z.string() }),\n          // indexRange: z.object({ start: z.string(), end: z.string() }),\n          // lastModified: z.string(),\n          // contentLength: z.string(),\n          // quality: z.string(),\n          // projectionType: z.string(),\n          // averageBitrate: z.number(),\n          // audioQuality: z.string(),\n          // approxDurationMs: z.string(),\n          // audioSampleRate: z.string(),\n          // audioChannels: z.number(),\n          // loudnessDb: z.number(),\n          // signatureCipher: z.string()\n        })\n        .array(),\n    }),\n    playbackTracking: z.object({\n      videostatsPlaybackUrl: z.object({ baseUrl: z.string() }),\n      videostatsDelayplayUrl: z.object({ baseUrl: z.string() }),\n      videostatsWatchtimeUrl: z.object({ baseUrl: z.string() }),\n      ptrackingUrl: z.object({ baseUrl: z.string() }),\n      qoeUrl: z.object({ baseUrl: z.string() }),\n      atrUrl: z.object({\n        baseUrl: z.string(),\n        elapsedMediaTimeSeconds: z.number(),\n      }),\n      videostatsScheduledFlushWalltimeSeconds: z.array(z.number()),\n      videostatsDefaultFlushIntervalSeconds: z.number(),\n    }),\n    captions: z\n      .object({\n        playerCaptionsTracklistRenderer: z.object({\n          captionTracks: z.array(\n            z.object({\n              baseUrl: z.string(),\n              name: z.object({ simpleText: z.string() }),\n              vssId: z.string(),\n              languageCode: z.string(),\n              isTranslatable: z.boolean(),\n              trackName: z.string(),\n            }),\n          ),\n          audioTracks: z.array(\n            z.object({\n              // captionTrackIndices: z.array(z.number()),\n              // defaultCaptionTrackIndex: z.number(),\n              // visibility: z.string(),\n              // hasDefaultTrack: z.boolean(),\n              // captionsInitialState: z.string()\n            }),\n          ),\n          translationLanguages: z.array(\n            z.object({\n              languageCode: z.string(),\n              languageName: z.object({ simpleText: z.string() }),\n            }),\n          ),\n          defaultAudioTrackIndex: z.number(),\n        }),\n      })\n      .optional(),\n    videoDetails: z.object({\n      videoId: z.string(),\n      title: z.string(),\n      lengthSeconds: z.string(),\n      keywords: z.array(z.string()).optional(),\n      channelId: z.string(),\n      isOwnerViewing: z.boolean(),\n      shortDescription: z.string(),\n      isCrawlable: z.boolean(),\n      thumbnail: z.object({\n        thumbnails: z.array(\n          z.object({ url: z.string(), width: z.number(), height: z.number() }),\n        ),\n      }),\n      allowRatings: z.boolean(),\n      viewCount: z.string(),\n      author: z.string(),\n      // isLowLatencyLiveStream: z.boolean(),\n      isPrivate: z.boolean(),\n      // isUnpluggedCorpus: z.boolean(),\n      // latencyClass: z.string(),\n      // isLiveContent: z.boolean()\n    }),\n    // annotations: z.array(\n    //   z.object({\n    //     playerAnnotationsExpandedRenderer: z.object({\n    //       featuredChannel: z.object({\n    //         startTimeMs: z.string(),\n    //         endTimeMs: z.string(),\n    //         watermark: z.object({\n    //           thumbnails: z.array(\n    //             z.object({\n    //               url: z.string(),\n    //               width: z.number(),\n    //               height: z.number()\n    //             })\n    //           )\n    //         }),\n    //         trackingParams: z.string(),\n    //         navigationEndpoint: z.object({\n    //           clickTrackingParams: z.string(),\n    //           commandMetadata: z.object({\n    //             webCommandMetadata: z.object({\n    //               url: z.string(),\n    //               webPageType: z.string(),\n    //               rootVe: z.number(),\n    //               apiUrl: z.string()\n    //             })\n    //           }),\n    //           browseEndpoint: z.object({ browseId: z.string() })\n    //         }),\n    //         channelName: z.string(),\n    //         subscribeButton: z.object({\n    //           subscribeButtonRenderer: z.object({\n    //             buttonText: z.object({\n    //               runs: z.array(z.object({ text: z.string() }))\n    //             }),\n    //             subscribed: z.boolean(),\n    //             enabled: z.boolean(),\n    //             type: z.string(),\n    //             channelId: z.string(),\n    //             showPreferences: z.boolean(),\n    //             subscribedButtonText: z.object({\n    //               runs: z.array(z.object({ text: z.string() }))\n    //             }),\n    //             unsubscribedButtonText: z.object({\n    //               runs: z.array(z.object({ text: z.string() }))\n    //             }),\n    //             trackingParams: z.string(),\n    //             unsubscribeButtonText: z.object({\n    //               runs: z.array(z.object({ text: z.string() }))\n    //             }),\n    //             serviceEndpoints: z.array(\n    //               // z.union([\n    //                 // z.object({\n    //                 //   clickTrackingParams: z.string(),\n    //                 //   commandMetadata: z.object({\n    //                 //     webCommandMetadata: z.object({\n    //                 //       sendPost: z.boolean(),\n    //                 //       apiUrl: z.string()\n    //                 //     })\n    //                 //   }),\n    //                 //   subscribeEndpoint: z.object({\n    //                 //     channelIds: z.array(z.string()),\n    //                 //     params: z.string()\n    //                 //   })\n    //                 // }),\n    //                 z.object({\n    //                   clickTrackingParams: z.string(),\n    //                   commandMetadata: z.object({\n    //                     webCommandMetadata: z.object({ sendPost: z.boolean() })\n    //                   }),\n    //                   // signalServiceEndpoint: z.object({\n    //                   //   signal: z.string(),\n    //                   //   actions: z.array(\n    //                   //     z.object({\n    //                   //       clickTrackingParams: z.string(),\n    //                   //       openPopupAction: z.object({\n    //                   //         popup: z.object({\n    //                   //           confirmDialogRenderer: z.object({\n    //                   //             trackingParams: z.string(),\n    //                   //             dialogMessages: z.array(\n    //                   //               z.object({\n    //                   //                 runs: z.array(\n    //                   //                   z.object({ text: z.string() })\n    //                   //                 )\n    //                   //               })\n    //                   //             ),\n    //                   //             confirmButton: z.object({\n    //                   //               buttonRenderer: z.object({\n    //                   //                 style: z.string(),\n    //                   //                 size: z.string(),\n    //                   //                 isDisabled: z.boolean(),\n    //                   //                 text: z.object({\n    //                   //                   runs: z.array(\n    //                   //                     z.object({ text: z.string() })\n    //                   //                   )\n    //                   //                 }),\n    //                   //                 serviceEndpoint: z.object({\n    //                   //                   clickTrackingParams: z.string(),\n    //                   //                   commandMetadata: z.object({\n    //                   //                     webCommandMetadata: z.object({\n    //                   //                       sendPost: z.boolean(),\n    //                   //                       apiUrl: z.string()\n    //                   //                     })\n    //                   //                   }),\n    //                   //                   unsubscribeEndpoint: z.object({\n    //                   //                     channelIds: z.array(z.string()),\n    //                   //                     params: z.string()\n    //                   //                   })\n    //                   //                 }),\n    //                   //                 accessibility: z.object({\n    //                   //                   label: z.string()\n    //                   //                 }),\n    //                   //                 trackingParams: z.string()\n    //                   //               })\n    //                   //             }),\n    //                   //             cancelButton: z.object({\n    //                   //               buttonRenderer: z.object({\n    //                   //                 style: z.string(),\n    //                   //                 size: z.string(),\n    //                   //                 isDisabled: z.boolean(),\n    //                   //                 text: z.object({\n    //                   //                   runs: z.array(\n    //                   //                     z.object({ text: z.string() })\n    //                   //                   )\n    //                   //                 }),\n    //                   //                 accessibility: z.object({\n    //                   //                   label: z.string()\n    //                   //                 }),\n    //                   //                 trackingParams: z.string()\n    //                   //               })\n    //                   //             }),\n    //                   //             primaryIsCancel: z.boolean()\n    //                   //           })\n    //                   //         }),\n    //                   //         popupType: z.string()\n    //                   //       })\n    //                   //     })\n    //                   //   )\n    //                   // }).optional()\n    //                 })\n    //               // ])\n    //             ),\n    //             subscribeAccessibility: z.object({\n    //               accessibilityData: z.object({ label: z.string() })\n    //             }),\n    //             unsubscribeAccessibility: z.object({\n    //               accessibilityData: z.object({ label: z.string() })\n    //             }),\n    //             signInEndpoint: z.object({\n    //               clickTrackingParams: z.string(),\n    //               commandMetadata: z.object({\n    //                 webCommandMetadata: z.object({ url: z.string() })\n    //               })\n    //             })\n    //           })\n    //         })\n    //       }),\n    //       allowSwipeDismiss: z.boolean(),\n    //       annotationId: z.string()\n    //     })\n    //   })\n    // ),\n    playerConfig: z.object({\n      audioConfig: z.object({\n        loudnessDb: z.number(),\n        perceptualLoudnessDb: z.number(),\n        enablePerFormatLoudness: z.boolean(),\n      }),\n      streamSelectionConfig: z.object({ maxBitrate: z.string() }),\n      mediaCommonConfig: z.object({\n        dynamicReadaheadConfig: z.object({\n          maxReadAheadMediaTimeMs: z.number(),\n          minReadAheadMediaTimeMs: z.number(),\n          readAheadGrowthRateMs: z.number(),\n        }),\n      }),\n      webPlayerConfig: z.object({\n        useCobaltTvosDash: z.boolean(),\n        webPlayerActionsPorting: z.object({\n          getSharePanelCommand: z\n            .object({\n              clickTrackingParams: z.string(),\n              commandMetadata: z.object({\n                webCommandMetadata: z.object({\n                  sendPost: z.boolean(),\n                  apiUrl: z.string(),\n                }),\n              }),\n              webPlayerShareEntityServiceEndpoint: z.object({\n                serializedShareEntity: z.string(),\n              }),\n            })\n            .optional(),\n          subscribeCommand: z.object({\n            clickTrackingParams: z.string(),\n            commandMetadata: z.object({\n              webCommandMetadata: z.object({\n                sendPost: z.boolean(),\n                apiUrl: z.string(),\n              }),\n            }),\n            subscribeEndpoint: z.object({\n              channelIds: z.array(z.string()),\n              params: z.string(),\n            }),\n          }),\n          unsubscribeCommand: z.object({\n            clickTrackingParams: z.string(),\n            commandMetadata: z.object({\n              webCommandMetadata: z.object({\n                sendPost: z.boolean(),\n                apiUrl: z.string(),\n              }),\n            }),\n            unsubscribeEndpoint: z.object({\n              channelIds: z.array(z.string()),\n              params: z.string(),\n            }),\n          }),\n          addToWatchLaterCommand: z\n            .object({\n              clickTrackingParams: z.string(),\n              commandMetadata: z.object({\n                webCommandMetadata: z.object({\n                  sendPost: z.boolean(),\n                  apiUrl: z.string(),\n                }),\n              }),\n              playlistEditEndpoint: z.object({\n                playlistId: z.string(),\n                actions: z.array(\n                  z.object({ addedVideoId: z.string(), action: z.string() }),\n                ),\n              }),\n            })\n            .optional(),\n          removeFromWatchLaterCommand: z\n            .object({\n              clickTrackingParams: z.string(),\n              commandMetadata: z.object({\n                webCommandMetadata: z.object({\n                  sendPost: z.boolean(),\n                  apiUrl: z.string(),\n                }),\n              }),\n              playlistEditEndpoint: z.object({\n                playlistId: z.string(),\n                actions: z.array(\n                  z.object({ action: z.string(), removedVideoId: z.string() }),\n                ),\n              }),\n            })\n            .optional(),\n        }),\n      }),\n    }),\n    storyboards: z.object({\n      playerStoryboardSpecRenderer: z.object({\n        spec: z.string(),\n        recommendedLevel: z.number(),\n        highResolutionRecommendedLevel: z.number().optional(),\n      }),\n    }),\n    microformat: z.object({\n      playerMicroformatRenderer: z.object({\n        thumbnail: z.object({\n          thumbnails: z.array(\n            z.object({\n              url: z.string(),\n              width: z.number(),\n              height: z.number(),\n            }),\n          ),\n        }),\n        embed: z.object({\n          iframeUrl: z.string(),\n          width: z.number(),\n          height: z.number(),\n        }),\n        title: z.object({ simpleText: z.string() }),\n        description: z.object({ simpleText: z.string() }).optional(),\n        lengthSeconds: z.string(),\n        ownerProfileUrl: z.string(),\n        externalChannelId: z.string(),\n        isFamilySafe: z.boolean(),\n        availableCountries: z.array(z.string()),\n        isUnlisted: z.boolean(),\n        hasYpcMetadata: z.boolean(),\n        viewCount: z.string(),\n        category: z.string(),\n        publishDate: z.string(),\n        ownerChannelName: z.string(),\n        liveBroadcastDetails: z\n          .object({\n            isLiveNow: z.boolean(),\n            startTimestamp: z.string(),\n            endTimestamp: z.string(),\n          })\n          .optional(),\n        uploadDate: z.string(),\n      }),\n    }),\n    // cards: z.object({\n    //   cardCollectionRenderer: z.object({\n    //     cards: z.array(\n    //       z.object({\n    //         cardRenderer: z.object({\n    //           teaser: z.object({\n    //             simpleCardTeaserRenderer: z.object({\n    //               message: z.object({ simpleText: z.string() }),\n    //               trackingParams: z.string(),\n    //               prominent: z.boolean(),\n    //               logVisibilityUpdates: z.boolean(),\n    //               onTapCommand: z.object({\n    //                 clickTrackingParams: z.string(),\n    //                 changeEngagementPanelVisibilityAction: z.object({\n    //                   targetId: z.string(),\n    //                   visibility: z.string()\n    //                 })\n    //               })\n    //             })\n    //           }),\n    //           cueRanges: z.array(\n    //             z.object({\n    //               startCardActiveMs: z.string(),\n    //               endCardActiveMs: z.string(),\n    //               teaserDurationMs: z.string(),\n    //               iconAfterTeaserMs: z.string()\n    //             })\n    //           ),\n    //           trackingParams: z.string()\n    //         })\n    //       })\n    //     ),\n    //     headerText: z.object({ simpleText: z.string() }),\n    //     icon: z.object({\n    //       infoCardIconRenderer: z.object({ trackingParams: z.string() })\n    //     }),\n    //     closeButton: z.object({\n    //       infoCardIconRenderer: z.object({ trackingParams: z.string() })\n    //     }),\n    //     trackingParams: z.string(),\n    //     allowTeaserDismiss: z.boolean(),\n    //     logIconVisibilityUpdates: z.boolean()\n    //   })\n    // }),\n    trackingParams: z.string(),\n    attestation: z.object({\n      playerAttestationRenderer: z.object({\n        challenge: z.string(),\n        botguardData: z.object({\n          program: z.string(),\n          interpreterSafeUrl: z.object({\n            privateDoNotAccessOrElseTrustedResourceUrlWrappedValue: z.string(),\n          }),\n          serverEnvironment: z.number(),\n        }),\n      }),\n    }),\n    // adPlacements: z.array(\n    //   z.object({\n    //     // adPlacementRenderer: z.object({\n    //     //   config: z.object({\n    //     //     adPlacementConfig: z.object({\n    //     //       kind: z.string(),\n    //     //       adTimeOffset: z.object({\n    //     //         offsetStartMilliseconds: z.string(),\n    //     //         offsetEndMilliseconds: z.string()\n    //     //       }),\n    //     //       hideCueRangeMarker: z.boolean()\n    //     //     })\n    //     //   }),\n    //     //   renderer: z.object({ clientForecastingAdRenderer: z.object({}) }),\n    //     //   adSlotLoggingData: z.object({\n    //     //     serializedSlotAdServingDataEntry: z.string()\n    //     //   })\n    //     // })\n    //   })\n    // ),\n    adBreakHeartbeatParams: z.string(),\n    frameworkUpdates: z.object({\n      entityBatchUpdate: z.object({\n        mutations: z.array(\n          z.object({\n            entityKey: z.string(),\n            type: z.string(),\n            payload: z.object({\n              offlineabilityEntity: z.object({\n                key: z.string(),\n                addToOfflineButtonState: z.string(),\n              }),\n            }),\n          }),\n        ),\n        timestamp: z.object({ seconds: z.string(), nanos: z.number() }),\n      }),\n    }),\n  }),\n  response: z.object({\n    responseContext: z.object({\n      serviceTrackingParams: z.array(\n        z.object({\n          service: z.string(),\n          params: z.array(z.object({ key: z.string(), value: z.string() })),\n        }),\n      ),\n      mainAppWebResponseContext: z.object({\n        loggedOut: z.boolean(),\n        trackingParam: z.string(),\n      }),\n      webResponseContextExtensionData: z.object({\n        ytConfigData: z.object({\n          visitorData: z.string(),\n          rootVisualElementType: z.number(),\n        }),\n        webPrefetchData: z.object({\n          navigationEndpoints: z.array(\n            z.object({\n              clickTrackingParams: z.string(),\n              commandMetadata: z.object({\n                webCommandMetadata: z.object({\n                  url: z.string(),\n                  webPageType: z.string(),\n                  rootVe: z.number(),\n                }),\n              }),\n              watchEndpoint: z.object({\n                videoId: z.string(),\n                params: z.string(),\n                playerParams: z.string(),\n                watchEndpointSupportedPrefetchConfig: z.object({\n                  prefetchHintConfig: z.object({\n                    prefetchPriority: z.number(),\n                    countdownUiRelativeSecondsPrefetchCondition: z.number(),\n                  }),\n                }),\n              }),\n            }),\n          ),\n        }),\n        hasDecorated: z.boolean(),\n      }),\n    }),\n    contents: z.object({\n      twoColumnWatchNextResults: z.object({\n        results: z.object({\n          results: z.object({\n            contents: z.array(\n              // z.union([\n              z.object({\n                // videoPrimaryInfoRenderer: z.object({\n                //   title: z.object({\n                //     runs: z.array(z.object({ text: z.string() }))\n                //   }),\n                //   viewCount: z.object({\n                //     videoViewCountRenderer: z.object({\n                //       viewCount: z.object({ simpleText: z.string() }),\n                //       shortViewCount: z.object({ simpleText: z.string() }),\n                //       originalViewCount: z.string()\n                //     })\n                //   }),\n                //   videoActions: z.object({\n                //     menuRenderer: z.object({\n                //       items: z.array(\n                //         z.object({\n                //           // menuNavigationItemRenderer: z.object({\n                //           //   text: z.object({\n                //           //     runs: z.array(z.object({ text: z.string() }))\n                //           //   }),\n                //           //   icon: z.object({ iconType: z.string() }),\n                //           //   navigationEndpoint: z.object({\n                //           //     clickTrackingParams: z.string(),\n                //           //     commandMetadata: z.object({\n                //           //       webCommandMetadata: z.object({\n                //           //         ignoreNavigation: z.boolean()\n                //           //       })\n                //           //     }),\n                //           //     modalEndpoint: z.object({\n                //           //       modal: z.object({\n                //           //         modalWithTitleAndButtonRenderer: z.object({\n                //           //           title: z.object({\n                //           //             runs: z.array(\n                //           //               z.object({ text: z.string() })\n                //           //             )\n                //           //           }),\n                //           //           content: z.object({\n                //           //             runs: z.array(\n                //           //               // z.union([\n                //           //                 // z.object({ text: z.string() }),\n                //           //                 z.object({\n                //           //                   text: z.string(),\n                //           //                   navigationEndpoint: z.object({\n                //           //                     clickTrackingParams: z.string(),\n                //           //                     commandMetadata: z.object({\n                //           //                       webCommandMetadata: z.object({\n                //           //                         url: z.string(),\n                //           //                         webPageType: z.string(),\n                //           //                         rootVe: z.number()\n                //           //                       })\n                //           //                     }),\n                //           //                     urlEndpoint: z.object({\n                //           //                       url: z.string()\n                //           //                     })\n                //           //                   })\n                //           //                 })\n                //           //               // ])\n                //           //             )\n                //           //           }),\n                //           //           button: z.object({\n                //           //             buttonRenderer: z.object({\n                //           //               style: z.string(),\n                //           //               size: z.string(),\n                //           //               text: z.object({\n                //           //                 runs: z.array(\n                //           //                   z.object({ text: z.string() })\n                //           //                 )\n                //           //               }),\n                //           //               navigationEndpoint: z.object({\n                //           //                 clickTrackingParams: z.string(),\n                //           //                 commandMetadata: z.object({\n                //           //                   webCommandMetadata: z.object({\n                //           //                     url: z.string(),\n                //           //                     webPageType: z.string(),\n                //           //                     rootVe: z.number()\n                //           //                   })\n                //           //                 }),\n                //           //                 signInEndpoint: z.object({\n                //           //                   hack: z.boolean()\n                //           //                 })\n                //           //               }),\n                //           //               trackingParams: z.string(),\n                //           //               command: z.object({\n                //           //                 clickTrackingParams: z.string(),\n                //           //                 commandMetadata: z.object({\n                //           //                   webCommandMetadata: z.object({\n                //           //                     url: z.string(),\n                //           //                     webPageType: z.string(),\n                //           //                     rootVe: z.number()\n                //           //                   })\n                //           //                 }),\n                //           //                 signInEndpoint: z.object({\n                //           //                   hack: z.boolean()\n                //           //                 })\n                //           //               })\n                //           //             })\n                //           //           })\n                //           //         })\n                //           //       })\n                //           //     })\n                //           //   }),\n                //           //   trackingParams: z.string()\n                //           // })\n                //         })\n                //       ),\n                //       trackingParams: z.string(),\n                //       topLevelButtons: z.array(\n                //         // z.union([\n                //           z.object({\n                //             // segmentedLikeDislikeButtonRenderer: z.object({\n                //             //   likeButton: z.object({\n                //             //     toggleButtonRenderer: z.object({\n                //             //       style: z.object({ styleType: z.string() }),\n                //             //       isToggled: z.boolean(),\n                //             //       isDisabled: z.boolean(),\n                //             //       defaultIcon: z.object({\n                //             //         iconType: z.string()\n                //             //       }),\n                //             //       defaultText: z.object({\n                //             //         accessibility: z.object({\n                //             //           accessibilityData: z.object({\n                //             //             label: z.string()\n                //             //           })\n                //             //         }),\n                //             //         simpleText: z.string()\n                //             //       }),\n                //             //       toggledText: z.object({\n                //             //         accessibility: z.object({\n                //             //           accessibilityData: z.object({\n                //             //             label: z.string()\n                //             //           })\n                //             //         }),\n                //             //         simpleText: z.string()\n                //             //       }),\n                //             //       accessibility: z.object({\n                //             //         label: z.string()\n                //             //       }),\n                //             //       trackingParams: z.string(),\n                //             //       defaultTooltip: z.string(),\n                //             //       toggledTooltip: z.string(),\n                //             //       toggledStyle: z.object({\n                //             //         styleType: z.string()\n                //             //       }),\n                //             //       defaultNavigationEndpoint: z.object({\n                //             //         clickTrackingParams: z.string(),\n                //             //         commandMetadata: z.object({\n                //             //           webCommandMetadata: z.object({\n                //             //             ignoreNavigation: z.boolean()\n                //             //           })\n                //             //         }),\n                //             //         modalEndpoint: z.object({\n                //             //           modal: z.object({\n                //             //             modalWithTitleAndButtonRenderer: z.object(\n                //             //               {\n                //             //                 title: z.object({\n                //             //                   simpleText: z.string()\n                //             //                 }),\n                //             //                 content: z.object({\n                //             //                   simpleText: z.string()\n                //             //                 }),\n                //             //                 button: z.object({\n                //             //                   buttonRenderer: z.object({\n                //             //                     style: z.string(),\n                //             //                     size: z.string(),\n                //             //                     isDisabled: z.boolean(),\n                //             //                     text: z.object({\n                //             //                       simpleText: z.string()\n                //             //                     }),\n                //             //                     navigationEndpoint: z.object({\n                //             //                       clickTrackingParams: z.string(),\n                //             //                       commandMetadata: z.object({\n                //             //                         webCommandMetadata: z.object(\n                //             //                           {\n                //             //                             url: z.string(),\n                //             //                             webPageType: z.string(),\n                //             //                             rootVe: z.number()\n                //             //                           }\n                //             //                         )\n                //             //                       }),\n                //             //                       signInEndpoint: z.object({\n                //             //                         nextEndpoint: z.object({\n                //             //                           clickTrackingParams: z.string(),\n                //             //                           commandMetadata: z.object(\n                //             //                             {\n                //             //                               webCommandMetadata: z.object(\n                //             //                                 {\n                //             //                                   url: z.string(),\n                //             //                                   webPageType: z.string(),\n                //             //                                   rootVe: z.number()\n                //             //                                 }\n                //             //                               )\n                //             //                             }\n                //             //                           ),\n                //             //                           watchEndpoint: z.object(\n                //             //                             {\n                //             //                               videoId: z.string(),\n                //             //                               watchEndpointSupportedOnesieConfig: z.object(\n                //             //                                 {\n                //             //                                   html5PlaybackOnesieConfig: z.object(\n                //             //                                     {\n                //             //                                       commonConfig: z.object(\n                //             //                                         {\n                //             //                                           url: z.string()\n                //             //                                         }\n                //             //                                       )\n                //             //                                     }\n                //             //                                   )\n                //             //                                 }\n                //             //                               )\n                //             //                             }\n                //             //                           )\n                //             //                         }),\n                //             //                         idamTag: z.string()\n                //             //                       })\n                //             //                     }),\n                //             //                     trackingParams: z.string()\n                //             //                   })\n                //             //                 })\n                //             //               }\n                //             //             )\n                //             //           })\n                //             //         })\n                //             //       }),\n                //             //       accessibilityData: z.object({\n                //             //         accessibilityData: z.object({\n                //             //           label: z.string()\n                //             //         })\n                //             //       }),\n                //             //       toggleButtonSupportedData: z.object({\n                //             //         toggleButtonIdData: z.object({\n                //             //           id: z.string()\n                //             //         })\n                //             //       }),\n                //             //       targetId: z.string()\n                //             //     })\n                //             //   }),\n                //             //   dislikeButton: z.object({\n                //             //     toggleButtonRenderer: z.object({\n                //             //       style: z.object({ styleType: z.string() }),\n                //             //       isToggled: z.boolean(),\n                //             //       isDisabled: z.boolean(),\n                //             //       defaultIcon: z.object({\n                //             //         iconType: z.string()\n                //             //       }),\n                //             //       accessibility: z.object({\n                //             //         label: z.string()\n                //             //       }),\n                //             //       trackingParams: z.string(),\n                //             //       defaultTooltip: z.string(),\n                //             //       toggledTooltip: z.string(),\n                //             //       toggledStyle: z.object({\n                //             //         styleType: z.string()\n                //             //       }),\n                //             //       defaultNavigationEndpoint: z.object({\n                //             //         clickTrackingParams: z.string(),\n                //             //         commandMetadata: z.object({\n                //             //           webCommandMetadata: z.object({\n                //             //             ignoreNavigation: z.boolean()\n                //             //           })\n                //             //         }),\n                //             //         modalEndpoint: z.object({\n                //             //           modal: z.object({\n                //             //             modalWithTitleAndButtonRenderer: z.object(\n                //             //               {\n                //             //                 title: z.object({\n                //             //                   simpleText: z.string()\n                //             //                 }),\n                //             //                 content: z.object({\n                //             //                   simpleText: z.string()\n                //             //                 }),\n                //             //                 button: z.object({\n                //             //                   buttonRenderer: z.object({\n                //             //                     style: z.string(),\n                //             //                     size: z.string(),\n                //             //                     isDisabled: z.boolean(),\n                //             //                     text: z.object({\n                //             //                       simpleText: z.string()\n                //             //                     }),\n                //             //                     navigationEndpoint: z.object({\n                //             //                       clickTrackingParams: z.string(),\n                //             //                       commandMetadata: z.object({\n                //             //                         webCommandMetadata: z.object(\n                //             //                           {\n                //             //                             url: z.string(),\n                //             //                             webPageType: z.string(),\n                //             //                             rootVe: z.number()\n                //             //                           }\n                //             //                         )\n                //             //                       }),\n                //             //                       signInEndpoint: z.object({\n                //             //                         nextEndpoint: z.object({\n                //             //                           clickTrackingParams: z.string(),\n                //             //                           commandMetadata: z.object(\n                //             //                             {\n                //             //                               webCommandMetadata: z.object(\n                //             //                                 {\n                //             //                                   url: z.string(),\n                //             //                                   webPageType: z.string(),\n                //             //                                   rootVe: z.number()\n                //             //                                 }\n                //             //                               )\n                //             //                             }\n                //             //                           ),\n                //             //                           watchEndpoint: z.object(\n                //             //                             {\n                //             //                               videoId: z.string(),\n                //             //                               watchEndpointSupportedOnesieConfig: z.object(\n                //             //                                 {\n                //             //                                   html5PlaybackOnesieConfig: z.object(\n                //             //                                     {\n                //             //                                       commonConfig: z.object(\n                //             //                                         {\n                //             //                                           url: z.string()\n                //             //                                         }\n                //             //                                       )\n                //             //                                     }\n                //             //                                   )\n                //             //                                 }\n                //             //                               )\n                //             //                             }\n                //             //                           )\n                //             //                         }),\n                //             //                         idamTag: z.string()\n                //             //                       })\n                //             //                     }),\n                //             //                     trackingParams: z.string()\n                //             //                   })\n                //             //                 })\n                //             //               }\n                //             //             )\n                //             //           })\n                //             //         })\n                //             //       }),\n                //             //       accessibilityData: z.object({\n                //             //         accessibilityData: z.object({\n                //             //           label: z.string()\n                //             //         })\n                //             //       }),\n                //             //       toggleButtonSupportedData: z.object({\n                //             //         toggleButtonIdData: z.object({\n                //             //           id: z.string()\n                //             //         })\n                //             //       }),\n                //             //       targetId: z.string()\n                //             //     })\n                //             //   }),\n                //             //   likeCount: z.string()\n                //             // })\n                //           }),\n                //           // z.object({\n                //           //   buttonRenderer: z.object({\n                //           //     style: z.string(),\n                //           //     size: z.string(),\n                //           //     isDisabled: z.boolean(),\n                //           //     text: z.object({\n                //           //       runs: z.array(z.object({ text: z.string() }))\n                //           //     }),\n                //           //     serviceEndpoint: z.object({\n                //           //       clickTrackingParams: z.string(),\n                //           //       commandMetadata: z.object({\n                //           //         webCommandMetadata: z.object({\n                //           //           sendPost: z.boolean(),\n                //           //           apiUrl: z.string()\n                //           //         })\n                //           //       }),\n                //           //       shareEntityServiceEndpoint: z.object({\n                //           //         serializedShareEntity: z.string(),\n                //           //         commands: z.array(\n                //           //           z.object({\n                //           //             clickTrackingParams: z.string(),\n                //           //             openPopupAction: z.object({\n                //           //               popup: z.object({\n                //           //                 unifiedSharePanelRenderer: z.object(\n                //           //                   {\n                //           //                     trackingParams: z.string(),\n                //           //                     showLoadingSpinner: z.boolean()\n                //           //                   }\n                //           //                 )\n                //           //               }),\n                //           //               popupType: z.string(),\n                //           //               beReused: z.boolean()\n                //           //             })\n                //           //           })\n                //           //         )\n                //           //       })\n                //           //     }),\n                //           //     icon: z.object({ iconType: z.string() }),\n                //           //     tooltip: z.string(),\n                //           //     trackingParams: z.string(),\n                //           //     accessibilityData: z.object({\n                //           //       accessibilityData: z.object({\n                //           //         label: z.string()\n                //           //       })\n                //           //     })\n                //           //   })\n                //           // })\n                //         // ])\n                //       ),\n                //       accessibility: z.object({\n                //         accessibilityData: z.object({ label: z.string() })\n                //       }),\n                //       flexibleItems: z.array(\n                //         // z.union([\n                //           z.object({\n                //             menuFlexibleItemRenderer: z.object({\n                //               menuItem: z.object({\n                //                 // menuServiceItemDownloadRenderer: z.object({\n                //                 //   serviceEndpoint: z.object({\n                //                 //     clickTrackingParams: z.string(),\n                //                 //     offlineVideoEndpoint: z.object({\n                //                 //       videoId: z.string(),\n                //                 //       onAddCommand: z.object({\n                //                 //         clickTrackingParams: z.string(),\n                //                 //         getDownloadActionCommand: z.object({\n                //                 //           videoId: z.string(),\n                //                 //           params: z.string(),\n                //                 //           offlineabilityEntityKey: z.string()\n                //                 //         })\n                //                 //       })\n                //                 //     })\n                //                 //   }),\n                //                 //   trackingParams: z.string()\n                //                 // })\n                //               }),\n                //               topLevelButton: z.object({\n                //                 // downloadButtonRenderer: z.object({\n                //                 //   trackingParams: z.string(),\n                //                 //   style: z.string(),\n                //                 //   size: z.string(),\n                //                 //   targetId: z.string(),\n                //                 //   command: z.object({\n                //                 //     clickTrackingParams: z.string(),\n                //                 //     offlineVideoEndpoint: z.object({\n                //                 //       videoId: z.string(),\n                //                 //       onAddCommand: z.object({\n                //                 //         clickTrackingParams: z.string(),\n                //                 //         getDownloadActionCommand: z.object({\n                //                 //           videoId: z.string(),\n                //                 //           params: z.string(),\n                //                 //           offlineabilityEntityKey: z.string()\n                //                 //         })\n                //                 //       })\n                //                 //     })\n                //                 //   })\n                //                 // })\n                //               })\n                //             })\n                //           }),\n                //           // z.object({\n                //           //   menuFlexibleItemRenderer: z.object({\n                //           //     menuItem: z.object({\n                //           //       menuServiceItemRenderer: z.object({\n                //           //         text: z.object({\n                //           //           runs: z.array(\n                //           //             z.object({ text: z.string() })\n                //           //           )\n                //           //         }),\n                //           //         icon: z.object({ iconType: z.string() }),\n                //           //         serviceEndpoint: z.object({\n                //           //           clickTrackingParams: z.string(),\n                //           //           commandMetadata: z.object({\n                //           //             webCommandMetadata: z.object({\n                //           //               ignoreNavigation: z.boolean()\n                //           //             })\n                //           //           }),\n                //           //           modalEndpoint: z.object({\n                //           //             modal: z.object({\n                //           //               modalWithTitleAndButtonRenderer: z.object(\n                //           //                 {\n                //           //                   title: z.object({\n                //           //                     runs: z.array(\n                //           //                       z.object({ text: z.string() })\n                //           //                     )\n                //           //                   }),\n                //           //                   content: z.object({\n                //           //                     runs: z.array(\n                //           //                       z.object({ text: z.string() })\n                //           //                     )\n                //           //                   }),\n                //           //                   button: z.object({\n                //           //                     buttonRenderer: z.object({\n                //           //                       style: z.string(),\n                //           //                       size: z.string(),\n                //           //                       isDisabled: z.boolean(),\n                //           //                       text: z.object({\n                //           //                         simpleText: z.string()\n                //           //                       }),\n                //           //                       navigationEndpoint: z.object({\n                //           //                         clickTrackingParams: z.string(),\n                //           //                         commandMetadata: z.object({\n                //           //                           webCommandMetadata: z.object(\n                //           //                             {\n                //           //                               url: z.string(),\n                //           //                               webPageType: z.string(),\n                //           //                               rootVe: z.number()\n                //           //                             }\n                //           //                           )\n                //           //                         }),\n                //           //                         signInEndpoint: z.object({\n                //           //                           nextEndpoint: z.object({\n                //           //                             clickTrackingParams: z.string(),\n                //           //                             commandMetadata: z.object(\n                //           //                               {\n                //           //                                 webCommandMetadata: z.object(\n                //           //                                   {\n                //           //                                     url: z.string(),\n                //           //                                     webPageType: z.string(),\n                //           //                                     rootVe: z.number()\n                //           //                                   }\n                //           //                                 )\n                //           //                               }\n                //           //                             ),\n                //           //                             watchEndpoint: z.object(\n                //           //                               {\n                //           //                                 videoId: z.string(),\n                //           //                                 watchEndpointSupportedOnesieConfig: z.object(\n                //           //                                   {\n                //           //                                     html5PlaybackOnesieConfig: z.object(\n                //           //                                       {\n                //           //                                         commonConfig: z.object(\n                //           //                                           {\n                //           //                                             url: z.string()\n                //           //                                           }\n                //           //                                         )\n                //           //                                       }\n                //           //                                     )\n                //           //                                   }\n                //           //                                 )\n                //           //                               }\n                //           //                             )\n                //           //                           }),\n                //           //                           idamTag: z.string()\n                //           //                         })\n                //           //                       }),\n                //           //                       trackingParams: z.string()\n                //           //                     })\n                //           //                   })\n                //           //                 }\n                //           //               )\n                //           //             })\n                //           //           })\n                //           //         }),\n                //           //         trackingParams: z.string()\n                //           //       })\n                //           //     }),\n                //           //     topLevelButton: z.object({\n                //           //       buttonRenderer: z.object({\n                //           //         style: z.string(),\n                //           //         size: z.string(),\n                //           //         isDisabled: z.boolean(),\n                //           //         text: z.object({\n                //           //           runs: z.array(\n                //           //             z.object({ text: z.string() })\n                //           //           )\n                //           //         }),\n                //           //         icon: z.object({ iconType: z.string() }),\n                //           //         accessibility: z.object({\n                //           //           label: z.string()\n                //           //         }),\n                //           //         tooltip: z.string(),\n                //           //         trackingParams: z.string(),\n                //           //         accessibilityData: z.object({\n                //           //           accessibilityData: z.object({\n                //           //             label: z.string()\n                //           //           })\n                //           //         }),\n                //           //         command: z.object({\n                //           //           clickTrackingParams: z.string(),\n                //           //           commandMetadata: z.object({\n                //           //             webCommandMetadata: z.object({\n                //           //               ignoreNavigation: z.boolean()\n                //           //             })\n                //           //           }),\n                //           //           modalEndpoint: z.object({\n                //           //             modal: z.object({\n                //           //               modalWithTitleAndButtonRenderer: z.object(\n                //           //                 {\n                //           //                   title: z.object({\n                //           //                     runs: z.array(\n                //           //                       z.object({ text: z.string() })\n                //           //                     )\n                //           //                   }),\n                //           //                   content: z.object({\n                //           //                     runs: z.array(\n                //           //                       z.object({ text: z.string() })\n                //           //                     )\n                //           //                   }),\n                //           //                   button: z.object({\n                //           //                     buttonRenderer: z.object({\n                //           //                       style: z.string(),\n                //           //                       size: z.string(),\n                //           //                       isDisabled: z.boolean(),\n                //           //                       text: z.object({\n                //           //                         simpleText: z.string()\n                //           //                       }),\n                //           //                       navigationEndpoint: z.object({\n                //           //                         clickTrackingParams: z.string(),\n                //           //                         commandMetadata: z.object({\n                //           //                           webCommandMetadata: z.object(\n                //           //                             {\n                //           //                               url: z.string(),\n                //           //                               webPageType: z.string(),\n                //           //                               rootVe: z.number()\n                //           //                             }\n                //           //                           )\n                //           //                         }),\n                //           //                         signInEndpoint: z.object({\n                //           //                           nextEndpoint: z.object({\n                //           //                             clickTrackingParams: z.string(),\n                //           //                             commandMetadata: z.object(\n                //           //                               {\n                //           //                                 webCommandMetadata: z.object(\n                //           //                                   {\n                //           //                                     url: z.string(),\n                //           //                                     webPageType: z.string(),\n                //           //                                     rootVe: z.number()\n                //           //                                   }\n                //           //                                 )\n                //           //                               }\n                //           //                             ),\n                //           //                             watchEndpoint: z.object(\n                //           //                               {\n                //           //                                 videoId: z.string(),\n                //           //                                 watchEndpointSupportedOnesieConfig: z.object(\n                //           //                                   {\n                //           //                                     html5PlaybackOnesieConfig: z.object(\n                //           //                                       {\n                //           //                                         commonConfig: z.object(\n                //           //                                           {\n                //           //                                             url: z.string()\n                //           //                                           }\n                //           //                                         )\n                //           //                                       }\n                //           //                                     )\n                //           //                                   }\n                //           //                                 )\n                //           //                               }\n                //           //                             )\n                //           //                           }),\n                //           //                           idamTag: z.string()\n                //           //                         })\n                //           //                       }),\n                //           //                       trackingParams: z.string()\n                //           //                     })\n                //           //                   })\n                //           //                 }\n                //           //               )\n                //           //             })\n                //           //           })\n                //           //         })\n                //           //       })\n                //           //     })\n                //           //   })\n                //           // })\n                //         // ])\n                //       )\n                //     })\n                //   }),\n                //   // trackingParams: z.string(),\n                //   // superTitleLink: z.object({\n                //   //   runs: z.array(\n                //   //     // z.union([\n                //   //       // z.object({\n                //   //       //   text: z.string(),\n                //   //       //   navigationEndpoint: z.object({\n                //   //       //     clickTrackingParams: z.string(),\n                //   //       //     commandMetadata: z.object({\n                //   //       //       webCommandMetadata: z.object({\n                //   //       //         url: z.string(),\n                //   //       //         webPageType: z.string(),\n                //   //       //         rootVe: z.number(),\n                //   //       //         apiUrl: z.string()\n                //   //       //       })\n                //   //       //     }),\n                //   //       //     browseEndpoint: z.object({\n                //   //       //       browseId: z.string(),\n                //   //       //       params: z.string()\n                //   //       //     })\n                //   //       //   }),\n                //   //       //   loggingDirectives: z.object({\n                //   //       //     trackingParams: z.string(),\n                //   //       //     visibility: z.object({ types: z.string() }),\n                //   //       //     enableDisplayloggerExperiment: z.boolean()\n                //   //       //   })\n                //   //       // }),\n                //   //       z.object({ text: z.string() })\n                //   //     // ])\n                //   //   )\n                //   // }),\n                //   // dateText: z.object({ simpleText: z.string() }),\n                //   // relativeDateText: z.object({\n                //   //   accessibility: z.object({\n                //   //     accessibilityData: z.object({ label: z.string() })\n                //   //   }),\n                //   //   simpleText: z.string()\n                //   // })\n                // })\n              }),\n              // z.object({\n              //   videoSecondaryInfoRenderer: z.object({\n              //     owner: z.object({\n              //       videoOwnerRenderer: z.object({\n              //         thumbnail: z.object({\n              //           thumbnails: z.array(\n              //             z.object({\n              //               url: z.string(),\n              //               width: z.number(),\n              //               height: z.number()\n              //             })\n              //           )\n              //         }),\n              //         title: z.object({\n              //           runs: z.array(\n              //             z.object({\n              //               text: z.string(),\n              //               navigationEndpoint: z.object({\n              //                 clickTrackingParams: z.string(),\n              //                 commandMetadata: z.object({\n              //                   webCommandMetadata: z.object({\n              //                     url: z.string(),\n              //                     webPageType: z.string(),\n              //                     rootVe: z.number(),\n              //                     apiUrl: z.string()\n              //                   })\n              //                 }),\n              //                 browseEndpoint: z.object({\n              //                   browseId: z.string(),\n              //                   canonicalBaseUrl: z.string()\n              //                 })\n              //               })\n              //             })\n              //           )\n              //         }),\n              //         subscriptionButton: z.object({ type: z.string() }),\n              //         navigationEndpoint: z.object({\n              //           clickTrackingParams: z.string(),\n              //           commandMetadata: z.object({\n              //             webCommandMetadata: z.object({\n              //               url: z.string(),\n              //               webPageType: z.string(),\n              //               rootVe: z.number(),\n              //               apiUrl: z.string()\n              //             })\n              //           }),\n              //           browseEndpoint: z.object({\n              //             browseId: z.string(),\n              //             canonicalBaseUrl: z.string()\n              //           })\n              //         }),\n              //         subscriberCountText: z.object({\n              //           accessibility: z.object({\n              //             accessibilityData: z.object({ label: z.string() })\n              //           }),\n              //           simpleText: z.string()\n              //         }),\n              //         trackingParams: z.string(),\n              //         badges: z.array(\n              //           z.object({\n              //             metadataBadgeRenderer: z.object({\n              //               icon: z.object({ iconType: z.string() }),\n              //               style: z.string(),\n              //               tooltip: z.string(),\n              //               trackingParams: z.string(),\n              //               accessibilityData: z.object({\n              //                 label: z.string()\n              //               })\n              //             })\n              //           })\n              //         )\n              //       })\n              //     }),\n              //     subscribeButton: z.object({\n              //       subscribeButtonRenderer: z.object({\n              //         buttonText: z.object({\n              //           runs: z.array(z.object({ text: z.string() }))\n              //         }),\n              //         subscribed: z.boolean(),\n              //         enabled: z.boolean(),\n              //         type: z.string(),\n              //         channelId: z.string(),\n              //         showPreferences: z.boolean(),\n              //         subscribedButtonText: z.object({\n              //           runs: z.array(z.object({ text: z.string() }))\n              //         }),\n              //         unsubscribedButtonText: z.object({\n              //           runs: z.array(z.object({ text: z.string() }))\n              //         }),\n              //         trackingParams: z.string(),\n              //         unsubscribeButtonText: z.object({\n              //           runs: z.array(z.object({ text: z.string() }))\n              //         }),\n              //         subscribeAccessibility: z.object({\n              //           accessibilityData: z.object({ label: z.string() })\n              //         }),\n              //         unsubscribeAccessibility: z.object({\n              //           accessibilityData: z.object({ label: z.string() })\n              //         }),\n              //         notificationPreferenceButton: z.object({\n              //           subscriptionNotificationToggleButtonRenderer: z.object(\n              //             {\n              //               states: z.array(\n              //                 z.object({\n              //                   stateId: z.number(),\n              //                   nextStateId: z.number(),\n              //                   state: z.object({\n              //                     buttonRenderer: z.object({\n              //                       style: z.string(),\n              //                       size: z.string(),\n              //                       isDisabled: z.boolean(),\n              //                       icon: z.object({ iconType: z.string() }),\n              //                       accessibility: z.object({\n              //                         label: z.string()\n              //                       }),\n              //                       trackingParams: z.string(),\n              //                       accessibilityData: z.object({\n              //                         accessibilityData: z.object({\n              //                           label: z.string()\n              //                         })\n              //                       })\n              //                     })\n              //                   })\n              //                 })\n              //               ),\n              //               currentStateId: z.number(),\n              //               trackingParams: z.string(),\n              //               command: z.object({\n              //                 clickTrackingParams: z.string(),\n              //                 commandExecutorCommand: z.object({\n              //                   commands: z.array(\n              //                     z.object({\n              //                       clickTrackingParams: z.string(),\n              //                       openPopupAction: z.object({\n              //                         popup: z.object({\n              //                           menuPopupRenderer: z.object({\n              //                             items: z.array(\n              //                               z.union([\n              //                                 z.object({\n              //                                   menuServiceItemRenderer: z.object(\n              //                                     {\n              //                                       text: z.object({\n              //                                         simpleText: z.string()\n              //                                       }),\n              //                                       icon: z.object({\n              //                                         iconType: z.string()\n              //                                       }),\n              //                                       serviceEndpoint: z.object(\n              //                                         {\n              //                                           clickTrackingParams: z.string(),\n              //                                           commandMetadata: z.object(\n              //                                             {\n              //                                               webCommandMetadata: z.object(\n              //                                                 {\n              //                                                   sendPost: z.boolean(),\n              //                                                   apiUrl: z.string()\n              //                                                 }\n              //                                               )\n              //                                             }\n              //                                           ),\n              //                                           modifyChannelNotificationPreferenceEndpoint: z.object(\n              //                                             {\n              //                                               params: z.string()\n              //                                             }\n              //                                           )\n              //                                         }\n              //                                       ),\n              //                                       trackingParams: z.string(),\n              //                                       isSelected: z.boolean()\n              //                                     }\n              //                                   )\n              //                                 }),\n              //                                 z.object({\n              //                                   menuServiceItemRenderer: z.object(\n              //                                     {\n              //                                       text: z.object({\n              //                                         runs: z.array(\n              //                                           z.object({\n              //                                             text: z.string()\n              //                                           })\n              //                                         )\n              //                                       }),\n              //                                       icon: z.object({\n              //                                         iconType: z.string()\n              //                                       }),\n              //                                       serviceEndpoint: z.object(\n              //                                         {\n              //                                           clickTrackingParams: z.string(),\n              //                                           commandMetadata: z.object(\n              //                                             {\n              //                                               webCommandMetadata: z.object(\n              //                                                 {\n              //                                                   sendPost: z.boolean()\n              //                                                 }\n              //                                               )\n              //                                             }\n              //                                           ),\n              //                                           signalServiceEndpoint: z.object(\n              //                                             {\n              //                                               signal: z.string(),\n              //                                               actions: z.array(\n              //                                                 z.object({\n              //                                                   clickTrackingParams: z.string(),\n              //                                                   openPopupAction: z.object(\n              //                                                     {\n              //                                                       popup: z.object(\n              //                                                         {\n              //                                                           confirmDialogRenderer: z.object(\n              //                                                             {\n              //                                                               trackingParams: z.string(),\n              //                                                               dialogMessages: z.array(\n              //                                                                 z.object(\n              //                                                                   {\n              //                                                                     runs: z.array(\n              //                                                                       z.object(\n              //                                                                         {\n              //                                                                           text: z.string()\n              //                                                                         }\n              //                                                                       )\n              //                                                                     )\n              //                                                                   }\n              //                                                                 )\n              //                                                               ),\n              //                                                               confirmButton: z.object(\n              //                                                                 {\n              //                                                                   buttonRenderer: z.object(\n              //                                                                     {\n              //                                                                       style: z.string(),\n              //                                                                       size: z.string(),\n              //                                                                       isDisabled: z.boolean(),\n              //                                                                       text: z.object(\n              //                                                                         {\n              //                                                                           runs: z.array(\n              //                                                                             z.object(\n              //                                                                               {\n              //                                                                                 text: z.string()\n              //                                                                               }\n              //                                                                             )\n              //                                                                           )\n              //                                                                         }\n              //                                                                       ),\n              //                                                                       serviceEndpoint: z.object(\n              //                                                                         {\n              //                                                                           clickTrackingParams: z.string(),\n              //                                                                           commandMetadata: z.object(\n              //                                                                             {\n              //                                                                               webCommandMetadata: z.object(\n              //                                                                                 {\n              //                                                                                   sendPost: z.boolean(),\n              //                                                                                   apiUrl: z.string()\n              //                                                                                 }\n              //                                                                               )\n              //                                                                             }\n              //                                                                           ),\n              //                                                                           unsubscribeEndpoint: z.object(\n              //                                                                             {\n              //                                                                               channelIds: z.array(\n              //                                                                                 z.string()\n              //                                                                               ),\n              //                                                                               params: z.string()\n              //                                                                             }\n              //                                                                           )\n              //                                                                         }\n              //                                                                       ),\n              //                                                                       accessibility: z.object(\n              //                                                                         {\n              //                                                                           label: z.string()\n              //                                                                         }\n              //                                                                       ),\n              //                                                                       trackingParams: z.string()\n              //                                                                     }\n              //                                                                   )\n              //                                                                 }\n              //                                                               ),\n              //                                                               cancelButton: z.object(\n              //                                                                 {\n              //                                                                   buttonRenderer: z.object(\n              //                                                                     {\n              //                                                                       style: z.string(),\n              //                                                                       size: z.string(),\n              //                                                                       isDisabled: z.boolean(),\n              //                                                                       text: z.object(\n              //                                                                         {\n              //                                                                           runs: z.array(\n              //                                                                             z.object(\n              //                                                                               {\n              //                                                                                 text: z.string()\n              //                                                                               }\n              //                                                                             )\n              //                                                                           )\n              //                                                                         }\n              //                                                                       ),\n              //                                                                       accessibility: z.object(\n              //                                                                         {\n              //                                                                           label: z.string()\n              //                                                                         }\n              //                                                                       ),\n              //                                                                       trackingParams: z.string()\n              //                                                                     }\n              //                                                                   )\n              //                                                                 }\n              //                                                               ),\n              //                                                               primaryIsCancel: z.boolean()\n              //                                                             }\n              //                                                           )\n              //                                                         }\n              //                                                       ),\n              //                                                       popupType: z.string()\n              //                                                     }\n              //                                                   )\n              //                                                 })\n              //                                               )\n              //                                             }\n              //                                           )\n              //                                         }\n              //                                       ),\n              //                                       trackingParams: z.string()\n              //                                     }\n              //                                   )\n              //                                 })\n              //                               ])\n              //                             )\n              //                           })\n              //                         }),\n              //                         popupType: z.string()\n              //                       })\n              //                     })\n              //                   )\n              //                 })\n              //               }),\n              //               targetId: z.string(),\n              //               secondaryIcon: z.object({ iconType: z.string() })\n              //             }\n              //           )\n              //         }),\n              //         targetId: z.string(),\n              //         signInEndpoint: z.object({\n              //           clickTrackingParams: z.string(),\n              //           commandMetadata: z.object({\n              //             webCommandMetadata: z.object({\n              //               ignoreNavigation: z.boolean()\n              //             })\n              //           }),\n              //           modalEndpoint: z.object({\n              //             modal: z.object({\n              //               modalWithTitleAndButtonRenderer: z.object({\n              //                 title: z.object({ simpleText: z.string() }),\n              //                 content: z.object({ simpleText: z.string() }),\n              //                 button: z.object({\n              //                   buttonRenderer: z.object({\n              //                     style: z.string(),\n              //                     size: z.string(),\n              //                     isDisabled: z.boolean(),\n              //                     text: z.object({ simpleText: z.string() }),\n              //                     navigationEndpoint: z.object({\n              //                       clickTrackingParams: z.string(),\n              //                       commandMetadata: z.object({\n              //                         webCommandMetadata: z.object({\n              //                           url: z.string(),\n              //                           webPageType: z.string(),\n              //                           rootVe: z.number()\n              //                         })\n              //                       }),\n              //                       signInEndpoint: z.object({\n              //                         nextEndpoint: z.object({\n              //                           clickTrackingParams: z.string(),\n              //                           commandMetadata: z.object({\n              //                             webCommandMetadata: z.object({\n              //                               url: z.string(),\n              //                               webPageType: z.string(),\n              //                               rootVe: z.number()\n              //                             })\n              //                           }),\n              //                           watchEndpoint: z.object({\n              //                             videoId: z.string(),\n              //                             watchEndpointSupportedOnesieConfig: z.object(\n              //                               {\n              //                                 html5PlaybackOnesieConfig: z.object(\n              //                                   {\n              //                                     commonConfig: z.object({\n              //                                       url: z.string()\n              //                                     })\n              //                                   }\n              //                                 )\n              //                               }\n              //                             )\n              //                           })\n              //                         }),\n              //                         continueAction: z.string(),\n              //                         idamTag: z.string()\n              //                       })\n              //                     }),\n              //                     trackingParams: z.string()\n              //                   })\n              //                 })\n              //               })\n              //             })\n              //           })\n              //         }),\n              //         subscribedEntityKey: z.string(),\n              //         onSubscribeEndpoints: z.array(\n              //           z.object({\n              //             clickTrackingParams: z.string(),\n              //             commandMetadata: z.object({\n              //               webCommandMetadata: z.object({\n              //                 sendPost: z.boolean(),\n              //                 apiUrl: z.string()\n              //               })\n              //             }),\n              //             subscribeEndpoint: z.object({\n              //               channelIds: z.array(z.string()),\n              //               params: z.string()\n              //             })\n              //           })\n              //         ),\n              //         onUnsubscribeEndpoints: z.array(\n              //           z.object({\n              //             clickTrackingParams: z.string(),\n              //             commandMetadata: z.object({\n              //               webCommandMetadata: z.object({\n              //                 sendPost: z.boolean()\n              //               })\n              //             }),\n              //             signalServiceEndpoint: z.object({\n              //               signal: z.string(),\n              //               actions: z.array(\n              //                 z.object({\n              //                   clickTrackingParams: z.string(),\n              //                   openPopupAction: z.object({\n              //                     popup: z.object({\n              //                       confirmDialogRenderer: z.object({\n              //                         trackingParams: z.string(),\n              //                         dialogMessages: z.array(\n              //                           z.object({\n              //                             runs: z.array(\n              //                               z.object({ text: z.string() })\n              //                             )\n              //                           })\n              //                         ),\n              //                         confirmButton: z.object({\n              //                           buttonRenderer: z.object({\n              //                             style: z.string(),\n              //                             size: z.string(),\n              //                             isDisabled: z.boolean(),\n              //                             text: z.object({\n              //                               runs: z.array(\n              //                                 z.object({ text: z.string() })\n              //                               )\n              //                             }),\n              //                             serviceEndpoint: z.object({\n              //                               clickTrackingParams: z.string(),\n              //                               commandMetadata: z.object({\n              //                                 webCommandMetadata: z.object({\n              //                                   sendPost: z.boolean(),\n              //                                   apiUrl: z.string()\n              //                                 })\n              //                               }),\n              //                               unsubscribeEndpoint: z.object({\n              //                                 channelIds: z.array(z.string()),\n              //                                 params: z.string()\n              //                               })\n              //                             }),\n              //                             accessibility: z.object({\n              //                               label: z.string()\n              //                             }),\n              //                             trackingParams: z.string()\n              //                           })\n              //                         }),\n              //                         cancelButton: z.object({\n              //                           buttonRenderer: z.object({\n              //                             style: z.string(),\n              //                             size: z.string(),\n              //                             isDisabled: z.boolean(),\n              //                             text: z.object({\n              //                               runs: z.array(\n              //                                 z.object({ text: z.string() })\n              //                               )\n              //                             }),\n              //                             accessibility: z.object({\n              //                               label: z.string()\n              //                             }),\n              //                             trackingParams: z.string()\n              //                           })\n              //                         }),\n              //                         primaryIsCancel: z.boolean()\n              //                       })\n              //                     }),\n              //                     popupType: z.string()\n              //                   })\n              //                 })\n              //               )\n              //             })\n              //           })\n              //         )\n              //       })\n              //     }),\n              //     metadataRowContainer: z.object({\n              //       metadataRowContainerRenderer: z.object({\n              //         collapsedItemCount: z.number(),\n              //         trackingParams: z.string()\n              //       })\n              //     }),\n              //     showMoreText: z.object({ simpleText: z.string() }),\n              //     showLessText: z.object({ simpleText: z.string() }),\n              //     trackingParams: z.string(),\n              //     defaultExpanded: z.boolean(),\n              //     descriptionCollapsedLines: z.number(),\n              //     showMoreCommand: z.object({\n              //       clickTrackingParams: z.string(),\n              //       commandExecutorCommand: z.object({\n              //         commands: z.array(\n              //           z.union([\n              //             z.object({\n              //               clickTrackingParams: z.string(),\n              //               changeEngagementPanelVisibilityAction: z.object({\n              //                 targetId: z.string(),\n              //                 visibility: z.string()\n              //               })\n              //             }),\n              //             z.object({\n              //               clickTrackingParams: z.string(),\n              //               scrollToEngagementPanelCommand: z.object({\n              //                 targetId: z.string()\n              //               })\n              //             })\n              //           ])\n              //         )\n              //       })\n              //     }),\n              //     showLessCommand: z.object({\n              //       clickTrackingParams: z.string(),\n              //       changeEngagementPanelVisibilityAction: z.object({\n              //         targetId: z.string(),\n              //         visibility: z.string()\n              //       })\n              //     }),\n              //     attributedDescription: z.object({\n              //       content: z.string(),\n              //       commandRuns: z.array(\n              //         z.union([\n              //           z.object({\n              //             startIndex: z.number(),\n              //             length: z.number(),\n              //             onTap: z.object({\n              //               innertubeCommand: z.object({\n              //                 clickTrackingParams: z.string(),\n              //                 commandMetadata: z.object({\n              //                   webCommandMetadata: z.object({\n              //                     url: z.string(),\n              //                     webPageType: z.string(),\n              //                     rootVe: z.number()\n              //                   })\n              //                 }),\n              //                 urlEndpoint: z.object({\n              //                   url: z.string(),\n              //                   target: z.string(),\n              //                   nofollow: z.boolean()\n              //                 })\n              //               })\n              //             })\n              //           }),\n              //           z.object({\n              //             startIndex: z.number(),\n              //             length: z.number(),\n              //             onTap: z.object({\n              //               innertubeCommand: z.object({\n              //                 clickTrackingParams: z.string(),\n              //                 commandMetadata: z.object({\n              //                   webCommandMetadata: z.object({\n              //                     url: z.string(),\n              //                     webPageType: z.string(),\n              //                     rootVe: z.number(),\n              //                     apiUrl: z.string()\n              //                   })\n              //                 }),\n              //                 browseEndpoint: z.object({\n              //                   browseId: z.string(),\n              //                   params: z.string()\n              //                 })\n              //               })\n              //             }),\n              //             loggingDirectives: z.object({\n              //               trackingParams: z.string(),\n              //               enableDisplayloggerExperiment: z.boolean()\n              //             })\n              //           })\n              //         ])\n              //       ),\n              //       styleRuns: z.array(\n              //         z.object({\n              //           startIndex: z.number(),\n              //           length: z.number(),\n              //           styleRunExtensions: z.object({\n              //             styleRunColorMapExtension: z.object({\n              //               colorMap: z.array(\n              //                 z.object({ key: z.string(), value: z.number() })\n              //               )\n              //             })\n              //           })\n              //         })\n              //       ),\n              //       attachmentRuns: z.array(\n              //         z.object({\n              //           startIndex: z.number(),\n              //           length: z.number(),\n              //           element: z.object({\n              //             type: z.object({\n              //               imageType: z.object({\n              //                 image: z.object({\n              //                   sources: z.array(\n              //                     z.object({ url: z.string() })\n              //                   )\n              //                 })\n              //               })\n              //             }),\n              //             properties: z.object({\n              //               layoutProperties: z.object({\n              //                 height: z.object({\n              //                   value: z.number(),\n              //                   unit: z.string()\n              //                 }),\n              //                 width: z.object({\n              //                   value: z.number(),\n              //                   unit: z.string()\n              //                 }),\n              //                 margin: z.object({\n              //                   top: z.object({\n              //                     value: z.number(),\n              //                     unit: z.string()\n              //                   })\n              //                 })\n              //               })\n              //             })\n              //           }),\n              //           alignment: z.string()\n              //         })\n              //       ),\n              //       decorationRuns: z.array(\n              //         z.object({\n              //           textDecorator: z.object({\n              //             highlightTextDecorator: z.object({\n              //               startIndex: z.number(),\n              //               length: z.number(),\n              //               backgroundCornerRadius: z.number(),\n              //               bottomPadding: z.number(),\n              //               highlightTextDecoratorExtensions: z.object({\n              //                 highlightTextDecoratorColorMapExtension: z.object(\n              //                   {\n              //                     colorMap: z.array(\n              //                       z.object({\n              //                         key: z.string(),\n              //                         value: z.number()\n              //                       })\n              //                     )\n              //                   }\n              //                 )\n              //               })\n              //             })\n              //           })\n              //         })\n              //       )\n              //     }),\n              //     headerRuns: z.array(\n              //       z.object({\n              //         startIndex: z.number(),\n              //         length: z.number(),\n              //         headerMapping: z.string()\n              //       })\n              //     )\n              //   })\n              // }),\n              // z.object({\n              //   itemSectionRenderer: z.object({\n              //     contents: z.array(\n              //       z.object({\n              //         commentsEntryPointHeaderRenderer: z.object({\n              //           headerText: z.object({\n              //             runs: z.array(z.object({ text: z.string() }))\n              //           }),\n              //           onTap: z.object({\n              //             clickTrackingParams: z.string(),\n              //             commandExecutorCommand: z.object({\n              //               commands: z.array(\n              //                 z.union([\n              //                   z.object({\n              //                     clickTrackingParams: z.string(),\n              //                     changeEngagementPanelVisibilityAction: z.object(\n              //                       {\n              //                         targetId: z.string(),\n              //                         visibility: z.string()\n              //                       }\n              //                     )\n              //                   }),\n              //                   z.object({\n              //                     clickTrackingParams: z.string(),\n              //                     scrollToEngagementPanelCommand: z.object({\n              //                       targetId: z.string()\n              //                     })\n              //                   })\n              //                 ])\n              //               )\n              //             })\n              //           }),\n              //           trackingParams: z.string(),\n              //           commentCount: z.object({ simpleText: z.string() }),\n              //           contentRenderer: z.object({\n              //             commentsEntryPointTeaserRenderer: z.object({\n              //               teaserAvatar: z.object({\n              //                 thumbnails: z.array(\n              //                   z.object({\n              //                     url: z.string(),\n              //                     width: z.number(),\n              //                     height: z.number()\n              //                   })\n              //                 ),\n              //                 accessibility: z.object({\n              //                   accessibilityData: z.object({\n              //                     label: z.string()\n              //                   })\n              //                 })\n              //               }),\n              //               teaserContent: z.object({\n              //                 simpleText: z.string()\n              //               }),\n              //               trackingParams: z.string()\n              //             })\n              //           }),\n              //           targetId: z.string()\n              //         })\n              //       })\n              //     ),\n              //     trackingParams: z.string(),\n              //     sectionIdentifier: z.string()\n              //   })\n              // }),\n              // z.object({\n              //   itemSectionRenderer: z.object({\n              //     contents: z.array(\n              //       z.object({\n              //         continuationItemRenderer: z.object({\n              //           trigger: z.string(),\n              //           continuationEndpoint: z.object({\n              //             clickTrackingParams: z.string(),\n              //             commandMetadata: z.object({\n              //               webCommandMetadata: z.object({\n              //                 sendPost: z.boolean(),\n              //                 apiUrl: z.string()\n              //               })\n              //             }),\n              //             continuationCommand: z.object({\n              //               token: z.string(),\n              //               request: z.string()\n              //             })\n              //           })\n              //         })\n              //       })\n              //     ),\n              //     trackingParams: z.string(),\n              //     sectionIdentifier: z.string(),\n              //     targetId: z.string()\n              //   })\n              // })\n              // ])\n            ),\n            trackingParams: z.string(),\n          }),\n        }),\n        secondaryResults: z.object({\n          secondaryResults: z.object({\n            // results: z.array(\n            //   // z.union([\n            //     z.object({\n            //       compactVideoRenderer: z.object({\n            //         videoId: z.string(),\n            //         thumbnail: z.object({\n            //           thumbnails: z.array(\n            //             z.object({\n            //               url: z.string(),\n            //               width: z.number(),\n            //               height: z.number()\n            //             })\n            //           )\n            //         }),\n            //         title: z.object({\n            //           accessibility: z.object({\n            //             accessibilityData: z.object({ label: z.string() })\n            //           }),\n            //           simpleText: z.string()\n            //         }),\n            //         longBylineText: z.object({\n            //           runs: z.array(\n            //             z.object({\n            //               text: z.string(),\n            //               navigationEndpoint: z.object({\n            //                 clickTrackingParams: z.string(),\n            //                 commandMetadata: z.object({\n            //                   webCommandMetadata: z.object({\n            //                     url: z.string(),\n            //                     webPageType: z.string(),\n            //                     rootVe: z.number(),\n            //                     apiUrl: z.string()\n            //                   })\n            //                 }),\n            //                 browseEndpoint: z.object({\n            //                   browseId: z.string(),\n            //                   canonicalBaseUrl: z.string()\n            //                 })\n            //               })\n            //             })\n            //           )\n            //         }),\n            //         publishedTimeText: z.object({ simpleText: z.string() }),\n            //         viewCountText: z.object({ simpleText: z.string() }),\n            //         lengthText: z.object({\n            //           accessibility: z.object({\n            //             accessibilityData: z.object({ label: z.string() })\n            //           }),\n            //           simpleText: z.string()\n            //         }),\n            //         navigationEndpoint: z.object({\n            //           clickTrackingParams: z.string(),\n            //           commandMetadata: z.object({\n            //             webCommandMetadata: z.object({\n            //               url: z.string(),\n            //               webPageType: z.string(),\n            //               rootVe: z.number()\n            //             })\n            //           }),\n            //           watchEndpoint: z.object({\n            //             videoId: z.string(),\n            //             nofollow: z.boolean(),\n            //             watchEndpointSupportedOnesieConfig: z.object({\n            //               html5PlaybackOnesieConfig: z.object({\n            //                 commonConfig: z.object({ url: z.string() })\n            //               })\n            //             })\n            //           })\n            //         }),\n            //         shortBylineText: z.object({\n            //           runs: z.array(\n            //             z.object({\n            //               text: z.string(),\n            //               navigationEndpoint: z.object({\n            //                 clickTrackingParams: z.string(),\n            //                 commandMetadata: z.object({\n            //                   webCommandMetadata: z.object({\n            //                     url: z.string(),\n            //                     webPageType: z.string(),\n            //                     rootVe: z.number(),\n            //                     apiUrl: z.string()\n            //                   })\n            //                 }),\n            //                 browseEndpoint: z.object({\n            //                   browseId: z.string(),\n            //                   canonicalBaseUrl: z.string()\n            //                 })\n            //               })\n            //             })\n            //           )\n            //         }),\n            //         channelThumbnail: z.object({\n            //           thumbnails: z.array(\n            //             z.object({\n            //               url: z.string(),\n            //               width: z.number(),\n            //               height: z.number()\n            //             })\n            //           )\n            //         }),\n            //         // ownerBadges: z.array(\n            //         //   z.object({\n            //         //     metadataBadgeRenderer: z.object({\n            //         //       icon: z.object({ iconType: z.string() }),\n            //         //       style: z.string(),\n            //         //       tooltip: z.string(),\n            //         //       trackingParams: z.string(),\n            //         //       accessibilityData: z.object({ label: z.string() })\n            //         //     })\n            //         //   })\n            //         // ),\n            //         trackingParams: z.string(),\n            //         shortViewCountText: z.object({\n            //           accessibility: z.object({\n            //             accessibilityData: z.object({ label: z.string() })\n            //           }),\n            //           simpleText: z.string()\n            //         }),\n            //         menu: z.object({\n            //           // menuRenderer: z.object({\n            //           //   items: z.array(\n            //           //     // z.union([\n            //           //       z.object({\n            //           //         menuServiceItemRenderer: z.object({\n            //           //           text: z.object({\n            //           //             runs: z.array(z.object({ text: z.string() }))\n            //           //           }),\n            //           //           icon: z.object({ iconType: z.string() }),\n            //           //           serviceEndpoint: z.object({\n            //           //             clickTrackingParams: z.string(),\n            //           //             commandMetadata: z.object({\n            //           //               webCommandMetadata: z.object({\n            //           //                 sendPost: z.boolean()\n            //           //               })\n            //           //             }),\n            //           //             signalServiceEndpoint: z.object({\n            //           //               signal: z.string(),\n            //           //               actions: z.array(\n            //           //                 // z.union([\n            //           //                   // z.object({\n            //           //                   //   clickTrackingParams: z.string(),\n            //           //                   //   addToPlaylistCommand: z.object({\n            //           //                   //     openMiniplayer: z.boolean(),\n            //           //                   //     openListPanel: z.boolean(),\n            //           //                   //     videoId: z.string(),\n            //           //                   //     listType: z.string(),\n            //           //                   //     onCreateListCommand: z.object({\n            //           //                   //       clickTrackingParams: z.string(),\n            //           //                   //       commandMetadata: z.object({\n            //           //                   //         webCommandMetadata: z.object({\n            //           //                   //           sendPost: z.boolean(),\n            //           //                   //           apiUrl: z.string()\n            //           //                   //         })\n            //           //                   //       }),\n            //           //                   //       createPlaylistServiceEndpoint: z.object(\n            //           //                   //         {\n            //           //                   //           videoIds: z.array(z.string()),\n            //           //                   //           params: z.string()\n            //           //                   //         }\n            //           //                   //       )\n            //           //                   //     }),\n            //           //                   //     videoIds: z.array(z.string())\n            //           //                   //   })\n            //           //                   // }),\n            //           //                   z.object({\n            //           //                     clickTrackingParams: z.string(),\n            //           //                     openPopupAction: z.object({\n            //           //                       popup: z.object({\n            //           //                         notificationActionRenderer: z.object(\n            //           //                           {\n            //           //                             responseText: z.object({\n            //           //                               simpleText: z.string()\n            //           //                             }),\n            //           //                             trackingParams: z.string()\n            //           //                           }\n            //           //                         )\n            //           //                       }),\n            //           //                       popupType: z.string()\n            //           //                     })\n            //           //                   })\n            //           //                 // ])\n            //           //               )\n            //           //             })\n            //           //           }),\n            //           //           trackingParams: z.string()\n            //           //         })\n            //           //       }),\n            //           //       // z.object({\n            //           //       //   menuServiceItemDownloadRenderer: z.object({\n            //           //       //     serviceEndpoint: z.object({\n            //           //       //       clickTrackingParams: z.string(),\n            //           //       //       offlineVideoEndpoint: z.object({\n            //           //       //         videoId: z.string(),\n            //           //       //         onAddCommand: z.object({\n            //           //       //           clickTrackingParams: z.string(),\n            //           //       //           getDownloadActionCommand: z.object({\n            //           //       //             videoId: z.string(),\n            //           //       //             params: z.string()\n            //           //       //           })\n            //           //       //         })\n            //           //       //       })\n            //           //       //     }),\n            //           //       //     trackingParams: z.string()\n            //           //       //   })\n            //           //       // }),\n            //           //       // z.object({\n            //           //       //   menuServiceItemRenderer: z.object({\n            //           //       //     text: z.object({\n            //           //       //       runs: z.array(z.object({ text: z.string() }))\n            //           //       //     }),\n            //           //       //     icon: z.object({ iconType: z.string() }),\n            //           //       //     serviceEndpoint: z.object({\n            //           //       //       clickTrackingParams: z.string(),\n            //           //       //       commandMetadata: z.object({\n            //           //       //         webCommandMetadata: z.object({\n            //           //       //           sendPost: z.boolean(),\n            //           //       //           apiUrl: z.string()\n            //           //       //         })\n            //           //       //       }),\n            //           //       //       shareEntityServiceEndpoint: z.object({\n            //           //       //         serializedShareEntity: z.string(),\n            //           //       //         commands: z.array(\n            //           //       //           z.object({\n            //           //       //             clickTrackingParams: z.string(),\n            //           //       //             openPopupAction: z.object({\n            //           //       //               popup: z.object({\n            //           //       //                 unifiedSharePanelRenderer: z.object(\n            //           //       //                   {\n            //           //       //                     trackingParams: z.string(),\n            //           //       //                     showLoadingSpinner: z.boolean()\n            //           //       //                   }\n            //           //       //                 )\n            //           //       //               }),\n            //           //       //               popupType: z.string(),\n            //           //       //               beReused: z.boolean()\n            //           //       //             })\n            //           //       //           })\n            //           //       //         )\n            //           //       //       })\n            //           //       //     }),\n            //           //       //     trackingParams: z.string(),\n            //           //       //     hasSeparator: z.boolean()\n            //           //       //   })\n            //           //       // })\n            //           //     // ])\n            //           //   ),\n            //           //   trackingParams: z.string(),\n            //           //   accessibility: z.object({\n            //           //     accessibilityData: z.object({ label: z.string() })\n            //           //   }),\n            //           //   targetId: z.string()\n            //           // })\n            //         }),\n            //         // thumbnailOverlays: z.array(\n            //         //   // z.union([\n            //         //     z.object({\n            //         //       thumbnailOverlayTimeStatusRenderer: z.object({\n            //         //         text: z.object({\n            //         //           accessibility: z.object({\n            //         //             accessibilityData: z.object({\n            //         //               label: z.string()\n            //         //             })\n            //         //           }),\n            //         //           simpleText: z.string()\n            //         //         }),\n            //         //         style: z.string()\n            //         //       })\n            //         //     }),\n            //         //     // z.object({\n            //         //     //   thumbnailOverlayToggleButtonRenderer: z.object({\n            //         //     //     isToggled: z.boolean(),\n            //         //     //     untoggledIcon: z.object({ iconType: z.string() }),\n            //         //     //     toggledIcon: z.object({ iconType: z.string() }),\n            //         //     //     untoggledTooltip: z.string(),\n            //         //     //     toggledTooltip: z.string(),\n            //         //     //     untoggledServiceEndpoint: z.object({\n            //         //     //       clickTrackingParams: z.string(),\n            //         //     //       commandMetadata: z.object({\n            //         //     //         webCommandMetadata: z.object({\n            //         //     //           sendPost: z.boolean(),\n            //         //     //           apiUrl: z.string()\n            //         //     //         })\n            //         //     //       }),\n            //         //     //       playlistEditEndpoint: z.object({\n            //         //     //         playlistId: z.string(),\n            //         //     //         actions: z.array(\n            //         //     //           z.object({\n            //         //     //             addedVideoId: z.string(),\n            //         //     //             action: z.string()\n            //         //     //           })\n            //         //     //         )\n            //         //     //       })\n            //         //     //     }),\n            //         //     //     toggledServiceEndpoint: z.object({\n            //         //     //       clickTrackingParams: z.string(),\n            //         //     //       commandMetadata: z.object({\n            //         //     //         webCommandMetadata: z.object({\n            //         //     //           sendPost: z.boolean(),\n            //         //     //           apiUrl: z.string()\n            //         //     //         })\n            //         //     //       }),\n            //         //     //       playlistEditEndpoint: z.object({\n            //         //     //         playlistId: z.string(),\n            //         //     //         actions: z.array(\n            //         //     //           z.object({\n            //         //     //             action: z.string(),\n            //         //     //             removedVideoId: z.string()\n            //         //     //           })\n            //         //     //         )\n            //         //     //       })\n            //         //     //     }),\n            //         //     //     untoggledAccessibility: z.object({\n            //         //     //       accessibilityData: z.object({\n            //         //     //         label: z.string()\n            //         //     //       })\n            //         //     //     }),\n            //         //     //     toggledAccessibility: z.object({\n            //         //     //       accessibilityData: z.object({\n            //         //     //         label: z.string()\n            //         //     //       })\n            //         //     //     }),\n            //         //     //     trackingParams: z.string()\n            //         //     //   })\n            //         //     // }),\n            //         //     // z.object({\n            //         //     //   thumbnailOverlayToggleButtonRenderer: z.object({\n            //         //     //     untoggledIcon: z.object({ iconType: z.string() }),\n            //         //     //     toggledIcon: z.object({ iconType: z.string() }),\n            //         //     //     untoggledTooltip: z.string(),\n            //         //     //     toggledTooltip: z.string(),\n            //         //     //     untoggledServiceEndpoint: z.object({\n            //         //     //       clickTrackingParams: z.string(),\n            //         //     //       commandMetadata: z.object({\n            //         //     //         webCommandMetadata: z.object({\n            //         //     //           sendPost: z.boolean()\n            //         //     //         })\n            //         //     //       }),\n            //         //     //       signalServiceEndpoint: z.object({\n            //         //     //         signal: z.string(),\n            //         //     //         actions: z.array(\n            //         //     //           z.object({\n            //         //     //             clickTrackingParams: z.string(),\n            //         //     //             addToPlaylistCommand: z.object({\n            //         //     //               openMiniplayer: z.boolean(),\n            //         //     //               openListPanel: z.boolean(),\n            //         //     //               videoId: z.string(),\n            //         //     //               listType: z.string(),\n            //         //     //               onCreateListCommand: z.object({\n            //         //     //                 clickTrackingParams: z.string(),\n            //         //     //                 commandMetadata: z.object({\n            //         //     //                   webCommandMetadata: z.object({\n            //         //     //                     sendPost: z.boolean(),\n            //         //     //                     apiUrl: z.string()\n            //         //     //                   })\n            //         //     //                 }),\n            //         //     //                 createPlaylistServiceEndpoint: z.object(\n            //         //     //                   {\n            //         //     //                     videoIds: z.array(z.string()),\n            //         //     //                     params: z.string()\n            //         //     //                   }\n            //         //     //                 )\n            //         //     //               }),\n            //         //     //               videoIds: z.array(z.string())\n            //         //     //             })\n            //         //     //           })\n            //         //     //         )\n            //         //     //       })\n            //         //     //     }),\n            //         //     //     untoggledAccessibility: z.object({\n            //         //     //       accessibilityData: z.object({\n            //         //     //         label: z.string()\n            //         //     //       })\n            //         //     //     }),\n            //         //     //     toggledAccessibility: z.object({\n            //         //     //       accessibilityData: z.object({\n            //         //     //         label: z.string()\n            //         //     //       })\n            //         //     //     }),\n            //         //     //     trackingParams: z.string()\n            //         //     //   })\n            //         //     // }),\n            //         //     // z.object({\n            //         //     //   thumbnailOverlayNowPlayingRenderer: z.object({\n            //         //     //     text: z.object({\n            //         //     //       runs: z.array(z.object({ text: z.string() }))\n            //         //     //     })\n            //         //     //   })\n            //         //     // })\n            //         //   // ])\n            //         // ),\n            //         accessibility: z.object({\n            //           accessibilityData: z.object({ label: z.string() })\n            //         })\n            //       })\n            //     }),\n            //     // z.object({\n            //     //   compactVideoRenderer: z.object({\n            //     //     videoId: z.string(),\n            //     //     thumbnail: z.object({\n            //     //       thumbnails: z.array(\n            //     //         z.object({\n            //     //           url: z.string(),\n            //     //           width: z.number(),\n            //     //           height: z.number()\n            //     //         })\n            //     //       )\n            //     //     }),\n            //     //     title: z.object({\n            //     //       accessibility: z.object({\n            //     //         accessibilityData: z.object({ label: z.string() })\n            //     //       }),\n            //     //       simpleText: z.string()\n            //     //     }),\n            //     //     longBylineText: z.object({\n            //     //       runs: z.array(\n            //     //         z.object({\n            //     //           text: z.string(),\n            //     //           navigationEndpoint: z.object({\n            //     //             clickTrackingParams: z.string(),\n            //     //             commandMetadata: z.object({\n            //     //               webCommandMetadata: z.object({\n            //     //                 url: z.string(),\n            //     //                 webPageType: z.string(),\n            //     //                 rootVe: z.number(),\n            //     //                 apiUrl: z.string()\n            //     //               })\n            //     //             }),\n            //     //             browseEndpoint: z.object({\n            //     //               browseId: z.string(),\n            //     //               canonicalBaseUrl: z.string()\n            //     //             })\n            //     //           })\n            //     //         })\n            //     //       )\n            //     //     }),\n            //     //     publishedTimeText: z.object({ simpleText: z.string() }),\n            //     //     viewCountText: z.object({ simpleText: z.string() }),\n            //     //     lengthText: z.object({\n            //     //       accessibility: z.object({\n            //     //         accessibilityData: z.object({ label: z.string() })\n            //     //       }),\n            //     //       simpleText: z.string()\n            //     //     }),\n            //     //     navigationEndpoint: z.object({\n            //     //       clickTrackingParams: z.string(),\n            //     //       commandMetadata: z.object({\n            //     //         webCommandMetadata: z.object({\n            //     //           url: z.string(),\n            //     //           webPageType: z.string(),\n            //     //           rootVe: z.number()\n            //     //         })\n            //     //       }),\n            //     //       watchEndpoint: z.object({\n            //     //         videoId: z.string(),\n            //     //         nofollow: z.boolean(),\n            //     //         watchEndpointSupportedOnesieConfig: z.object({\n            //     //           html5PlaybackOnesieConfig: z.object({\n            //     //             commonConfig: z.object({ url: z.string() })\n            //     //           })\n            //     //         })\n            //     //       })\n            //     //     }),\n            //     //     shortBylineText: z.object({\n            //     //       runs: z.array(\n            //     //         z.object({\n            //     //           text: z.string(),\n            //     //           navigationEndpoint: z.object({\n            //     //             clickTrackingParams: z.string(),\n            //     //             commandMetadata: z.object({\n            //     //               webCommandMetadata: z.object({\n            //     //                 url: z.string(),\n            //     //                 webPageType: z.string(),\n            //     //                 rootVe: z.number(),\n            //     //                 apiUrl: z.string()\n            //     //               })\n            //     //             }),\n            //     //             browseEndpoint: z.object({\n            //     //               browseId: z.string(),\n            //     //               canonicalBaseUrl: z.string()\n            //     //             })\n            //     //           })\n            //     //         })\n            //     //       )\n            //     //     }),\n            //     //     channelThumbnail: z.object({\n            //     //       thumbnails: z.array(\n            //     //         z.object({\n            //     //           url: z.string(),\n            //     //           width: z.number(),\n            //     //           height: z.number()\n            //     //         })\n            //     //       )\n            //     //     }),\n            //     //     trackingParams: z.string(),\n            //     //     shortViewCountText: z.object({\n            //     //       accessibility: z.object({\n            //     //         accessibilityData: z.object({ label: z.string() })\n            //     //       }),\n            //     //       simpleText: z.string()\n            //     //     }),\n            //     //     menu: z.object({\n            //     //       menuRenderer: z.object({\n            //     //         items: z.array(\n            //     //           z.union([\n            //     //             z.object({\n            //     //               menuServiceItemRenderer: z.object({\n            //     //                 text: z.object({\n            //     //                   runs: z.array(z.object({ text: z.string() }))\n            //     //                 }),\n            //     //                 icon: z.object({ iconType: z.string() }),\n            //     //                 serviceEndpoint: z.object({\n            //     //                   clickTrackingParams: z.string(),\n            //     //                   commandMetadata: z.object({\n            //     //                     webCommandMetadata: z.object({\n            //     //                       sendPost: z.boolean()\n            //     //                     })\n            //     //                   }),\n            //     //                   signalServiceEndpoint: z.object({\n            //     //                     signal: z.string(),\n            //     //                     actions: z.array(\n            //     //                       z.union([\n            //     //                         z.object({\n            //     //                           clickTrackingParams: z.string(),\n            //     //                           addToPlaylistCommand: z.object({\n            //     //                             openMiniplayer: z.boolean(),\n            //     //                             openListPanel: z.boolean(),\n            //     //                             videoId: z.string(),\n            //     //                             listType: z.string(),\n            //     //                             onCreateListCommand: z.object({\n            //     //                               clickTrackingParams: z.string(),\n            //     //                               commandMetadata: z.object({\n            //     //                                 webCommandMetadata: z.object({\n            //     //                                   sendPost: z.boolean(),\n            //     //                                   apiUrl: z.string()\n            //     //                                 })\n            //     //                               }),\n            //     //                               createPlaylistServiceEndpoint: z.object(\n            //     //                                 {\n            //     //                                   videoIds: z.array(z.string()),\n            //     //                                   params: z.string()\n            //     //                                 }\n            //     //                               )\n            //     //                             }),\n            //     //                             videoIds: z.array(z.string())\n            //     //                           })\n            //     //                         }),\n            //     //                         z.object({\n            //     //                           clickTrackingParams: z.string(),\n            //     //                           openPopupAction: z.object({\n            //     //                             popup: z.object({\n            //     //                               notificationActionRenderer: z.object(\n            //     //                                 {\n            //     //                                   responseText: z.object({\n            //     //                                     simpleText: z.string()\n            //     //                                   }),\n            //     //                                   trackingParams: z.string()\n            //     //                                 }\n            //     //                               )\n            //     //                             }),\n            //     //                             popupType: z.string()\n            //     //                           })\n            //     //                         })\n            //     //                       ])\n            //     //                     )\n            //     //                   })\n            //     //                 }),\n            //     //                 trackingParams: z.string()\n            //     //               })\n            //     //             }),\n            //     //             z.object({\n            //     //               menuServiceItemDownloadRenderer: z.object({\n            //     //                 serviceEndpoint: z.object({\n            //     //                   clickTrackingParams: z.string(),\n            //     //                   offlineVideoEndpoint: z.object({\n            //     //                     videoId: z.string(),\n            //     //                     onAddCommand: z.object({\n            //     //                       clickTrackingParams: z.string(),\n            //     //                       getDownloadActionCommand: z.object({\n            //     //                         videoId: z.string(),\n            //     //                         params: z.string()\n            //     //                       })\n            //     //                     })\n            //     //                   })\n            //     //                 }),\n            //     //                 trackingParams: z.string()\n            //     //               })\n            //     //             }),\n            //     //             z.object({\n            //     //               menuServiceItemRenderer: z.object({\n            //     //                 text: z.object({\n            //     //                   runs: z.array(z.object({ text: z.string() }))\n            //     //                 }),\n            //     //                 icon: z.object({ iconType: z.string() }),\n            //     //                 serviceEndpoint: z.object({\n            //     //                   clickTrackingParams: z.string(),\n            //     //                   commandMetadata: z.object({\n            //     //                     webCommandMetadata: z.object({\n            //     //                       sendPost: z.boolean(),\n            //     //                       apiUrl: z.string()\n            //     //                     })\n            //     //                   }),\n            //     //                   shareEntityServiceEndpoint: z.object({\n            //     //                     serializedShareEntity: z.string(),\n            //     //                     commands: z.array(\n            //     //                       z.object({\n            //     //                         clickTrackingParams: z.string(),\n            //     //                         openPopupAction: z.object({\n            //     //                           popup: z.object({\n            //     //                             unifiedSharePanelRenderer: z.object(\n            //     //                               {\n            //     //                                 trackingParams: z.string(),\n            //     //                                 showLoadingSpinner: z.boolean()\n            //     //                               }\n            //     //                             )\n            //     //                           }),\n            //     //                           popupType: z.string(),\n            //     //                           beReused: z.boolean()\n            //     //                         })\n            //     //                       })\n            //     //                     )\n            //     //                   })\n            //     //                 }),\n            //     //                 trackingParams: z.string(),\n            //     //                 hasSeparator: z.boolean()\n            //     //               })\n            //     //             })\n            //     //           ])\n            //     //         ),\n            //     //         trackingParams: z.string(),\n            //     //         accessibility: z.object({\n            //     //           accessibilityData: z.object({ label: z.string() })\n            //     //         })\n            //     //       })\n            //     //     }),\n            //     //     thumbnailOverlays: z.array(\n            //     //       z.union([\n            //     //         z.object({\n            //     //           thumbnailOverlayTimeStatusRenderer: z.object({\n            //     //             text: z.object({\n            //     //               accessibility: z.object({\n            //     //                 accessibilityData: z.object({\n            //     //                   label: z.string()\n            //     //                 })\n            //     //               }),\n            //     //               simpleText: z.string()\n            //     //             }),\n            //     //             style: z.string()\n            //     //           })\n            //     //         }),\n            //     //         z.object({\n            //     //           thumbnailOverlayToggleButtonRenderer: z.object({\n            //     //             isToggled: z.boolean(),\n            //     //             untoggledIcon: z.object({ iconType: z.string() }),\n            //     //             toggledIcon: z.object({ iconType: z.string() }),\n            //     //             untoggledTooltip: z.string(),\n            //     //             toggledTooltip: z.string(),\n            //     //             untoggledServiceEndpoint: z.object({\n            //     //               clickTrackingParams: z.string(),\n            //     //               commandMetadata: z.object({\n            //     //                 webCommandMetadata: z.object({\n            //     //                   sendPost: z.boolean(),\n            //     //                   apiUrl: z.string()\n            //     //                 })\n            //     //               }),\n            //     //               playlistEditEndpoint: z.object({\n            //     //                 playlistId: z.string(),\n            //     //                 actions: z.array(\n            //     //                   z.object({\n            //     //                     addedVideoId: z.string(),\n            //     //                     action: z.string()\n            //     //                   })\n            //     //                 )\n            //     //               })\n            //     //             }),\n            //     //             toggledServiceEndpoint: z.object({\n            //     //               clickTrackingParams: z.string(),\n            //     //               commandMetadata: z.object({\n            //     //                 webCommandMetadata: z.object({\n            //     //                   sendPost: z.boolean(),\n            //     //                   apiUrl: z.string()\n            //     //                 })\n            //     //               }),\n            //     //               playlistEditEndpoint: z.object({\n            //     //                 playlistId: z.string(),\n            //     //                 actions: z.array(\n            //     //                   z.object({\n            //     //                     action: z.string(),\n            //     //                     removedVideoId: z.string()\n            //     //                   })\n            //     //                 )\n            //     //               })\n            //     //             }),\n            //     //             untoggledAccessibility: z.object({\n            //     //               accessibilityData: z.object({\n            //     //                 label: z.string()\n            //     //               })\n            //     //             }),\n            //     //             toggledAccessibility: z.object({\n            //     //               accessibilityData: z.object({\n            //     //                 label: z.string()\n            //     //               })\n            //     //             }),\n            //     //             trackingParams: z.string()\n            //     //           })\n            //     //         }),\n            //     //         z.object({\n            //     //           thumbnailOverlayToggleButtonRenderer: z.object({\n            //     //             untoggledIcon: z.object({ iconType: z.string() }),\n            //     //             toggledIcon: z.object({ iconType: z.string() }),\n            //     //             untoggledTooltip: z.string(),\n            //     //             toggledTooltip: z.string(),\n            //     //             untoggledServiceEndpoint: z.object({\n            //     //               clickTrackingParams: z.string(),\n            //     //               commandMetadata: z.object({\n            //     //                 webCommandMetadata: z.object({\n            //     //                   sendPost: z.boolean()\n            //     //                 })\n            //     //               }),\n            //     //               signalServiceEndpoint: z.object({\n            //     //                 signal: z.string(),\n            //     //                 actions: z.array(\n            //     //                   z.object({\n            //     //                     clickTrackingParams: z.string(),\n            //     //                     addToPlaylistCommand: z.object({\n            //     //                       openMiniplayer: z.boolean(),\n            //     //                       openListPanel: z.boolean(),\n            //     //                       videoId: z.string(),\n            //     //                       listType: z.string(),\n            //     //                       onCreateListCommand: z.object({\n            //     //                         clickTrackingParams: z.string(),\n            //     //                         commandMetadata: z.object({\n            //     //                           webCommandMetadata: z.object({\n            //     //                             sendPost: z.boolean(),\n            //     //                             apiUrl: z.string()\n            //     //                           })\n            //     //                         }),\n            //     //                         createPlaylistServiceEndpoint: z.object(\n            //     //                           {\n            //     //                             videoIds: z.array(z.string()),\n            //     //                             params: z.string()\n            //     //                           }\n            //     //                         )\n            //     //                       }),\n            //     //                       videoIds: z.array(z.string())\n            //     //                     })\n            //     //                   })\n            //     //                 )\n            //     //               })\n            //     //             }),\n            //     //             untoggledAccessibility: z.object({\n            //     //               accessibilityData: z.object({\n            //     //                 label: z.string()\n            //     //               })\n            //     //             }),\n            //     //             toggledAccessibility: z.object({\n            //     //               accessibilityData: z.object({\n            //     //                 label: z.string()\n            //     //               })\n            //     //             }),\n            //     //             trackingParams: z.string()\n            //     //           })\n            //     //         }),\n            //     //         z.object({\n            //     //           thumbnailOverlayNowPlayingRenderer: z.object({\n            //     //             text: z.object({\n            //     //               runs: z.array(z.object({ text: z.string() }))\n            //     //             })\n            //     //           })\n            //     //         })\n            //     //       ])\n            //     //     ),\n            //     //     accessibility: z.object({\n            //     //       accessibilityData: z.object({ label: z.string() })\n            //     //     })\n            //     //   })\n            //     // }),\n            //     // z.object({\n            //     //   compactVideoRenderer: z.object({\n            //     //     videoId: z.string(),\n            //     //     thumbnail: z.object({\n            //     //       thumbnails: z.array(\n            //     //         z.object({\n            //     //           url: z.string(),\n            //     //           width: z.number(),\n            //     //           height: z.number()\n            //     //         })\n            //     //       )\n            //     //     }),\n            //     //     title: z.object({\n            //     //       accessibility: z.object({\n            //     //         accessibilityData: z.object({ label: z.string() })\n            //     //       }),\n            //     //       simpleText: z.string()\n            //     //     }),\n            //     //     longBylineText: z.object({\n            //     //       runs: z.array(\n            //     //         z.object({\n            //     //           text: z.string(),\n            //     //           navigationEndpoint: z.object({\n            //     //             clickTrackingParams: z.string(),\n            //     //             commandMetadata: z.object({\n            //     //               webCommandMetadata: z.object({\n            //     //                 url: z.string(),\n            //     //                 webPageType: z.string(),\n            //     //                 rootVe: z.number(),\n            //     //                 apiUrl: z.string()\n            //     //               })\n            //     //             }),\n            //     //             browseEndpoint: z.object({\n            //     //               browseId: z.string(),\n            //     //               canonicalBaseUrl: z.string()\n            //     //             })\n            //     //           })\n            //     //         })\n            //     //       )\n            //     //     }),\n            //     //     publishedTimeText: z.object({ simpleText: z.string() }),\n            //     //     viewCountText: z.object({ simpleText: z.string() }),\n            //     //     lengthText: z.object({\n            //     //       accessibility: z.object({\n            //     //         accessibilityData: z.object({ label: z.string() })\n            //     //       }),\n            //     //       simpleText: z.string()\n            //     //     }),\n            //     //     navigationEndpoint: z.object({\n            //     //       clickTrackingParams: z.string(),\n            //     //       commandMetadata: z.object({\n            //     //         webCommandMetadata: z.object({\n            //     //           url: z.string(),\n            //     //           webPageType: z.string(),\n            //     //           rootVe: z.number()\n            //     //         })\n            //     //       }),\n            //     //       watchEndpoint: z.object({\n            //     //         videoId: z.string(),\n            //     //         nofollow: z.boolean(),\n            //     //         watchEndpointSupportedOnesieConfig: z.object({\n            //     //           html5PlaybackOnesieConfig: z.object({\n            //     //             commonConfig: z.object({ url: z.string() })\n            //     //           })\n            //     //         })\n            //     //       })\n            //     //     }),\n            //     //     shortBylineText: z.object({\n            //     //       runs: z.array(\n            //     //         z.object({\n            //     //           text: z.string(),\n            //     //           navigationEndpoint: z.object({\n            //     //             clickTrackingParams: z.string(),\n            //     //             commandMetadata: z.object({\n            //     //               webCommandMetadata: z.object({\n            //     //                 url: z.string(),\n            //     //                 webPageType: z.string(),\n            //     //                 rootVe: z.number(),\n            //     //                 apiUrl: z.string()\n            //     //               })\n            //     //             }),\n            //     //             browseEndpoint: z.object({\n            //     //               browseId: z.string(),\n            //     //               canonicalBaseUrl: z.string()\n            //     //             })\n            //     //           })\n            //     //         })\n            //     //       )\n            //     //     }),\n            //     //     channelThumbnail: z.object({\n            //     //       thumbnails: z.array(\n            //     //         z.object({\n            //     //           url: z.string(),\n            //     //           width: z.number(),\n            //     //           height: z.number()\n            //     //         })\n            //     //       )\n            //     //     }),\n            //     //     ownerBadges: z.array(\n            //     //       z.object({\n            //     //         metadataBadgeRenderer: z.object({\n            //     //           icon: z.object({ iconType: z.string() }),\n            //     //           style: z.string(),\n            //     //           tooltip: z.string(),\n            //     //           trackingParams: z.string(),\n            //     //           accessibilityData: z.object({ label: z.string() })\n            //     //         })\n            //     //       })\n            //     //     ),\n            //     //     trackingParams: z.string(),\n            //     //     shortViewCountText: z.object({\n            //     //       accessibility: z.object({\n            //     //         accessibilityData: z.object({ label: z.string() })\n            //     //       }),\n            //     //       simpleText: z.string()\n            //     //     }),\n            //     //     menu: z.object({\n            //     //       menuRenderer: z.object({\n            //     //         items: z.array(\n            //     //           z.union([\n            //     //             z.object({\n            //     //               menuServiceItemRenderer: z.object({\n            //     //                 text: z.object({\n            //     //                   runs: z.array(z.object({ text: z.string() }))\n            //     //                 }),\n            //     //                 icon: z.object({ iconType: z.string() }),\n            //     //                 serviceEndpoint: z.object({\n            //     //                   clickTrackingParams: z.string(),\n            //     //                   commandMetadata: z.object({\n            //     //                     webCommandMetadata: z.object({\n            //     //                       sendPost: z.boolean()\n            //     //                     })\n            //     //                   }),\n            //     //                   signalServiceEndpoint: z.object({\n            //     //                     signal: z.string(),\n            //     //                     actions: z.array(\n            //     //                       z.union([\n            //     //                         z.object({\n            //     //                           clickTrackingParams: z.string(),\n            //     //                           addToPlaylistCommand: z.object({\n            //     //                             openMiniplayer: z.boolean(),\n            //     //                             openListPanel: z.boolean(),\n            //     //                             videoId: z.string(),\n            //     //                             listType: z.string(),\n            //     //                             onCreateListCommand: z.object({\n            //     //                               clickTrackingParams: z.string(),\n            //     //                               commandMetadata: z.object({\n            //     //                                 webCommandMetadata: z.object({\n            //     //                                   sendPost: z.boolean(),\n            //     //                                   apiUrl: z.string()\n            //     //                                 })\n            //     //                               }),\n            //     //                               createPlaylistServiceEndpoint: z.object(\n            //     //                                 {\n            //     //                                   videoIds: z.array(z.string()),\n            //     //                                   params: z.string()\n            //     //                                 }\n            //     //                               )\n            //     //                             }),\n            //     //                             videoIds: z.array(z.string())\n            //     //                           })\n            //     //                         }),\n            //     //                         z.object({\n            //     //                           clickTrackingParams: z.string(),\n            //     //                           openPopupAction: z.object({\n            //     //                             popup: z.object({\n            //     //                               notificationActionRenderer: z.object(\n            //     //                                 {\n            //     //                                   responseText: z.object({\n            //     //                                     simpleText: z.string()\n            //     //                                   }),\n            //     //                                   trackingParams: z.string()\n            //     //                                 }\n            //     //                               )\n            //     //                             }),\n            //     //                             popupType: z.string()\n            //     //                           })\n            //     //                         })\n            //     //                       ])\n            //     //                     )\n            //     //                   })\n            //     //                 }),\n            //     //                 trackingParams: z.string()\n            //     //               })\n            //     //             }),\n            //     //             z.object({\n            //     //               menuServiceItemDownloadRenderer: z.object({\n            //     //                 serviceEndpoint: z.object({\n            //     //                   clickTrackingParams: z.string(),\n            //     //                   offlineVideoEndpoint: z.object({\n            //     //                     videoId: z.string(),\n            //     //                     onAddCommand: z.object({\n            //     //                       clickTrackingParams: z.string(),\n            //     //                       getDownloadActionCommand: z.object({\n            //     //                         videoId: z.string(),\n            //     //                         params: z.string()\n            //     //                       })\n            //     //                     })\n            //     //                   })\n            //     //                 }),\n            //     //                 trackingParams: z.string()\n            //     //               })\n            //     //             }),\n            //     //             z.object({\n            //     //               menuServiceItemRenderer: z.object({\n            //     //                 text: z.object({\n            //     //                   runs: z.array(z.object({ text: z.string() }))\n            //     //                 }),\n            //     //                 icon: z.object({ iconType: z.string() }),\n            //     //                 serviceEndpoint: z.object({\n            //     //                   clickTrackingParams: z.string(),\n            //     //                   commandMetadata: z.object({\n            //     //                     webCommandMetadata: z.object({\n            //     //                       sendPost: z.boolean(),\n            //     //                       apiUrl: z.string()\n            //     //                     })\n            //     //                   }),\n            //     //                   shareEntityServiceEndpoint: z.object({\n            //     //                     serializedShareEntity: z.string(),\n            //     //                     commands: z.array(\n            //     //                       z.object({\n            //     //                         clickTrackingParams: z.string(),\n            //     //                         openPopupAction: z.object({\n            //     //                           popup: z.object({\n            //     //                             unifiedSharePanelRenderer: z.object(\n            //     //                               {\n            //     //                                 trackingParams: z.string(),\n            //     //                                 showLoadingSpinner: z.boolean()\n            //     //                               }\n            //     //                             )\n            //     //                           }),\n            //     //                           popupType: z.string(),\n            //     //                           beReused: z.boolean()\n            //     //                         })\n            //     //                       })\n            //     //                     )\n            //     //                   })\n            //     //                 }),\n            //     //                 trackingParams: z.string(),\n            //     //                 hasSeparator: z.boolean()\n            //     //               })\n            //     //             })\n            //     //           ])\n            //     //         ),\n            //     //         trackingParams: z.string(),\n            //     //         accessibility: z.object({\n            //     //           accessibilityData: z.object({ label: z.string() })\n            //     //         })\n            //     //       })\n            //     //     }),\n            //     //     thumbnailOverlays: z.array(\n            //     //       z.union([\n            //     //         z.object({\n            //     //           thumbnailOverlayTimeStatusRenderer: z.object({\n            //     //             text: z.object({\n            //     //               accessibility: z.object({\n            //     //                 accessibilityData: z.object({\n            //     //                   label: z.string()\n            //     //                 })\n            //     //               }),\n            //     //               simpleText: z.string()\n            //     //             }),\n            //     //             style: z.string()\n            //     //           })\n            //     //         }),\n            //     //         z.object({\n            //     //           thumbnailOverlayToggleButtonRenderer: z.object({\n            //     //             isToggled: z.boolean(),\n            //     //             untoggledIcon: z.object({ iconType: z.string() }),\n            //     //             toggledIcon: z.object({ iconType: z.string() }),\n            //     //             untoggledTooltip: z.string(),\n            //     //             toggledTooltip: z.string(),\n            //     //             untoggledServiceEndpoint: z.object({\n            //     //               clickTrackingParams: z.string(),\n            //     //               commandMetadata: z.object({\n            //     //                 webCommandMetadata: z.object({\n            //     //                   sendPost: z.boolean(),\n            //     //                   apiUrl: z.string()\n            //     //                 })\n            //     //               }),\n            //     //               playlistEditEndpoint: z.object({\n            //     //                 playlistId: z.string(),\n            //     //                 actions: z.array(\n            //     //                   z.object({\n            //     //                     addedVideoId: z.string(),\n            //     //                     action: z.string()\n            //     //                   })\n            //     //                 )\n            //     //               })\n            //     //             }),\n            //     //             toggledServiceEndpoint: z.object({\n            //     //               clickTrackingParams: z.string(),\n            //     //               commandMetadata: z.object({\n            //     //                 webCommandMetadata: z.object({\n            //     //                   sendPost: z.boolean(),\n            //     //                   apiUrl: z.string()\n            //     //                 })\n            //     //               }),\n            //     //               playlistEditEndpoint: z.object({\n            //     //                 playlistId: z.string(),\n            //     //                 actions: z.array(\n            //     //                   z.object({\n            //     //                     action: z.string(),\n            //     //                     removedVideoId: z.string()\n            //     //                   })\n            //     //                 )\n            //     //               })\n            //     //             }),\n            //     //             untoggledAccessibility: z.object({\n            //     //               accessibilityData: z.object({\n            //     //                 label: z.string()\n            //     //               })\n            //     //             }),\n            //     //             toggledAccessibility: z.object({\n            //     //               accessibilityData: z.object({\n            //     //                 label: z.string()\n            //     //               })\n            //     //             }),\n            //     //             trackingParams: z.string()\n            //     //           })\n            //     //         }),\n            //     //         z.object({\n            //     //           thumbnailOverlayToggleButtonRenderer: z.object({\n            //     //             untoggledIcon: z.object({ iconType: z.string() }),\n            //     //             toggledIcon: z.object({ iconType: z.string() }),\n            //     //             untoggledTooltip: z.string(),\n            //     //             toggledTooltip: z.string(),\n            //     //             untoggledServiceEndpoint: z.object({\n            //     //               clickTrackingParams: z.string(),\n            //     //               commandMetadata: z.object({\n            //     //                 webCommandMetadata: z.object({\n            //     //                   sendPost: z.boolean()\n            //     //                 })\n            //     //               }),\n            //     //               signalServiceEndpoint: z.object({\n            //     //                 signal: z.string(),\n            //     //                 actions: z.array(\n            //     //                   z.object({\n            //     //                     clickTrackingParams: z.string(),\n            //     //                     addToPlaylistCommand: z.object({\n            //     //                       openMiniplayer: z.boolean(),\n            //     //                       openListPanel: z.boolean(),\n            //     //                       videoId: z.string(),\n            //     //                       listType: z.string(),\n            //     //                       onCreateListCommand: z.object({\n            //     //                         clickTrackingParams: z.string(),\n            //     //                         commandMetadata: z.object({\n            //     //                           webCommandMetadata: z.object({\n            //     //                             sendPost: z.boolean(),\n            //     //                             apiUrl: z.string()\n            //     //                           })\n            //     //                         }),\n            //     //                         createPlaylistServiceEndpoint: z.object(\n            //     //                           {\n            //     //                             videoIds: z.array(z.string()),\n            //     //                             params: z.string()\n            //     //                           }\n            //     //                         )\n            //     //                       }),\n            //     //                       videoIds: z.array(z.string())\n            //     //                     })\n            //     //                   })\n            //     //                 )\n            //     //               })\n            //     //             }),\n            //     //             untoggledAccessibility: z.object({\n            //     //               accessibilityData: z.object({\n            //     //                 label: z.string()\n            //     //               })\n            //     //             }),\n            //     //             toggledAccessibility: z.object({\n            //     //               accessibilityData: z.object({\n            //     //                 label: z.string()\n            //     //               })\n            //     //             }),\n            //     //             trackingParams: z.string()\n            //     //           })\n            //     //         }),\n            //     //         z.object({\n            //     //           thumbnailOverlayNowPlayingRenderer: z.object({\n            //     //             text: z.object({\n            //     //               runs: z.array(z.object({ text: z.string() }))\n            //     //             })\n            //     //           })\n            //     //         })\n            //     //       ])\n            //     //     ),\n            //     //     accessibility: z.object({\n            //     //       accessibilityData: z.object({ label: z.string() })\n            //     //     })\n            //     //   })\n            //     // }),\n            //     // z.object({\n            //     //   compactVideoRenderer: z.object({\n            //     //     videoId: z.string(),\n            //     //     thumbnail: z.object({\n            //     //       thumbnails: z.array(\n            //     //         z.object({\n            //     //           url: z.string(),\n            //     //           width: z.number(),\n            //     //           height: z.number()\n            //     //         })\n            //     //       )\n            //     //     }),\n            //     //     title: z.object({\n            //     //       accessibility: z.object({\n            //     //         accessibilityData: z.object({ label: z.string() })\n            //     //       }),\n            //     //       simpleText: z.string()\n            //     //     }),\n            //     //     longBylineText: z.object({\n            //     //       runs: z.array(\n            //     //         z.object({\n            //     //           text: z.string(),\n            //     //           navigationEndpoint: z.object({\n            //     //             clickTrackingParams: z.string(),\n            //     //             commandMetadata: z.object({\n            //     //               webCommandMetadata: z.object({\n            //     //                 url: z.string(),\n            //     //                 webPageType: z.string(),\n            //     //                 rootVe: z.number(),\n            //     //                 apiUrl: z.string()\n            //     //               })\n            //     //             }),\n            //     //             browseEndpoint: z.object({\n            //     //               browseId: z.string(),\n            //     //               canonicalBaseUrl: z.string()\n            //     //             })\n            //     //           })\n            //     //         })\n            //     //       )\n            //     //     }),\n            //     //     publishedTimeText: z.object({ simpleText: z.string() }),\n            //     //     viewCountText: z.object({ simpleText: z.string() }),\n            //     //     lengthText: z.object({\n            //     //       accessibility: z.object({\n            //     //         accessibilityData: z.object({ label: z.string() })\n            //     //       }),\n            //     //       simpleText: z.string()\n            //     //     }),\n            //     //     navigationEndpoint: z.object({\n            //     //       clickTrackingParams: z.string(),\n            //     //       commandMetadata: z.object({\n            //     //         webCommandMetadata: z.object({\n            //     //           url: z.string(),\n            //     //           webPageType: z.string(),\n            //     //           rootVe: z.number()\n            //     //         })\n            //     //       }),\n            //     //       watchEndpoint: z.object({\n            //     //         videoId: z.string(),\n            //     //         nofollow: z.boolean(),\n            //     //         watchEndpointSupportedOnesieConfig: z.object({\n            //     //           html5PlaybackOnesieConfig: z.object({\n            //     //             commonConfig: z.object({ url: z.string() })\n            //     //           })\n            //     //         })\n            //     //       })\n            //     //     }),\n            //     //     shortBylineText: z.object({\n            //     //       runs: z.array(\n            //     //         z.object({\n            //     //           text: z.string(),\n            //     //           navigationEndpoint: z.object({\n            //     //             clickTrackingParams: z.string(),\n            //     //             commandMetadata: z.object({\n            //     //               webCommandMetadata: z.object({\n            //     //                 url: z.string(),\n            //     //                 webPageType: z.string(),\n            //     //                 rootVe: z.number(),\n            //     //                 apiUrl: z.string()\n            //     //               })\n            //     //             }),\n            //     //             browseEndpoint: z.object({\n            //     //               browseId: z.string(),\n            //     //               canonicalBaseUrl: z.string()\n            //     //             })\n            //     //           })\n            //     //         })\n            //     //       )\n            //     //     }),\n            //     //     channelThumbnail: z.object({\n            //     //       thumbnails: z.array(\n            //     //         z.object({\n            //     //           url: z.string(),\n            //     //           width: z.number(),\n            //     //           height: z.number()\n            //     //         })\n            //     //       )\n            //     //     }),\n            //     //     trackingParams: z.string(),\n            //     //     shortViewCountText: z.object({\n            //     //       accessibility: z.object({\n            //     //         accessibilityData: z.object({ label: z.string() })\n            //     //       }),\n            //     //       simpleText: z.string()\n            //     //     }),\n            //     //     menu: z.object({\n            //     //       menuRenderer: z.object({\n            //     //         items: z.array(\n            //     //           z.union([\n            //     //             z.object({\n            //     //               menuServiceItemRenderer: z.object({\n            //     //                 text: z.object({\n            //     //                   runs: z.array(z.object({ text: z.string() }))\n            //     //                 }),\n            //     //                 icon: z.object({ iconType: z.string() }),\n            //     //                 serviceEndpoint: z.object({\n            //     //                   clickTrackingParams: z.string(),\n            //     //                   commandMetadata: z.object({\n            //     //                     webCommandMetadata: z.object({\n            //     //                       sendPost: z.boolean()\n            //     //                     })\n            //     //                   }),\n            //     //                   signalServiceEndpoint: z.object({\n            //     //                     signal: z.string(),\n            //     //                     actions: z.array(\n            //     //                       z.union([\n            //     //                         z.object({\n            //     //                           clickTrackingParams: z.string(),\n            //     //                           addToPlaylistCommand: z.object({\n            //     //                             openMiniplayer: z.boolean(),\n            //     //                             openListPanel: z.boolean(),\n            //     //                             videoId: z.string(),\n            //     //                             listType: z.string(),\n            //     //                             onCreateListCommand: z.object({\n            //     //                               clickTrackingParams: z.string(),\n            //     //                               commandMetadata: z.object({\n            //     //                                 webCommandMetadata: z.object({\n            //     //                                   sendPost: z.boolean(),\n            //     //                                   apiUrl: z.string()\n            //     //                                 })\n            //     //                               }),\n            //     //                               createPlaylistServiceEndpoint: z.object(\n            //     //                                 {\n            //     //                                   videoIds: z.array(z.string()),\n            //     //                                   params: z.string()\n            //     //                                 }\n            //     //                               )\n            //     //                             }),\n            //     //                             videoIds: z.array(z.string())\n            //     //                           })\n            //     //                         }),\n            //     //                         z.object({\n            //     //                           clickTrackingParams: z.string(),\n            //     //                           openPopupAction: z.object({\n            //     //                             popup: z.object({\n            //     //                               notificationActionRenderer: z.object(\n            //     //                                 {\n            //     //                                   responseText: z.object({\n            //     //                                     simpleText: z.string()\n            //     //                                   }),\n            //     //                                   trackingParams: z.string()\n            //     //                                 }\n            //     //                               )\n            //     //                             }),\n            //     //                             popupType: z.string()\n            //     //                           })\n            //     //                         })\n            //     //                       ])\n            //     //                     )\n            //     //                   })\n            //     //                 }),\n            //     //                 trackingParams: z.string()\n            //     //               })\n            //     //             }),\n            //     //             z.object({\n            //     //               menuServiceItemDownloadRenderer: z.object({\n            //     //                 serviceEndpoint: z.object({\n            //     //                   clickTrackingParams: z.string(),\n            //     //                   offlineVideoEndpoint: z.object({\n            //     //                     videoId: z.string(),\n            //     //                     onAddCommand: z.object({\n            //     //                       clickTrackingParams: z.string(),\n            //     //                       getDownloadActionCommand: z.object({\n            //     //                         videoId: z.string(),\n            //     //                         params: z.string()\n            //     //                       })\n            //     //                     })\n            //     //                   })\n            //     //                 }),\n            //     //                 trackingParams: z.string()\n            //     //               })\n            //     //             }),\n            //     //             z.object({\n            //     //               menuServiceItemRenderer: z.object({\n            //     //                 text: z.object({\n            //     //                   runs: z.array(z.object({ text: z.string() }))\n            //     //                 }),\n            //     //                 icon: z.object({ iconType: z.string() }),\n            //     //                 serviceEndpoint: z.object({\n            //     //                   clickTrackingParams: z.string(),\n            //     //                   commandMetadata: z.object({\n            //     //                     webCommandMetadata: z.object({\n            //     //                       sendPost: z.boolean(),\n            //     //                       apiUrl: z.string()\n            //     //                     })\n            //     //                   }),\n            //     //                   shareEntityServiceEndpoint: z.object({\n            //     //                     serializedShareEntity: z.string(),\n            //     //                     commands: z.array(\n            //     //                       z.object({\n            //     //                         clickTrackingParams: z.string(),\n            //     //                         openPopupAction: z.object({\n            //     //                           popup: z.object({\n            //     //                             unifiedSharePanelRenderer: z.object(\n            //     //                               {\n            //     //                                 trackingParams: z.string(),\n            //     //                                 showLoadingSpinner: z.boolean()\n            //     //                               }\n            //     //                             )\n            //     //                           }),\n            //     //                           popupType: z.string(),\n            //     //                           beReused: z.boolean()\n            //     //                         })\n            //     //                       })\n            //     //                     )\n            //     //                   })\n            //     //                 }),\n            //     //                 trackingParams: z.string(),\n            //     //                 hasSeparator: z.boolean()\n            //     //               })\n            //     //             })\n            //     //           ])\n            //     //         ),\n            //     //         trackingParams: z.string(),\n            //     //         accessibility: z.object({\n            //     //           accessibilityData: z.object({ label: z.string() })\n            //     //         })\n            //     //       })\n            //     //     }),\n            //     //     thumbnailOverlays: z.array(\n            //     //       z.union([\n            //     //         z.object({\n            //     //           thumbnailOverlayTimeStatusRenderer: z.object({\n            //     //             text: z.object({\n            //     //               accessibility: z.object({\n            //     //                 accessibilityData: z.object({\n            //     //                   label: z.string()\n            //     //                 })\n            //     //               }),\n            //     //               simpleText: z.string()\n            //     //             }),\n            //     //             style: z.string()\n            //     //           })\n            //     //         }),\n            //     //         z.object({\n            //     //           thumbnailOverlayToggleButtonRenderer: z.object({\n            //     //             isToggled: z.boolean(),\n            //     //             untoggledIcon: z.object({ iconType: z.string() }),\n            //     //             toggledIcon: z.object({ iconType: z.string() }),\n            //     //             untoggledTooltip: z.string(),\n            //     //             toggledTooltip: z.string(),\n            //     //             untoggledServiceEndpoint: z.object({\n            //     //               clickTrackingParams: z.string(),\n            //     //               commandMetadata: z.object({\n            //     //                 webCommandMetadata: z.object({\n            //     //                   sendPost: z.boolean(),\n            //     //                   apiUrl: z.string()\n            //     //                 })\n            //     //               }),\n            //     //               playlistEditEndpoint: z.object({\n            //     //                 playlistId: z.string(),\n            //     //                 actions: z.array(\n            //     //                   z.object({\n            //     //                     addedVideoId: z.string(),\n            //     //                     action: z.string()\n            //     //                   })\n            //     //                 )\n            //     //               })\n            //     //             }),\n            //     //             toggledServiceEndpoint: z.object({\n            //     //               clickTrackingParams: z.string(),\n            //     //               commandMetadata: z.object({\n            //     //                 webCommandMetadata: z.object({\n            //     //                   sendPost: z.boolean(),\n            //     //                   apiUrl: z.string()\n            //     //                 })\n            //     //               }),\n            //     //               playlistEditEndpoint: z.object({\n            //     //                 playlistId: z.string(),\n            //     //                 actions: z.array(\n            //     //                   z.object({\n            //     //                     action: z.string(),\n            //     //                     removedVideoId: z.string()\n            //     //                   })\n            //     //                 )\n            //     //               })\n            //     //             }),\n            //     //             untoggledAccessibility: z.object({\n            //     //               accessibilityData: z.object({\n            //     //                 label: z.string()\n            //     //               })\n            //     //             }),\n            //     //             toggledAccessibility: z.object({\n            //     //               accessibilityData: z.object({\n            //     //                 label: z.string()\n            //     //               })\n            //     //             }),\n            //     //             trackingParams: z.string()\n            //     //           })\n            //     //         }),\n            //     //         z.object({\n            //     //           thumbnailOverlayToggleButtonRenderer: z.object({\n            //     //             untoggledIcon: z.object({ iconType: z.string() }),\n            //     //             toggledIcon: z.object({ iconType: z.string() }),\n            //     //             untoggledTooltip: z.string(),\n            //     //             toggledTooltip: z.string(),\n            //     //             untoggledServiceEndpoint: z.object({\n            //     //               clickTrackingParams: z.string(),\n            //     //               commandMetadata: z.object({\n            //     //                 webCommandMetadata: z.object({\n            //     //                   sendPost: z.boolean()\n            //     //                 })\n            //     //               }),\n            //     //               signalServiceEndpoint: z.object({\n            //     //                 signal: z.string(),\n            //     //                 actions: z.array(\n            //     //                   z.object({\n            //     //                     clickTrackingParams: z.string(),\n            //     //                     addToPlaylistCommand: z.object({\n            //     //                       openMiniplayer: z.boolean(),\n            //     //                       openListPanel: z.boolean(),\n            //     //                       videoId: z.string(),\n            //     //                       listType: z.string(),\n            //     //                       onCreateListCommand: z.object({\n            //     //                         clickTrackingParams: z.string(),\n            //     //                         commandMetadata: z.object({\n            //     //                           webCommandMetadata: z.object({\n            //     //                             sendPost: z.boolean(),\n            //     //                             apiUrl: z.string()\n            //     //                           })\n            //     //                         }),\n            //     //                         createPlaylistServiceEndpoint: z.object(\n            //     //                           {\n            //     //                             videoIds: z.array(z.string()),\n            //     //                             params: z.string()\n            //     //                           }\n            //     //                         )\n            //     //                       }),\n            //     //                       videoIds: z.array(z.string())\n            //     //                     })\n            //     //                   })\n            //     //                 )\n            //     //               })\n            //     //             }),\n            //     //             untoggledAccessibility: z.object({\n            //     //               accessibilityData: z.object({\n            //     //                 label: z.string()\n            //     //               })\n            //     //             }),\n            //     //             toggledAccessibility: z.object({\n            //     //               accessibilityData: z.object({\n            //     //                 label: z.string()\n            //     //               })\n            //     //             }),\n            //     //             trackingParams: z.string()\n            //     //           })\n            //     //         }),\n            //     //         z.object({\n            //     //           thumbnailOverlayNowPlayingRenderer: z.object({\n            //     //             text: z.object({\n            //     //               runs: z.array(z.object({ text: z.string() }))\n            //     //             })\n            //     //           })\n            //     //         })\n            //     //       ])\n            //     //     ),\n            //     //     accessibility: z.object({\n            //     //       accessibilityData: z.object({ label: z.string() })\n            //     //     }),\n            //     //     richThumbnail: z.object({\n            //     //       movingThumbnailRenderer: z.object({\n            //     //         enableHoveredLogging: z.boolean(),\n            //     //         enableOverlay: z.boolean()\n            //     //       })\n            //     //     })\n            //     //   })\n            //     // })\n            //   // ])\n            // ),\n            // continuations: z.array(\n            //   z.object({\n            //     nextContinuationData: z.object({\n            //       continuation: z.string(),\n            //       clickTrackingParams: z.string(),\n            //       label: z.object({\n            //         runs: z.array(z.object({ text: z.string() }))\n            //       })\n            //     })\n            //   })\n            // ),\n            // trackingParams: z.string()\n          }),\n        }),\n        autoplay: z.object({\n          autoplay: z.object({\n            sets: z.array(\n              z.object({\n                mode: z.string(),\n                autoplayVideo: z.object({\n                  clickTrackingParams: z.string(),\n                  commandMetadata: z.object({\n                    webCommandMetadata: z.object({\n                      url: z.string(),\n                      webPageType: z.string(),\n                      rootVe: z.number(),\n                    }),\n                  }),\n                  watchEndpoint: z.object({\n                    videoId: z.string(),\n                    params: z.string(),\n                    playerParams: z.string(),\n                    watchEndpointSupportedPrefetchConfig: z.object({\n                      prefetchHintConfig: z.object({\n                        prefetchPriority: z.number(),\n                        countdownUiRelativeSecondsPrefetchCondition: z.number(),\n                      }),\n                    }),\n                  }),\n                }),\n              }),\n            ),\n            countDownSecs: z.number(),\n            trackingParams: z.string(),\n          }),\n        }),\n        // conversationBar: z.object({\n        //   liveChatRenderer: z.object({\n        //     continuations: z.array(\n        //       z.object({\n        //         reloadContinuationData: z.object({\n        //           continuation: z.string(),\n        //           clickTrackingParams: z.string()\n        //         })\n        //       })\n        //     ),\n        //     header: z.object({\n        //       liveChatHeaderRenderer: z.object({\n        //         overflowMenu: z.object({\n        //           menuRenderer: z.object({\n        //             items: z.array(\n        //               // z.union([\n        //                 z.object({\n        //                   clientSideToggleMenuItemRenderer: z.object({\n        //                     defaultText: z.object({\n        //                       runs: z.array(z.object({ text: z.string() }))\n        //                     }),\n        //                     defaultIcon: z.object({ iconType: z.string() }),\n        //                     toggledText: z.object({\n        //                       runs: z.array(z.object({ text: z.string() }))\n        //                     }),\n        //                     toggledIcon: z.object({ iconType: z.string() }),\n        //                     menuItemIdentifier: z.string(),\n        //                     command: z.object({\n        //                       clickTrackingParams: z.string(),\n        //                       toggleLiveChatTimestampsEndpoint: z.object({\n        //                         hack: z.boolean()\n        //                       })\n        //                     })\n        //                   })\n        //                 }),\n        //                 // z.object({\n        //                 //   menuNavigationItemRenderer: z.object({\n        //                 //     text: z.object({\n        //                 //       runs: z.array(z.object({ text: z.string() }))\n        //                 //     }),\n        //                 //     icon: z.object({ iconType: z.string() }),\n        //                 //     navigationEndpoint: z.object({\n        //                 //       clickTrackingParams: z.string(),\n        //                 //       commandMetadata: z.object({\n        //                 //         webCommandMetadata: z.object({\n        //                 //           ignoreNavigation: z.boolean()\n        //                 //         })\n        //                 //       }),\n        //                 //       userFeedbackEndpoint: z.object({\n        //                 //         hack: z.boolean(),\n        //                 //         bucketIdentifier: z.string()\n        //                 //       })\n        //                 //     }),\n        //                 //     trackingParams: z.string()\n        //                 //   })\n        //                 // })\n        //               // ])\n        //             ),\n        //             trackingParams: z.string(),\n        //             accessibility: z.object({\n        //               accessibilityData: z.object({ label: z.string() })\n        //             })\n        //           })\n        //         }),\n        //         viewSelector: z.object({\n        //           sortFilterSubMenuRenderer: z.object({\n        //             subMenuItems: z.array(\n        //               z.object({\n        //                 title: z.string(),\n        //                 selected: z.boolean(),\n        //                 continuation: z.object({\n        //                   reloadContinuationData: z.object({\n        //                     continuation: z.string(),\n        //                     clickTrackingParams: z.string()\n        //                   })\n        //                 }),\n        //                 accessibility: z.object({\n        //                   accessibilityData: z.object({ label: z.string() })\n        //                 }),\n        //                 subtitle: z.string(),\n        //                 trackingParams: z.string()\n        //               })\n        //             ),\n        //             accessibility: z.object({\n        //               accessibilityData: z.object({ label: z.string() })\n        //             }),\n        //             trackingParams: z.string(),\n        //             targetId: z.string()\n        //           })\n        //         })\n        //       })\n        //     }),\n        //     trackingParams: z.string(),\n        //     clientMessages: z.object({\n        //       reconnectMessage: z.object({\n        //         runs: z.array(z.object({ text: z.string() }))\n        //       }),\n        //       unableToReconnectMessage: z.object({\n        //         runs: z.array(z.object({ text: z.string() }))\n        //       }),\n        //       fatalError: z.object({\n        //         runs: z.array(z.object({ text: z.string() }))\n        //       }),\n        //       reconnectedMessage: z.object({\n        //         runs: z.array(z.object({ text: z.string() }))\n        //       }),\n        //       genericError: z.object({\n        //         runs: z.array(z.object({ text: z.string() }))\n        //       })\n        //     }),\n        //     isReplay: z.boolean(),\n        //     initialDisplayState: z.string(),\n        //     showHideButton: z.object({\n        //       toggleButtonRenderer: z.object({\n        //         defaultText: z.object({\n        //           runs: z.array(z.object({ text: z.string() }))\n        //         }),\n        //         toggledText: z.object({\n        //           runs: z.array(z.object({ text: z.string() }))\n        //         }),\n        //         trackingParams: z.string()\n        //       })\n        //     })\n        //   })\n        // })\n      }),\n    }),\n    currentVideoEndpoint: z.object({\n      clickTrackingParams: z.string(),\n      commandMetadata: z.object({\n        webCommandMetadata: z.object({\n          url: z.string(),\n          webPageType: z.string(),\n          rootVe: z.number(),\n        }),\n      }),\n      watchEndpoint: z.object({\n        videoId: z.string(),\n        watchEndpointSupportedOnesieConfig: z.object({\n          html5PlaybackOnesieConfig: z.object({\n            commonConfig: z.object({ url: z.string() }),\n          }),\n        }),\n      }),\n    }),\n    trackingParams: z.string(),\n    playerOverlays: z.object({\n      playerOverlayRenderer: z.object({\n        // endScreen: z.object({\n        //   watchNextEndScreenRenderer: z.object({\n        //     results: z.array(\n        //       z.object({\n        //         endScreenVideoRenderer: z.object({\n        //           videoId: z.string(),\n        //           thumbnail: z.object({\n        //             thumbnails: z.array(\n        //               z.object({\n        //                 url: z.string(),\n        //                 width: z.number(),\n        //                 height: z.number()\n        //               })\n        //             )\n        //           }),\n        //           title: z.object({\n        //             accessibility: z.object({\n        //               accessibilityData: z.object({ label: z.string() })\n        //             }),\n        //             simpleText: z.string()\n        //           }),\n        //           shortBylineText: z.object({\n        //             runs: z.array(\n        //               z.object({\n        //                 text: z.string(),\n        //                 navigationEndpoint: z.object({\n        //                   clickTrackingParams: z.string(),\n        //                   commandMetadata: z.object({\n        //                     webCommandMetadata: z.object({\n        //                       url: z.string(),\n        //                       webPageType: z.string(),\n        //                       rootVe: z.number(),\n        //                       apiUrl: z.string()\n        //                     })\n        //                   }),\n        //                   browseEndpoint: z.object({\n        //                     browseId: z.string(),\n        //                     canonicalBaseUrl: z.string()\n        //                   })\n        //                 })\n        //               })\n        //             )\n        //           }),\n        //           lengthText: z.object({\n        //             accessibility: z.object({\n        //               accessibilityData: z.object({ label: z.string() })\n        //             }),\n        //             simpleText: z.string()\n        //           }),\n        //           lengthInSeconds: z.number(),\n        //           navigationEndpoint: z.object({\n        //             clickTrackingParams: z.string(),\n        //             commandMetadata: z.object({\n        //               webCommandMetadata: z.object({\n        //                 url: z.string(),\n        //                 webPageType: z.string(),\n        //                 rootVe: z.number()\n        //               })\n        //             }),\n        //             watchEndpoint: z.object({\n        //               videoId: z.string(),\n        //               watchEndpointSupportedOnesieConfig: z.object({\n        //                 html5PlaybackOnesieConfig: z.object({\n        //                   commonConfig: z.object({ url: z.string() })\n        //                 })\n        //               })\n        //             })\n        //           }),\n        //           trackingParams: z.string(),\n        //           shortViewCountText: z.object({\n        //             accessibility: z.object({\n        //               accessibilityData: z.object({ label: z.string() })\n        //             }),\n        //             simpleText: z.string()\n        //           }),\n        //           publishedTimeText: z.object({ simpleText: z.string() }),\n        //           thumbnailOverlays: z.array(\n        //             // z.union([\n        //               // z.object({\n        //               //   thumbnailOverlayTimeStatusRenderer: z.object({\n        //               //     text: z.object({\n        //               //       accessibility: z.object({\n        //               //         accessibilityData: z.object({\n        //               //           label: z.string()\n        //               //         })\n        //               //       }),\n        //               //       simpleText: z.string()\n        //               //     }),\n        //               //     style: z.string()\n        //               //   })\n        //               // }),\n        //               z.object({\n        //                 thumbnailOverlayNowPlayingRenderer: z.object({\n        //                   text: z.object({\n        //                     runs: z.array(z.object({ text: z.string() }))\n        //                   })\n        //                 })\n        //               })\n        //             // ])\n        //           )\n        //         })\n        //       })\n        //     ),\n        //     title: z.object({ simpleText: z.string() }),\n        //     trackingParams: z.string()\n        //   })\n        // }),\n        // autoplay: z.object({\n        //   playerOverlayAutoplayRenderer: z.object({\n        //     title: z.object({ simpleText: z.string() }),\n        //     videoTitle: z.object({\n        //       accessibility: z.object({\n        //         accessibilityData: z.object({ label: z.string() })\n        //       }),\n        //       simpleText: z.string()\n        //     }),\n        //     byline: z.object({\n        //       runs: z.array(\n        //         z.object({\n        //           text: z.string(),\n        //           navigationEndpoint: z.object({\n        //             clickTrackingParams: z.string(),\n        //             commandMetadata: z.object({\n        //               webCommandMetadata: z.object({\n        //                 url: z.string(),\n        //                 webPageType: z.string(),\n        //                 rootVe: z.number(),\n        //                 apiUrl: z.string()\n        //               })\n        //             }),\n        //             browseEndpoint: z.object({\n        //               browseId: z.string(),\n        //               canonicalBaseUrl: z.string()\n        //             })\n        //           })\n        //         })\n        //       )\n        //     }),\n        //     pauseText: z.object({ simpleText: z.string() }),\n        //     background: z.object({\n        //       thumbnails: z.array(\n        //         z.object({\n        //           url: z.string(),\n        //           width: z.number(),\n        //           height: z.number()\n        //         })\n        //       )\n        //     }),\n        //     countDownSecs: z.number(),\n        //     cancelButton: z.object({\n        //       buttonRenderer: z.object({\n        //         style: z.string(),\n        //         size: z.string(),\n        //         isDisabled: z.boolean(),\n        //         text: z.object({ simpleText: z.string() }),\n        //         accessibility: z.object({ label: z.string() }),\n        //         trackingParams: z.string(),\n        //         accessibilityData: z.object({\n        //           accessibilityData: z.object({ label: z.string() })\n        //         }),\n        //         command: z.object({\n        //           clickTrackingParams: z.string(),\n        //           commandMetadata: z.object({\n        //             webCommandMetadata: z.object({\n        //               sendPost: z.boolean(),\n        //               apiUrl: z.string()\n        //             })\n        //           }),\n        //           getSurveyCommand: z.object({\n        //             endpoint: z.object({\n        //               watch: z.object({ hack: z.boolean() })\n        //             }),\n        //             action: z.string()\n        //           })\n        //         })\n        //       })\n        //     }),\n        //     nextButton: z.object({\n        //       buttonRenderer: z.object({\n        //         style: z.string(),\n        //         size: z.string(),\n        //         isDisabled: z.boolean(),\n        //         navigationEndpoint: z.object({\n        //           clickTrackingParams: z.string(),\n        //           commandMetadata: z.object({\n        //             webCommandMetadata: z.object({\n        //               url: z.string(),\n        //               webPageType: z.string(),\n        //               rootVe: z.number()\n        //             })\n        //           }),\n        //           watchEndpoint: z.object({\n        //             videoId: z.string(),\n        //             watchEndpointSupportedOnesieConfig: z.object({\n        //               html5PlaybackOnesieConfig: z.object({\n        //                 commonConfig: z.object({ url: z.string() })\n        //               })\n        //             })\n        //           })\n        //         }),\n        //         accessibility: z.object({ label: z.string() }),\n        //         trackingParams: z.string(),\n        //         accessibilityData: z.object({\n        //           accessibilityData: z.object({ label: z.string() })\n        //         })\n        //       })\n        //     }),\n        //     trackingParams: z.string(),\n        //     closeButton: z.object({\n        //       buttonRenderer: z.object({\n        //         style: z.string(),\n        //         size: z.string(),\n        //         isDisabled: z.boolean(),\n        //         icon: z.object({ iconType: z.string() }),\n        //         accessibility: z.object({ label: z.string() }),\n        //         trackingParams: z.string()\n        //       })\n        //     }),\n        //     thumbnailOverlays: z.array(\n        //       z.object({\n        //         thumbnailOverlayTimeStatusRenderer: z.object({\n        //           text: z.object({\n        //             accessibility: z.object({\n        //               accessibilityData: z.object({ label: z.string() })\n        //             }),\n        //             simpleText: z.string()\n        //           }),\n        //           style: z.string()\n        //         })\n        //       })\n        //     ),\n        //     preferImmediateRedirect: z.boolean(),\n        //     videoId: z.string(),\n        //     publishedTimeText: z.object({ simpleText: z.string() }),\n        //     webShowNewAutonavCountdown: z.boolean(),\n        //     webShowBigThumbnailEndscreen: z.boolean(),\n        //     shortViewCountText: z.object({\n        //       accessibility: z.object({\n        //         accessibilityData: z.object({ label: z.string() })\n        //       }),\n        //       simpleText: z.string()\n        //     }),\n        //     countDownSecsForFullscreen: z.number()\n        //   })\n        // }),\n        // shareButton: z.object({\n        //   buttonRenderer: z.object({\n        //     style: z.string(),\n        //     size: z.string(),\n        //     isDisabled: z.boolean(),\n        //     icon: z.object({ iconType: z.string() }),\n        //     navigationEndpoint: z.object({\n        //       clickTrackingParams: z.string(),\n        //       commandMetadata: z.object({\n        //         webCommandMetadata: z.object({\n        //           sendPost: z.boolean(),\n        //           apiUrl: z.string()\n        //         })\n        //       }),\n        //       shareEntityServiceEndpoint: z.object({\n        //         serializedShareEntity: z.string(),\n        //         commands: z.array(\n        //           z.object({\n        //             clickTrackingParams: z.string(),\n        //             openPopupAction: z.object({\n        //               popup: z.object({\n        //                 unifiedSharePanelRenderer: z.object({\n        //                   trackingParams: z.string(),\n        //                   showLoadingSpinner: z.boolean()\n        //                 })\n        //               }),\n        //               popupType: z.string(),\n        //               beReused: z.boolean()\n        //             })\n        //           })\n        //         )\n        //       })\n        //     }),\n        //     tooltip: z.string(),\n        //     trackingParams: z.string()\n        //   })\n        // }),\n        // addToMenu: z.object({\n        //   menuRenderer: z.object({ trackingParams: z.string() })\n        // }),\n        // videoDetails: z.object({\n        //   playerOverlayVideoDetailsRenderer: z.object({\n        //     title: z.object({ simpleText: z.string() }),\n        //     subtitle: z.object({\n        //       runs: z.array(z.object({ text: z.string() }))\n        //     })\n        //   })\n        // }),\n        // autonavToggle: z.object({\n        //   autoplaySwitchButtonRenderer: z.object({\n        //     onEnabledCommand: z.object({\n        //       clickTrackingParams: z.string(),\n        //       commandMetadata: z.object({\n        //         webCommandMetadata: z.object({\n        //           sendPost: z.boolean(),\n        //           apiUrl: z.string()\n        //         })\n        //       }),\n        //       setSettingEndpoint: z.object({\n        //         settingItemId: z.string(),\n        //         boolValue: z.boolean(),\n        //         settingItemIdForClient: z.string()\n        //       })\n        //     }),\n        //     onDisabledCommand: z.object({\n        //       clickTrackingParams: z.string(),\n        //       commandMetadata: z.object({\n        //         webCommandMetadata: z.object({\n        //           sendPost: z.boolean(),\n        //           apiUrl: z.string()\n        //         })\n        //       }),\n        //       setSettingEndpoint: z.object({\n        //         settingItemId: z.string(),\n        //         boolValue: z.boolean(),\n        //         settingItemIdForClient: z.string()\n        //       })\n        //     }),\n        //     enabledAccessibilityData: z.object({\n        //       accessibilityData: z.object({ label: z.string() })\n        //     }),\n        //     disabledAccessibilityData: z.object({\n        //       accessibilityData: z.object({ label: z.string() })\n        //     }),\n        //     trackingParams: z.string(),\n        //     enabled: z.boolean()\n        //   })\n        // }),\n        // decoratedPlayerBarRenderer: z.object({\n        //   decoratedPlayerBarRenderer: z.object({\n        //     playerBar: z.object({\n        //       multiMarkersPlayerBarRenderer: z.object({\n        //         visibleOnLoad: z.object({ key: z.string() }),\n        //         trackingParams: z.string()\n        //       })\n        //     })\n        //   })\n        // }),\n        // speedmasterUserEdu: z.object({\n        //   speedmasterEduViewModel: z.object({\n        //     bodyText: z.object({ content: z.string() })\n        //   })\n        // })\n      }),\n    }),\n    onResponseReceivedEndpoints: z.array(\n      // z.union([\n      //   z.object({\n      //     clickTrackingParams: z.string(),\n      //     commandMetadata: z.object({\n      //       webCommandMetadata: z.object({ sendPost: z.boolean() })\n      //     }),\n      //     signalServiceEndpoint: z.object({\n      //       signal: z.string(),\n      //       actions: z.array(\n      //         z.object({\n      //           clickTrackingParams: z.string(),\n      //           signalAction: z.object({ signal: z.string() })\n      //         })\n      //       )\n      //     })\n      //   }),\n      z.object({\n        // clickTrackingParams: z.string(),\n        // loadMarkersCommand: z.object({\n        //   visibleOnLoadKeys: z.array(z.string()),\n        //   entityKeys: z.array(z.string())\n        // })\n      }),\n      // ])\n    ),\n    // engagementPanels: z.array(\n    //   // z.union([\n    //     z.object({\n    //       engagementPanelSectionListRenderer: z.object({\n    //         content: z.object({\n    //           adsEngagementPanelContentRenderer: z.object({\n    //             hack: z.boolean()\n    //           })\n    //         }),\n    //         targetId: z.string(),\n    //         visibility: z.string(),\n    //         loggingDirectives: z.object({\n    //           trackingParams: z.string(),\n    //           visibility: z.object({ types: z.string() }),\n    //           enableDisplayloggerExperiment: z.boolean()\n    //         })\n    //       })\n    //     }),\n    //     // z.object({\n    //     //   engagementPanelSectionListRenderer: z.object({\n    //     //     panelIdentifier: z.string(),\n    //     //     header: z.object({\n    //     //       engagementPanelTitleHeaderRenderer: z.object({\n    //     //         title: z.object({ simpleText: z.string() }),\n    //     //         visibilityButton: z.object({\n    //     //           buttonRenderer: z.object({\n    //     //             icon: z.object({ iconType: z.string() }),\n    //     //             trackingParams: z.string(),\n    //     //             accessibilityData: z.object({\n    //     //               accessibilityData: z.object({ label: z.string() })\n    //     //             }),\n    //     //             command: z.object({\n    //     //               clickTrackingParams: z.string(),\n    //     //               commandExecutorCommand: z.object({\n    //     //                 commands: z.array(\n    //     //                   z.union([\n    //     //                     z.object({\n    //     //                       clickTrackingParams: z.string(),\n    //     //                       changeEngagementPanelVisibilityAction: z.object({\n    //     //                         targetId: z.string(),\n    //     //                         visibility: z.string()\n    //     //                       })\n    //     //                     }),\n    //     //                     z.object({\n    //     //                       clickTrackingParams: z.string(),\n    //     //                       updateToggleButtonStateCommand: z.object({\n    //     //                         toggled: z.boolean(),\n    //     //                         buttonId: z.string()\n    //     //                       })\n    //     //                     })\n    //     //                   ])\n    //     //                 )\n    //     //               })\n    //     //             })\n    //     //           })\n    //     //         }),\n    //     //         trackingParams: z.string()\n    //     //       })\n    //     //     }),\n    //     //     content: z.object({\n    //     //       structuredDescriptionContentRenderer: z.object({\n    //     //         items: z.array(\n    //     //           z.union([\n    //     //             z.object({\n    //     //               videoDescriptionHeaderRenderer: z.object({\n    //     //                 title: z.object({\n    //     //                   runs: z.array(z.object({ text: z.string() }))\n    //     //                 }),\n    //     //                 channel: z.object({ simpleText: z.string() }),\n    //     //                 views: z.object({ simpleText: z.string() }),\n    //     //                 publishDate: z.object({ simpleText: z.string() }),\n    //     //                 channelNavigationEndpoint: z.object({\n    //     //                   clickTrackingParams: z.string(),\n    //     //                   commandMetadata: z.object({\n    //     //                     webCommandMetadata: z.object({\n    //     //                       url: z.string(),\n    //     //                       webPageType: z.string(),\n    //     //                       rootVe: z.number(),\n    //     //                       apiUrl: z.string()\n    //     //                     })\n    //     //                   }),\n    //     //                   browseEndpoint: z.object({\n    //     //                     browseId: z.string(),\n    //     //                     canonicalBaseUrl: z.string()\n    //     //                   })\n    //     //                 }),\n    //     //                 channelThumbnail: z.object({\n    //     //                   thumbnails: z.array(z.object({ url: z.string() }))\n    //     //                 })\n    //     //               })\n    //     //             }),\n    //     //             z.object({\n    //     //               expandableVideoDescriptionBodyRenderer: z.object({\n    //     //                 showMoreText: z.object({ simpleText: z.string() }),\n    //     //                 showLessText: z.object({ simpleText: z.string() }),\n    //     //                 attributedDescriptionBodyText: z.object({\n    //     //                   content: z.string(),\n    //     //                   commandRuns: z.array(\n    //     //                     z.union([\n    //     //                       z.object({\n    //     //                         startIndex: z.number(),\n    //     //                         length: z.number(),\n    //     //                         onTap: z.object({\n    //     //                           innertubeCommand: z.object({\n    //     //                             clickTrackingParams: z.string(),\n    //     //                             commandMetadata: z.object({\n    //     //                               webCommandMetadata: z.object({\n    //     //                                 url: z.string(),\n    //     //                                 webPageType: z.string(),\n    //     //                                 rootVe: z.number()\n    //     //                               })\n    //     //                             }),\n    //     //                             urlEndpoint: z.object({\n    //     //                               url: z.string(),\n    //     //                               target: z.string(),\n    //     //                               nofollow: z.boolean()\n    //     //                             })\n    //     //                           })\n    //     //                         })\n    //     //                       }),\n    //     //                       z.object({\n    //     //                         startIndex: z.number(),\n    //     //                         length: z.number(),\n    //     //                         onTap: z.object({\n    //     //                           innertubeCommand: z.object({\n    //     //                             clickTrackingParams: z.string(),\n    //     //                             commandMetadata: z.object({\n    //     //                               webCommandMetadata: z.object({\n    //     //                                 url: z.string(),\n    //     //                                 webPageType: z.string(),\n    //     //                                 rootVe: z.number(),\n    //     //                                 apiUrl: z.string()\n    //     //                               })\n    //     //                             }),\n    //     //                             browseEndpoint: z.object({\n    //     //                               browseId: z.string(),\n    //     //                               params: z.string()\n    //     //                             })\n    //     //                           })\n    //     //                         }),\n    //     //                         loggingDirectives: z.object({\n    //     //                           trackingParams: z.string(),\n    //     //                           enableDisplayloggerExperiment: z.boolean()\n    //     //                         })\n    //     //                       })\n    //     //                     ])\n    //     //                   ),\n    //     //                   styleRuns: z.array(\n    //     //                     z.object({\n    //     //                       startIndex: z.number(),\n    //     //                       length: z.number(),\n    //     //                       styleRunExtensions: z.object({\n    //     //                         styleRunColorMapExtension: z.object({\n    //     //                           colorMap: z.array(\n    //     //                             z.object({\n    //     //                               key: z.string(),\n    //     //                               value: z.number()\n    //     //                             })\n    //     //                           )\n    //     //                         })\n    //     //                       })\n    //     //                     })\n    //     //                   ),\n    //     //                   attachmentRuns: z.array(\n    //     //                     z.object({\n    //     //                       startIndex: z.number(),\n    //     //                       length: z.number(),\n    //     //                       element: z.object({\n    //     //                         type: z.object({\n    //     //                           imageType: z.object({\n    //     //                             image: z.object({\n    //     //                               sources: z.array(\n    //     //                                 z.object({ url: z.string() })\n    //     //                               )\n    //     //                             })\n    //     //                           })\n    //     //                         }),\n    //     //                         properties: z.object({\n    //     //                           layoutProperties: z.object({\n    //     //                             height: z.object({\n    //     //                               value: z.number(),\n    //     //                               unit: z.string()\n    //     //                             }),\n    //     //                             width: z.object({\n    //     //                               value: z.number(),\n    //     //                               unit: z.string()\n    //     //                             }),\n    //     //                             margin: z.object({\n    //     //                               top: z.object({\n    //     //                                 value: z.number(),\n    //     //                                 unit: z.string()\n    //     //                               })\n    //     //                             })\n    //     //                           })\n    //     //                         })\n    //     //                       }),\n    //     //                       alignment: z.string()\n    //     //                     })\n    //     //                   ),\n    //     //                   decorationRuns: z.array(\n    //     //                     z.object({\n    //     //                       textDecorator: z.object({\n    //     //                         highlightTextDecorator: z.object({\n    //     //                           startIndex: z.number(),\n    //     //                           length: z.number(),\n    //     //                           backgroundCornerRadius: z.number(),\n    //     //                           bottomPadding: z.number(),\n    //     //                           highlightTextDecoratorExtensions: z.object({\n    //     //                             highlightTextDecoratorColorMapExtension: z.object(\n    //     //                               {\n    //     //                                 colorMap: z.array(\n    //     //                                   z.object({\n    //     //                                     key: z.string(),\n    //     //                                     value: z.number()\n    //     //                                   })\n    //     //                                 )\n    //     //                               }\n    //     //                             )\n    //     //                           })\n    //     //                         })\n    //     //                       })\n    //     //                     })\n    //     //                   )\n    //     //                 }),\n    //     //                 headerRuns: z.array(\n    //     //                   z.object({\n    //     //                     startIndex: z.number(),\n    //     //                     length: z.number(),\n    //     //                     headerMapping: z.string()\n    //     //                   })\n    //     //                 )\n    //     //               })\n    //     //             }),\n    //     //             z.object({\n    //     //               horizontalCardListRenderer: z.object({\n    //     //                 cards: z.array(\n    //     //                   z.object({\n    //     //                     videoAttributeViewModel: z.object({\n    //     //                       image: z.object({\n    //     //                         sources: z.array(z.object({ url: z.string() }))\n    //     //                       }),\n    //     //                       imageStyle: z.string(),\n    //     //                       title: z.string(),\n    //     //                       subtitle: z.string(),\n    //     //                       secondarySubtitle: z.object({\n    //     //                         content: z.string()\n    //     //                       }),\n    //     //                       orientation: z.string(),\n    //     //                       sizingRule: z.string(),\n    //     //                       overflowMenuOnTap: z.object({\n    //     //                         innertubeCommand: z.object({\n    //     //                           clickTrackingParams: z.string(),\n    //     //                           commandMetadata: z.object({\n    //     //                             webCommandMetadata: z.object({\n    //     //                               ignoreNavigation: z.boolean()\n    //     //                             })\n    //     //                           }),\n    //     //                           confirmDialogEndpoint: z.object({\n    //     //                             content: z.object({\n    //     //                               confirmDialogRenderer: z.object({\n    //     //                                 title: z.object({\n    //     //                                   runs: z.array(\n    //     //                                     z.object({ text: z.string() })\n    //     //                                   )\n    //     //                                 }),\n    //     //                                 trackingParams: z.string(),\n    //     //                                 dialogMessages: z.array(\n    //     //                                   z.object({\n    //     //                                     runs: z.array(\n    //     //                                       z.union([\n    //     //                                         z.object({\n    //     //                                           text: z.string(),\n    //     //                                           bold: z.boolean()\n    //     //                                         }),\n    //     //                                         z.object({ text: z.string() })\n    //     //                                       ])\n    //     //                                     )\n    //     //                                   })\n    //     //                                 ),\n    //     //                                 confirmButton: z.object({\n    //     //                                   buttonRenderer: z.object({\n    //     //                                     style: z.string(),\n    //     //                                     size: z.string(),\n    //     //                                     isDisabled: z.boolean(),\n    //     //                                     text: z.object({\n    //     //                                       runs: z.array(\n    //     //                                         z.object({ text: z.string() })\n    //     //                                       )\n    //     //                                     }),\n    //     //                                     trackingParams: z.string(),\n    //     //                                     accessibilityData: z.object({\n    //     //                                       accessibilityData: z.object({\n    //     //                                         label: z.string()\n    //     //                                       })\n    //     //                                     })\n    //     //                                   })\n    //     //                                 }),\n    //     //                                 primaryIsCancel: z.boolean()\n    //     //                               })\n    //     //                             })\n    //     //                           })\n    //     //                         })\n    //     //                       }),\n    //     //                       overflowMenuA11yLabel: z.string(),\n    //     //                       loggingDirectives: z.object({\n    //     //                         trackingParams: z.string(),\n    //     //                         visibility: z.object({ types: z.string() }),\n    //     //                         enableDisplayloggerExperiment: z.boolean()\n    //     //                       })\n    //     //                     })\n    //     //                   })\n    //     //                 ),\n    //     //                 trackingParams: z.string(),\n    //     //                 header: z.object({\n    //     //                   richListHeaderRenderer: z.object({\n    //     //                     title: z.object({ simpleText: z.string() }),\n    //     //                     subtitle: z.object({ simpleText: z.string() }),\n    //     //                     trackingParams: z.string()\n    //     //                   })\n    //     //                 }),\n    //     //                 style: z.object({ type: z.string() }),\n    //     //                 footerButton: z.object({\n    //     //                   buttonViewModel: z.object({\n    //     //                     iconName: z.string(),\n    //     //                     onTap: z.object({\n    //     //                       innertubeCommand: z.object({\n    //     //                         clickTrackingParams: z.string(),\n    //     //                         commandMetadata: z.object({\n    //     //                           webCommandMetadata: z.object({\n    //     //                             url: z.string(),\n    //     //                             webPageType: z.string(),\n    //     //                             rootVe: z.number(),\n    //     //                             apiUrl: z.string()\n    //     //                           })\n    //     //                         }),\n    //     //                         browseEndpoint: z.object({\n    //     //                           browseId: z.string()\n    //     //                         })\n    //     //                       })\n    //     //                     }),\n    //     //                     style: z.string(),\n    //     //                     trackingParams: z.string(),\n    //     //                     type: z.string(),\n    //     //                     buttonSize: z.string(),\n    //     //                     titleFormatted: z.object({ content: z.string() })\n    //     //                   })\n    //     //                 })\n    //     //               })\n    //     //             }),\n    //     //             z.object({\n    //     //               reelShelfRenderer: z.object({\n    //     //                 title: z.object({\n    //     //                   runs: z.array(z.object({ text: z.string() }))\n    //     //                 }),\n    //     //                 items: z.array(\n    //     //                   z.object({\n    //     //                     reelItemRenderer: z.object({\n    //     //                       videoId: z.string(),\n    //     //                       headline: z.object({ simpleText: z.string() }),\n    //     //                       thumbnail: z.object({\n    //     //                         thumbnails: z.array(\n    //     //                           z.object({\n    //     //                             url: z.string(),\n    //     //                             width: z.number(),\n    //     //                             height: z.number()\n    //     //                           })\n    //     //                         ),\n    //     //                         isOriginalAspectRatio: z.boolean()\n    //     //                       }),\n    //     //                       viewCountText: z.object({\n    //     //                         accessibility: z.object({\n    //     //                           accessibilityData: z.object({\n    //     //                             label: z.string()\n    //     //                           })\n    //     //                         }),\n    //     //                         simpleText: z.string()\n    //     //                       }),\n    //     //                       navigationEndpoint: z.object({\n    //     //                         clickTrackingParams: z.string(),\n    //     //                         commandMetadata: z.object({\n    //     //                           webCommandMetadata: z.object({\n    //     //                             url: z.string(),\n    //     //                             webPageType: z.string(),\n    //     //                             rootVe: z.number()\n    //     //                           })\n    //     //                         }),\n    //     //                         reelWatchEndpoint: z.object({\n    //     //                           videoId: z.string(),\n    //     //                           playerParams: z.string(),\n    //     //                           thumbnail: z.object({\n    //     //                             thumbnails: z.array(\n    //     //                               z.object({\n    //     //                                 url: z.string(),\n    //     //                                 width: z.number(),\n    //     //                                 height: z.number()\n    //     //                               })\n    //     //                             ),\n    //     //                             isOriginalAspectRatio: z.boolean()\n    //     //                           }),\n    //     //                           overlay: z.object({\n    //     //                             reelPlayerOverlayRenderer: z.object({\n    //     //                               style: z.string(),\n    //     //                               trackingParams: z.string(),\n    //     //                               reelPlayerNavigationModel: z.string()\n    //     //                             })\n    //     //                           }),\n    //     //                           params: z.string(),\n    //     //                           sequenceProvider: z.string(),\n    //     //                           sequenceParams: z.string(),\n    //     //                           loggingContext: z.object({\n    //     //                             vssLoggingContext: z.object({\n    //     //                               serializedContextData: z.string()\n    //     //                             }),\n    //     //                             qoeLoggingContext: z.object({\n    //     //                               serializedContextData: z.string()\n    //     //                             })\n    //     //                           }),\n    //     //                           ustreamerConfig: z.string()\n    //     //                         })\n    //     //                       }),\n    //     //                       menu: z.object({\n    //     //                         menuRenderer: z.object({\n    //     //                           items: z.array(\n    //     //                             z.object({\n    //     //                               menuNavigationItemRenderer: z.object({\n    //     //                                 text: z.object({\n    //     //                                   runs: z.array(\n    //     //                                     z.object({ text: z.string() })\n    //     //                                   )\n    //     //                                 }),\n    //     //                                 icon: z.object({\n    //     //                                   iconType: z.string()\n    //     //                                 }),\n    //     //                                 navigationEndpoint: z.object({\n    //     //                                   clickTrackingParams: z.string(),\n    //     //                                   commandMetadata: z.object({\n    //     //                                     webCommandMetadata: z.object({\n    //     //                                       ignoreNavigation: z.boolean()\n    //     //                                     })\n    //     //                                   }),\n    //     //                                   userFeedbackEndpoint: z.object({\n    //     //                                     additionalDatas: z.array(\n    //     //                                       z.object({\n    //     //                                         userFeedbackEndpointProductSpecificValueData: z.object(\n    //     //                                           {\n    //     //                                             key: z.string(),\n    //     //                                             value: z.string()\n    //     //                                           }\n    //     //                                         )\n    //     //                                       })\n    //     //                                     )\n    //     //                                   })\n    //     //                                 }),\n    //     //                                 trackingParams: z.string(),\n    //     //                                 accessibility: z.object({\n    //     //                                   accessibilityData: z.object({\n    //     //                                     label: z.string()\n    //     //                                   })\n    //     //                                 })\n    //     //                               })\n    //     //                             })\n    //     //                           ),\n    //     //                           trackingParams: z.string(),\n    //     //                           accessibility: z.object({\n    //     //                             accessibilityData: z.object({\n    //     //                               label: z.string()\n    //     //                             })\n    //     //                           })\n    //     //                         })\n    //     //                       }),\n    //     //                       trackingParams: z.string(),\n    //     //                       accessibility: z.object({\n    //     //                         accessibilityData: z.object({\n    //     //                           label: z.string()\n    //     //                         })\n    //     //                       }),\n    //     //                       style: z.string(),\n    //     //                       videoType: z.string(),\n    //     //                       loggingDirectives: z.object({\n    //     //                         trackingParams: z.string(),\n    //     //                         visibility: z.object({ types: z.string() }),\n    //     //                         enableDisplayloggerExperiment: z.boolean()\n    //     //                       })\n    //     //                     })\n    //     //                   })\n    //     //                 ),\n    //     //                 trackingParams: z.string()\n    //     //               })\n    //     //             }),\n    //     //             z.object({\n    //     //               videoDescriptionTranscriptSectionRenderer: z.object({\n    //     //                 sectionTitle: z.object({\n    //     //                   runs: z.array(z.object({ text: z.string() }))\n    //     //                 }),\n    //     //                 subHeaderText: z.object({\n    //     //                   runs: z.array(z.object({ text: z.string() }))\n    //     //                 }),\n    //     //                 primaryButton: z.object({\n    //     //                   buttonRenderer: z.object({\n    //     //                     style: z.string(),\n    //     //                     size: z.string(),\n    //     //                     isDisabled: z.boolean(),\n    //     //                     text: z.object({\n    //     //                       runs: z.array(z.object({ text: z.string() }))\n    //     //                     }),\n    //     //                     trackingParams: z.string(),\n    //     //                     command: z.object({\n    //     //                       clickTrackingParams: z.string(),\n    //     //                       commandExecutorCommand: z.object({\n    //     //                         commands: z.array(\n    //     //                           z.union([\n    //     //                             z.object({\n    //     //                               clickTrackingParams: z.string(),\n    //     //                               showEngagementPanelEndpoint: z.object({\n    //     //                                 panelIdentifier: z.string(),\n    //     //                                 sourcePanelIdentifier: z.string()\n    //     //                               })\n    //     //                             }),\n    //     //                             z.object({\n    //     //                               clickTrackingParams: z.string(),\n    //     //                               scrollToEngagementPanelCommand: z.object({\n    //     //                                 targetId: z.string()\n    //     //                               })\n    //     //                             })\n    //     //                           ])\n    //     //                         )\n    //     //                       })\n    //     //                     })\n    //     //                   })\n    //     //                 }),\n    //     //                 trackingParams: z.string()\n    //     //               })\n    //     //             }),\n    //     //             z.object({\n    //     //               videoDescriptionInfocardsSectionRenderer: z.object({\n    //     //                 sectionTitle: z.object({ simpleText: z.string() }),\n    //     //                 creatorVideosButton: z.object({\n    //     //                   buttonRenderer: z.object({\n    //     //                     style: z.string(),\n    //     //                     size: z.string(),\n    //     //                     isDisabled: z.boolean(),\n    //     //                     text: z.object({ simpleText: z.string() }),\n    //     //                     icon: z.object({ iconType: z.string() }),\n    //     //                     trackingParams: z.string(),\n    //     //                     command: z.object({\n    //     //                       clickTrackingParams: z.string(),\n    //     //                       commandMetadata: z.object({\n    //     //                         webCommandMetadata: z.object({\n    //     //                           url: z.string(),\n    //     //                           webPageType: z.string(),\n    //     //                           rootVe: z.number(),\n    //     //                           apiUrl: z.string()\n    //     //                         })\n    //     //                       }),\n    //     //                       browseEndpoint: z.object({\n    //     //                         browseId: z.string(),\n    //     //                         params: z.string()\n    //     //                       })\n    //     //                     })\n    //     //                   })\n    //     //                 }),\n    //     //                 creatorAboutButton: z.object({\n    //     //                   buttonRenderer: z.object({\n    //     //                     style: z.string(),\n    //     //                     size: z.string(),\n    //     //                     isDisabled: z.boolean(),\n    //     //                     text: z.object({ simpleText: z.string() }),\n    //     //                     icon: z.object({ iconType: z.string() }),\n    //     //                     trackingParams: z.string(),\n    //     //                     command: z.object({\n    //     //                       clickTrackingParams: z.string(),\n    //     //                       commandMetadata: z.object({\n    //     //                         webCommandMetadata: z.object({\n    //     //                           url: z.string(),\n    //     //                           webPageType: z.string(),\n    //     //                           rootVe: z.number(),\n    //     //                           apiUrl: z.string()\n    //     //                         })\n    //     //                       }),\n    //     //                       browseEndpoint: z.object({\n    //     //                         browseId: z.string(),\n    //     //                         params: z.string()\n    //     //                       })\n    //     //                     })\n    //     //                   })\n    //     //                 }),\n    //     //                 infocards: z.array(\n    //     //                   z.union([\n    //     //                     z.object({\n    //     //                       compactInfocardRenderer: z.object({\n    //     //                         content: z.object({\n    //     //                           mediaLockupRenderer: z.object({\n    //     //                             title: z.object({ simpleText: z.string() }),\n    //     //                             subtitle: z.object({\n    //     //                               simpleText: z.string()\n    //     //                             }),\n    //     //                             thumbnailDetails: z.object({\n    //     //                               thumbnails: z.array(\n    //     //                                 z.object({\n    //     //                                   url: z.string(),\n    //     //                                   width: z.number(),\n    //     //                                   height: z.number()\n    //     //                                 })\n    //     //                               )\n    //     //                             }),\n    //     //                             endpoint: z.object({\n    //     //                               clickTrackingParams: z.string(),\n    //     //                               commandMetadata: z.object({\n    //     //                                 webCommandMetadata: z.object({\n    //     //                                   url: z.string(),\n    //     //                                   webPageType: z.string(),\n    //     //                                   rootVe: z.number()\n    //     //                                 })\n    //     //                               }),\n    //     //                               urlEndpoint: z.object({\n    //     //                                 url: z.string(),\n    //     //                                 target: z.string()\n    //     //                               })\n    //     //                             }),\n    //     //                             trackingParams: z.string(),\n    //     //                             enableSubtitleLaunchIcon: z.boolean(),\n    //     //                             uiTweaks: z.object({\n    //     //                               useZeroPadding: z.boolean(),\n    //     //                               thumbnailWidth: z.number(),\n    //     //                               thumbnailHeight: z.number()\n    //     //                             }),\n    //     //                             maxLinesTitle: z.number(),\n    //     //                             maxLinesSubtitle: z.number(),\n    //     //                             disableEndpoint: z.boolean()\n    //     //                           })\n    //     //                         }),\n    //     //                         trackingParams: z.string()\n    //     //                       })\n    //     //                     }),\n    //     //                     z.object({\n    //     //                       compactInfocardRenderer: z.object({\n    //     //                         content: z.object({\n    //     //                           structuredDescriptionVideoLockupRenderer: z.object(\n    //     //                             {\n    //     //                               thumbnail: z.object({\n    //     //                                 thumbnails: z.array(\n    //     //                                   z.object({\n    //     //                                     url: z.string(),\n    //     //                                     width: z.number(),\n    //     //                                     height: z.number()\n    //     //                                   })\n    //     //                                 )\n    //     //                               }),\n    //     //                               title: z.object({\n    //     //                                 simpleText: z.string()\n    //     //                               }),\n    //     //                               shortBylineText: z.object({\n    //     //                                 simpleText: z.string()\n    //     //                               }),\n    //     //                               metadataDetails: z.object({\n    //     //                                 simpleText: z.string()\n    //     //                               }),\n    //     //                               navigationEndpoint: z.object({\n    //     //                                 clickTrackingParams: z.string(),\n    //     //                                 commandMetadata: z.object({\n    //     //                                   webCommandMetadata: z.object({\n    //     //                                     url: z.string(),\n    //     //                                     webPageType: z.string(),\n    //     //                                     rootVe: z.number()\n    //     //                                   })\n    //     //                                 }),\n    //     //                                 watchEndpoint: z.object({\n    //     //                                   videoId: z.string(),\n    //     //                                   watchEndpointSupportedOnesieConfig: z.object(\n    //     //                                     {\n    //     //                                       html5PlaybackOnesieConfig: z.object(\n    //     //                                         {\n    //     //                                           commonConfig: z.object({\n    //     //                                             url: z.string()\n    //     //                                           })\n    //     //                                         }\n    //     //                                       )\n    //     //                                     }\n    //     //                                   )\n    //     //                                 })\n    //     //                               }),\n    //     //                               lengthText: z.object({\n    //     //                                 simpleText: z.string()\n    //     //                               }),\n    //     //                               trackingParams: z.string(),\n    //     //                               isLiveVideo: z.boolean(),\n    //     //                               disableNavigationEndpoint: z.boolean(),\n    //     //                               maxLinesTitle: z.number(),\n    //     //                               maxLinesShortBylineText: z.number(),\n    //     //                               maxLinesMetadataDetails: z.number(),\n    //     //                               thumbnailWidth: z.number(),\n    //     //                               aspectRatio: z.number(),\n    //     //                               thumbnailOverlays: z.array(\n    //     //                                 z.object({\n    //     //                                   thumbnailOverlayTimeStatusRenderer: z.object(\n    //     //                                     {\n    //     //                                       text: z.object({\n    //     //                                         simpleText: z.string()\n    //     //                                       }),\n    //     //                                       style: z.string()\n    //     //                                     }\n    //     //                                   )\n    //     //                                 })\n    //     //                               )\n    //     //                             }\n    //     //                           )\n    //     //                         }),\n    //     //                         trackingParams: z.string()\n    //     //                       })\n    //     //                     })\n    //     //                   ])\n    //     //                 ),\n    //     //                 sectionSubtitle: z.object({\n    //     //                   accessibility: z.object({\n    //     //                     accessibilityData: z.object({ label: z.string() })\n    //     //                   }),\n    //     //                   simpleText: z.string()\n    //     //                 }),\n    //     //                 channelAvatar: z.object({\n    //     //                   thumbnails: z.array(z.object({ url: z.string() }))\n    //     //                 }),\n    //     //                 channelEndpoint: z.object({\n    //     //                   clickTrackingParams: z.string(),\n    //     //                   commandMetadata: z.object({\n    //     //                     webCommandMetadata: z.object({\n    //     //                       url: z.string(),\n    //     //                       webPageType: z.string(),\n    //     //                       rootVe: z.number(),\n    //     //                       apiUrl: z.string()\n    //     //                     })\n    //     //                   }),\n    //     //                   browseEndpoint: z.object({\n    //     //                     browseId: z.string(),\n    //     //                     canonicalBaseUrl: z.string()\n    //     //                   })\n    //     //                 }),\n    //     //                 trackingParams: z.string()\n    //     //               })\n    //     //             })\n    //     //           ])\n    //     //         )\n    //     //       })\n    //     //     }),\n    //     //     veType: z.number(),\n    //     //     targetId: z.string(),\n    //     //     visibility: z.string(),\n    //     //     loggingDirectives: z.object({\n    //     //       trackingParams: z.string(),\n    //     //       visibility: z.object({ types: z.string() }),\n    //     //       enableDisplayloggerExperiment: z.boolean()\n    //     //     })\n    //     //   })\n    //     // }),\n    //     // z.object({\n    //     //   engagementPanelSectionListRenderer: z.object({\n    //     //     panelIdentifier: z.string(),\n    //     //     header: z.object({\n    //     //       engagementPanelTitleHeaderRenderer: z.object({\n    //     //         title: z.object({\n    //     //           runs: z.array(z.object({ text: z.string() }))\n    //     //         }),\n    //     //         contextualInfo: z.object({\n    //     //           runs: z.array(z.object({ text: z.string() }))\n    //     //         }),\n    //     //         menu: z.object({\n    //     //           sortFilterSubMenuRenderer: z.object({\n    //     //             subMenuItems: z.array(\n    //     //               z.object({\n    //     //                 title: z.string(),\n    //     //                 selected: z.boolean(),\n    //     //                 serviceEndpoint: z.object({\n    //     //                   clickTrackingParams: z.string(),\n    //     //                   commandMetadata: z.object({\n    //     //                     webCommandMetadata: z.object({\n    //     //                       sendPost: z.boolean(),\n    //     //                       apiUrl: z.string()\n    //     //                     })\n    //     //                   }),\n    //     //                   continuationCommand: z.object({\n    //     //                     token: z.string(),\n    //     //                     request: z.string(),\n    //     //                     command: z.object({\n    //     //                       clickTrackingParams: z.string(),\n    //     //                       showReloadUiCommand: z.object({\n    //     //                         targetId: z.string()\n    //     //                       })\n    //     //                     })\n    //     //                   })\n    //     //                 }),\n    //     //                 trackingParams: z.string()\n    //     //               })\n    //     //             ),\n    //     //             icon: z.object({ iconType: z.string() }),\n    //     //             accessibility: z.object({\n    //     //               accessibilityData: z.object({ label: z.string() })\n    //     //             }),\n    //     //             trackingParams: z.string()\n    //     //           })\n    //     //         }),\n    //     //         visibilityButton: z.object({\n    //     //           buttonRenderer: z.object({\n    //     //             style: z.string(),\n    //     //             size: z.string(),\n    //     //             icon: z.object({ iconType: z.string() }),\n    //     //             trackingParams: z.string(),\n    //     //             accessibilityData: z.object({\n    //     //               accessibilityData: z.object({ label: z.string() })\n    //     //             }),\n    //     //             command: z.object({\n    //     //               clickTrackingParams: z.string(),\n    //     //               changeEngagementPanelVisibilityAction: z.object({\n    //     //                 targetId: z.string(),\n    //     //                 visibility: z.string()\n    //     //               })\n    //     //             })\n    //     //           })\n    //     //         }),\n    //     //         trackingParams: z.string()\n    //     //       })\n    //     //     }),\n    //     //     content: z.object({\n    //     //       sectionListRenderer: z.object({\n    //     //         contents: z.array(\n    //     //           z.object({\n    //     //             itemSectionRenderer: z.object({\n    //     //               contents: z.array(\n    //     //                 z.object({\n    //     //                   continuationItemRenderer: z.object({\n    //     //                     trigger: z.string(),\n    //     //                     continuationEndpoint: z.object({\n    //     //                       clickTrackingParams: z.string(),\n    //     //                       commandMetadata: z.object({\n    //     //                         webCommandMetadata: z.object({\n    //     //                           sendPost: z.boolean(),\n    //     //                           apiUrl: z.string()\n    //     //                         })\n    //     //                       }),\n    //     //                       continuationCommand: z.object({\n    //     //                         token: z.string(),\n    //     //                         request: z.string()\n    //     //                       })\n    //     //                     })\n    //     //                   })\n    //     //                 })\n    //     //               ),\n    //     //               trackingParams: z.string(),\n    //     //               sectionIdentifier: z.string(),\n    //     //               targetId: z.string()\n    //     //             })\n    //     //           })\n    //     //         ),\n    //     //         trackingParams: z.string()\n    //     //       })\n    //     //     }),\n    //     //     veType: z.number(),\n    //     //     targetId: z.string(),\n    //     //     visibility: z.string(),\n    //     //     loggingDirectives: z.object({\n    //     //       trackingParams: z.string(),\n    //     //       visibility: z.object({ types: z.string() }),\n    //     //       enableDisplayloggerExperiment: z.boolean()\n    //     //     })\n    //     //   })\n    //     // }),\n    //   //   z.object({\n    //   //     engagementPanelSectionListRenderer: z.object({\n    //   //       panelIdentifier: z.string(),\n    //   //       header: z.object({\n    //   //         engagementPanelTitleHeaderRenderer: z.object({\n    //   //           title: z.object({\n    //   //             runs: z.array(z.object({ text: z.string() }))\n    //   //           }),\n    //   //           menu: z.object({\n    //   //             menuRenderer: z.object({\n    //   //               items: z.array(\n    //   //                 z.object({\n    //   //                   menuServiceItemRenderer: z.object({\n    //   //                     text: z.object({\n    //   //                       runs: z.array(z.object({ text: z.string() }))\n    //   //                     }),\n    //   //                     serviceEndpoint: z.object({\n    //   //                       clickTrackingParams: z.string(),\n    //   //                       commandMetadata: z.object({\n    //   //                         webCommandMetadata: z.object({\n    //   //                           sendPost: z.boolean()\n    //   //                         })\n    //   //                       }),\n    //   //                       signalServiceEndpoint: z.object({\n    //   //                         signal: z.string(),\n    //   //                         actions: z.array(\n    //   //                           z.object({\n    //   //                             clickTrackingParams: z.string(),\n    //   //                             signalAction: z.object({\n    //   //                               signal: z.string()\n    //   //                             })\n    //   //                           })\n    //   //                         )\n    //   //                       })\n    //   //                     }),\n    //   //                     trackingParams: z.string()\n    //   //                   })\n    //   //                 })\n    //   //               ),\n    //   //               trackingParams: z.string(),\n    //   //               accessibility: z.object({\n    //   //                 accessibilityData: z.object({ label: z.string() })\n    //   //               })\n    //   //             })\n    //   //           }),\n    //   //           visibilityButton: z.object({\n    //   //             buttonRenderer: z.object({\n    //   //               icon: z.object({ iconType: z.string() }),\n    //   //               accessibility: z.object({ label: z.string() }),\n    //   //               trackingParams: z.string(),\n    //   //               accessibilityData: z.object({\n    //   //                 accessibilityData: z.object({ label: z.string() })\n    //   //               }),\n    //   //               command: z.object({\n    //   //                 clickTrackingParams: z.string(),\n    //   //                 changeEngagementPanelVisibilityAction: z.object({\n    //   //                   targetId: z.string(),\n    //   //                   visibility: z.string()\n    //   //                 })\n    //   //               })\n    //   //             })\n    //   //           }),\n    //   //           trackingParams: z.string()\n    //   //         })\n    //   //       }),\n    //   //       content: z.object({\n    //   //         continuationItemRenderer: z.object({\n    //   //           trigger: z.string(),\n    //   //           continuationEndpoint: z.object({\n    //   //             clickTrackingParams: z.string(),\n    //   //             commandMetadata: z.object({\n    //   //               webCommandMetadata: z.object({\n    //   //                 sendPost: z.boolean(),\n    //   //                 apiUrl: z.string()\n    //   //               })\n    //   //             }),\n    //   //             getTranscriptEndpoint: z.object({ params: z.string() })\n    //   //           })\n    //   //         })\n    //   //       }),\n    //   //       veType: z.number(),\n    //   //       targetId: z.string(),\n    //   //       visibility: z.string(),\n    //   //       onShowCommands: z.array(\n    //   //         z.object({\n    //   //           clickTrackingParams: z.string(),\n    //   //           scrollToEngagementPanelCommand: z.object({\n    //   //             targetId: z.string()\n    //   //           })\n    //   //         })\n    //   //       ),\n    //   //       loggingDirectives: z.object({\n    //   //         trackingParams: z.string(),\n    //   //         visibility: z.object({ types: z.string() }),\n    //   //         enableDisplayloggerExperiment: z.boolean()\n    //   //       })\n    //   //     })\n    //   //   })\n    //   // ])\n    // ),\n    topbar: z.object({\n      desktopTopbarRenderer: z.object({\n        logo: z.object({\n          topbarLogoRenderer: z.object({\n            iconImage: z.object({ iconType: z.string() }),\n            tooltipText: z.object({\n              runs: z.array(z.object({ text: z.string() })),\n            }),\n            endpoint: z.object({\n              clickTrackingParams: z.string(),\n              commandMetadata: z.object({\n                webCommandMetadata: z.object({\n                  url: z.string(),\n                  webPageType: z.string(),\n                  rootVe: z.number(),\n                  apiUrl: z.string(),\n                }),\n              }),\n              browseEndpoint: z.object({ browseId: z.string() }),\n            }),\n            trackingParams: z.string(),\n            overrideEntityKey: z.string(),\n          }),\n        }),\n        searchbox: z.object({\n          fusionSearchboxRenderer: z.object({\n            icon: z.object({ iconType: z.string() }),\n            placeholderText: z.object({\n              runs: z.array(z.object({ text: z.string() })),\n            }),\n            config: z.object({\n              webSearchboxConfig: z.object({\n                requestLanguage: z.string(),\n                requestDomain: z.string(),\n                hasOnscreenKeyboard: z.boolean(),\n                focusSearchbox: z.boolean(),\n              }),\n            }),\n            trackingParams: z.string(),\n            searchEndpoint: z.object({\n              clickTrackingParams: z.string(),\n              commandMetadata: z.object({\n                webCommandMetadata: z.object({\n                  url: z.string(),\n                  webPageType: z.string(),\n                  rootVe: z.number(),\n                }),\n              }),\n              searchEndpoint: z.object({ query: z.string() }),\n            }),\n            clearButton: z.object({\n              buttonRenderer: z.object({\n                style: z.string(),\n                size: z.string(),\n                isDisabled: z.boolean(),\n                icon: z.object({ iconType: z.string() }),\n                trackingParams: z.string(),\n                accessibilityData: z.object({\n                  accessibilityData: z.object({ label: z.string() }),\n                }),\n              }),\n            }),\n          }),\n        }),\n        trackingParams: z.string(),\n        interstitial: z\n          .object({\n            consentBumpV2Renderer: z.object({\n              interstitialLogoAside: z.object({\n                runs: z.array(z.object({ text: z.string() })),\n              }),\n              languagePickerButton: z.object({\n                buttonRenderer: z.object({\n                  style: z.string(),\n                  size: z.string(),\n                  isDisabled: z.boolean(),\n                  text: z.object({ simpleText: z.string() }),\n                  icon: z.object({ iconType: z.string() }),\n                  accessibility: z.object({ label: z.string() }),\n                  trackingParams: z.string(),\n                }),\n              }),\n              interstitialTitle: z.object({\n                runs: z.array(z.object({ text: z.string() })),\n              }),\n              customizeButton: z.object({\n                buttonRenderer: z.object({\n                  style: z.string(),\n                  size: z.string(),\n                  isDisabled: z.boolean(),\n                  text: z.object({ simpleText: z.string() }),\n                  trackingParams: z.string(),\n                  command: z.object({\n                    clickTrackingParams: z.string(),\n                    commandMetadata: z.object({\n                      webCommandMetadata: z.object({\n                        url: z.string(),\n                        webPageType: z.string(),\n                        rootVe: z.number(),\n                      }),\n                    }),\n                    urlEndpoint: z.object({ url: z.string() }),\n                  }),\n                }),\n              }),\n              agreeButton: z.object({\n                buttonRenderer: z.object({\n                  style: z.string(),\n                  size: z.string(),\n                  isDisabled: z.boolean(),\n                  text: z.object({ simpleText: z.string() }),\n                  accessibility: z.object({ label: z.string() }),\n                  trackingParams: z.string(),\n                  command: z.object({\n                    clickTrackingParams: z.string(),\n                    saveConsentAction: z.object({\n                      socsCookie: z.string(),\n                      savePreferenceUrl: z.string(),\n                    }),\n                  }),\n                }),\n              }),\n              privacyLink: z.object({\n                runs: z.array(\n                  z.object({\n                    text: z.string(),\n                    navigationEndpoint: z.object({\n                      clickTrackingParams: z.string(),\n                      commandMetadata: z.object({\n                        webCommandMetadata: z.object({\n                          url: z.string(),\n                          webPageType: z.string(),\n                          rootVe: z.number(),\n                        }),\n                      }),\n                      urlEndpoint: z.object({ url: z.string() }),\n                    }),\n                  }),\n                ),\n              }),\n              termsLink: z.object({\n                runs: z.array(\n                  z.object({\n                    text: z.string(),\n                    navigationEndpoint: z.object({\n                      clickTrackingParams: z.string(),\n                      commandMetadata: z.object({\n                        webCommandMetadata: z.object({\n                          url: z.string(),\n                          webPageType: z.string(),\n                          rootVe: z.number(),\n                        }),\n                      }),\n                      urlEndpoint: z.object({ url: z.string() }),\n                    }),\n                  }),\n                ),\n              }),\n              trackingParams: z.string(),\n              signInButton: z.object({\n                buttonRenderer: z.object({\n                  style: z.string(),\n                  size: z.string(),\n                  isDisabled: z.boolean(),\n                  text: z.object({ simpleText: z.string() }),\n                  icon: z.object({ iconType: z.string() }),\n                  tooltip: z.string(),\n                  trackingParams: z.string(),\n                  command: z.object({\n                    clickTrackingParams: z.string(),\n                    commandMetadata: z.object({\n                      webCommandMetadata: z.object({\n                        url: z.string(),\n                        webPageType: z.string(),\n                        rootVe: z.number(),\n                      }),\n                    }),\n                    signInEndpoint: z.object({ hack: z.boolean() }),\n                  }),\n                }),\n              }),\n              languageList: z.object({\n                dropdownRenderer: z.object({\n                  entries: z.array(\n                    z.object({\n                      dropdownItemRenderer: z.object({\n                        label: z.object({ simpleText: z.string() }),\n                        isSelected: z.boolean(),\n                        stringValue: z.string(),\n                        onSelectCommand: z.object({\n                          clickTrackingParams: z.string(),\n                          commandMetadata: z.object({\n                            webCommandMetadata: z.object({\n                              sendPost: z.boolean(),\n                            }),\n                          }),\n                          signalServiceEndpoint: z.object({\n                            signal: z.string(),\n                            actions: z.array(\n                              z.object({\n                                clickTrackingParams: z.string(),\n                                selectLanguageCommand: z.object({\n                                  hl: z.string(),\n                                }),\n                              }),\n                            ),\n                          }),\n                        }),\n                      }),\n                    }),\n                  ),\n                  accessibility: z.object({ label: z.string() }),\n                }),\n              }),\n              readMoreButton: z.object({\n                buttonRenderer: z.object({\n                  style: z.string(),\n                  size: z.string(),\n                  isDisabled: z.boolean(),\n                  text: z.object({ simpleText: z.string() }),\n                  icon: z.object({ iconType: z.string() }),\n                  trackingParams: z.string(),\n                  iconPosition: z.string(),\n                }),\n              }),\n              disableP13nButton: z.object({\n                buttonRenderer: z.object({\n                  style: z.string(),\n                  size: z.string(),\n                  isDisabled: z.boolean(),\n                  text: z.object({ simpleText: z.string() }),\n                  trackingParams: z.string(),\n                  accessibilityData: z.object({\n                    accessibilityData: z.object({ label: z.string() }),\n                  }),\n                  command: z.object({\n                    clickTrackingParams: z.string(),\n                    disablePersonalizationAction: z.object({\n                      socsCookie: z.string(),\n                      savePreferenceUrl: z.string(),\n                    }),\n                  }),\n                }),\n              }),\n              loadingMessage: z.object({\n                runs: z.array(z.object({ text: z.string() })),\n              }),\n              errorMessage: z.object({\n                runs: z.array(z.object({ text: z.string() })),\n              }),\n              eomV1Text: z.object({\n                essentialCookieMsg: z.object({\n                  begin: z.object({\n                    runs: z.array(\n                      // z.union([\n                      z.object({ text: z.string() }),\n                      //   z.object({\n                      //     text: z.string(),\n                      //     navigationEndpoint: z.object({\n                      //       clickTrackingParams: z.string(),\n                      //       commandMetadata: z.object({\n                      //         webCommandMetadata: z.object({\n                      //           url: z.string(),\n                      //           webPageType: z.string(),\n                      //           rootVe: z.number()\n                      //         })\n                      //       }),\n                      //       urlEndpoint: z.object({ url: z.string() })\n                      //     })\n                      //   })\n                      // ])\n                    ),\n                  }),\n                  items: z.array(\n                    z.object({ runs: z.array(z.object({ text: z.string() })) }),\n                  ),\n                }),\n                nonEssentialCookieMsg: z.object({\n                  begin: z.object({\n                    runs: z.array(z.object({ text: z.string() })),\n                  }),\n                  items: z.array(\n                    z.object({ runs: z.array(z.object({ text: z.string() })) }),\n                  ),\n                }),\n                ifReject: z.object({\n                  runs: z.array(z.object({ text: z.string() })),\n                }),\n                personalization: z.object({\n                  runs: z.array(z.object({ text: z.string() })),\n                }),\n                moreOptions: z.object({\n                  runs: z.array(z.object({ text: z.string() })),\n                }),\n              }),\n            }),\n          })\n          .optional(),\n        countryCode: z.string(),\n        topbarButtons: z.array(\n          // z.union([\n          z.object({\n            // topbarMenuButtonRenderer: z.object({\n            //   icon: z.object({ iconType: z.string() }),\n            //   menuRequest: z.object({\n            //     clickTrackingParams: z.string(),\n            //     commandMetadata: z.object({\n            //       webCommandMetadata: z.object({\n            //         sendPost: z.boolean(),\n            //         apiUrl: z.string()\n            //       })\n            //     }),\n            //     signalServiceEndpoint: z.object({\n            //       signal: z.string(),\n            //       actions: z.array(\n            //         z.object({\n            //           clickTrackingParams: z.string(),\n            //           openPopupAction: z.object({\n            //             popup: z.object({\n            //               multiPageMenuRenderer: z.object({\n            //                 trackingParams: z.string(),\n            //                 style: z.string(),\n            //                 showLoadingSpinner: z.boolean()\n            //               })\n            //             }),\n            //             popupType: z.string(),\n            //             beReused: z.boolean()\n            //           })\n            //         })\n            //       )\n            //     })\n            //   }),\n            //   trackingParams: z.string(),\n            //   accessibility: z.object({\n            //     accessibilityData: z.object({ label: z.string() })\n            //   }),\n            //   tooltip: z.string(),\n            //   style: z.string()\n            // })\n          }),\n          //   z.object({\n          //     buttonRenderer: z.object({\n          //       style: z.string(),\n          //       size: z.string(),\n          //       text: z.object({\n          //         runs: z.array(z.object({ text: z.string() }))\n          //       }),\n          //       icon: z.object({ iconType: z.string() }),\n          //       navigationEndpoint: z.object({\n          //         clickTrackingParams: z.string(),\n          //         commandMetadata: z.object({\n          //           webCommandMetadata: z.object({\n          //             url: z.string(),\n          //             webPageType: z.string(),\n          //             rootVe: z.number()\n          //           })\n          //         }),\n          //         signInEndpoint: z.object({ idamTag: z.string() })\n          //       }),\n          //       trackingParams: z.string(),\n          //       targetId: z.string()\n          //     })\n          //   })\n          // ])\n        ),\n        hotkeyDialog: z.object({\n          hotkeyDialogRenderer: z.object({\n            title: z.object({ runs: z.array(z.object({ text: z.string() })) }),\n            sections: z.array(\n              // z.union([\n              //   z.object({\n              //     hotkeyDialogSectionRenderer: z.object({\n              //       title: z.object({\n              //         runs: z.array(z.object({ text: z.string() }))\n              //       }),\n              //       options: z.array(\n              //         z.union([\n              //           z.object({\n              //             hotkeyDialogSectionOptionRenderer: z.object({\n              //               label: z.object({\n              //                 runs: z.array(z.object({ text: z.string() }))\n              //               }),\n              //               hotkey: z.string()\n              //             })\n              //           }),\n              //           z.object({\n              //             hotkeyDialogSectionOptionRenderer: z.object({\n              //               label: z.object({\n              //                 runs: z.array(z.object({ text: z.string() }))\n              //               }),\n              //               hotkey: z.string(),\n              //               hotkeyAccessibilityLabel: z.object({\n              //                 accessibilityData: z.object({\n              //                   label: z.string()\n              //                 })\n              //               })\n              //             })\n              //           })\n              //         ])\n              //       )\n              //     })\n              //   }),\n              z.object({\n                hotkeyDialogSectionRenderer: z.object({\n                  title: z.object({\n                    runs: z.array(z.object({ text: z.string() })),\n                  }),\n                  options: z.array(\n                    z.object({\n                      hotkeyDialogSectionOptionRenderer: z.object({\n                        label: z.object({\n                          runs: z.array(z.object({ text: z.string() })),\n                        }),\n                        hotkey: z.string(),\n                      }),\n                    }),\n                  ),\n                }),\n              }),\n              // ])\n            ),\n            dismissButton: z.object({\n              buttonRenderer: z.object({\n                style: z.string(),\n                size: z.string(),\n                isDisabled: z.boolean(),\n                text: z.object({\n                  runs: z.array(z.object({ text: z.string() })),\n                }),\n                trackingParams: z.string(),\n              }),\n            }),\n            trackingParams: z.string(),\n          }),\n        }),\n        backButton: z.object({\n          buttonRenderer: z.object({\n            trackingParams: z.string(),\n            command: z.object({\n              clickTrackingParams: z.string(),\n              commandMetadata: z.object({\n                webCommandMetadata: z.object({ sendPost: z.boolean() }),\n              }),\n              signalServiceEndpoint: z.object({\n                signal: z.string(),\n                actions: z.array(\n                  z.object({\n                    clickTrackingParams: z.string(),\n                    signalAction: z.object({ signal: z.string() }),\n                  }),\n                ),\n              }),\n            }),\n          }),\n        }),\n        forwardButton: z.object({\n          buttonRenderer: z.object({\n            trackingParams: z.string(),\n            command: z.object({\n              clickTrackingParams: z.string(),\n              commandMetadata: z.object({\n                webCommandMetadata: z.object({ sendPost: z.boolean() }),\n              }),\n              signalServiceEndpoint: z.object({\n                signal: z.string(),\n                actions: z.array(\n                  z.object({\n                    clickTrackingParams: z.string(),\n                    signalAction: z.object({ signal: z.string() }),\n                  }),\n                ),\n              }),\n            }),\n          }),\n        }),\n        a11ySkipNavigationButton: z.object({\n          buttonRenderer: z.object({\n            style: z.string(),\n            size: z.string(),\n            isDisabled: z.boolean(),\n            text: z.object({ runs: z.array(z.object({ text: z.string() })) }),\n            trackingParams: z.string(),\n            command: z.object({\n              clickTrackingParams: z.string(),\n              commandMetadata: z.object({\n                webCommandMetadata: z.object({ sendPost: z.boolean() }),\n              }),\n              signalServiceEndpoint: z.object({\n                signal: z.string(),\n                actions: z.array(\n                  z.object({\n                    clickTrackingParams: z.string(),\n                    signalAction: z.object({ signal: z.string() }),\n                  }),\n                ),\n              }),\n            }),\n          }),\n        }),\n      }),\n    }),\n    // cards: z.object({\n    //   cardCollectionRenderer: z.object({\n    //     cards: z.array(\n    //       z.object({\n    //         cardRenderer: z.object({\n    //           teaser: z.object({\n    //             simpleCardTeaserRenderer: z.object({\n    //               message: z.object({ simpleText: z.string() }),\n    //               trackingParams: z.string(),\n    //               onTapCommand: z.object({\n    //                 clickTrackingParams: z.string(),\n    //                 showEngagementPanelEndpoint: z.object({\n    //                   panelIdentifier: z.string(),\n    //                   forcePortrait: z.boolean(),\n    //                   engagementPanelExtras: z.object({\n    //                     sectionListEngagementPanelExtras: z.object({\n    //                       scrollToItemSectionIdentifier: z.string(),\n    //                       scrollToItemSectionOffsetDistance: z.number()\n    //                     })\n    //                   })\n    //                 })\n    //               }),\n    //               channelAvatar: z.object({\n    //                 thumbnails: z.array(\n    //                   z.object({\n    //                     url: z.string(),\n    //                     width: z.number(),\n    //                     height: z.number()\n    //                   })\n    //                 )\n    //               })\n    //             })\n    //           }),\n    //           cueRanges: z.array(\n    //             z.object({\n    //               startCardActiveMs: z.string(),\n    //               endCardActiveMs: z.string(),\n    //               teaserDurationMs: z.string()\n    //             })\n    //           ),\n    //           trackingParams: z.string()\n    //         })\n    //       })\n    //     ),\n    //     headerText: z.object({ simpleText: z.string() }),\n    //     trackingParams: z.string(),\n    //     onIconTapCommand: z.object({\n    //       clickTrackingParams: z.string(),\n    //       showEngagementPanelEndpoint: z.object({\n    //         panelIdentifier: z.string(),\n    //         forcePortrait: z.boolean(),\n    //         engagementPanelExtras: z.object({\n    //           sectionListEngagementPanelExtras: z.object({\n    //             scrollToItemSectionIdentifier: z.string()\n    //           })\n    //         })\n    //       })\n    //     })\n    //   })\n    // }),\n    pageVisualEffects: z.array(\n      z.object({\n        cinematicContainerRenderer: z.object({\n          gradientColorConfig: z\n            .array(\n              // z.union([\n              z.object({\n                darkThemeColor: z.number(),\n                startLocation: z.number().optional(),\n              }),\n              //   z.object({ darkThemeColor: z.number() })\n              // ])\n            )\n            .optional(),\n          presentationStyle: z.string(),\n          config: z.object({\n            lightThemeBackgroundColor: z.number(),\n            darkThemeBackgroundColor: z.number(),\n            animationConfig: z.object({\n              minImageUpdateIntervalMs: z.number(),\n              crossfadeDurationMs: z.number(),\n              crossfadeStartOffset: z.number(),\n              maxFrameRate: z.number(),\n            }),\n            colorSourceSizeMultiplier: z.number(),\n            applyClientImageBlur: z.boolean(),\n            bottomColorSourceHeightMultiplier: z.number(),\n            maxBottomColorSourceHeight: z.number(),\n            colorSourceWidthMultiplier: z.number(),\n            colorSourceHeightMultiplier: z.number(),\n            blurStrength: z.number(),\n          }),\n        }),\n      }),\n    ),\n    frameworkUpdates: z.object({\n      // entityBatchUpdate: z.object({\n      //   mutations: z.array(\n      //     // z.union([\n      //     //   z.object({\n      //     //     entityKey: z.string(),\n      //     //     type: z.string(),\n      //     //     payload: z.object({\n      //     //       macroMarkersListEntity: z.object({\n      //     //         key: z.string(),\n      //     //         externalVideoId: z.string(),\n      //     //         markersList: z.object({\n      //     //           markerType: z.string(),\n      //     //           markers: z.array(\n      //     //             z.object({\n      //     //               startMillis: z.string(),\n      //     //               durationMillis: z.string(),\n      //     //               intensityScoreNormalized: z.number()\n      //     //             })\n      //     //           ),\n      //     //           markersMetadata: z.object({\n      //     //             heatmapMetadata: z.object({\n      //     //               maxHeightDp: z.number(),\n      //     //               minHeightDp: z.number(),\n      //     //               showHideAnimationDurationMillis: z.number()\n      //     //             })\n      //     //           }),\n      //     //           markersDecoration: z.object({\n      //     //             timedMarkerDecorations: z.array(\n      //     //               z.object({\n      //     //                 visibleTimeRangeStartMillis: z.number(),\n      //     //                 visibleTimeRangeEndMillis: z.number(),\n      //     //                 decorationTimeMillis: z.number(),\n      //     //                 label: z.object({\n      //     //                   runs: z.array(z.object({ text: z.string() }))\n      //     //                 }),\n      //     //                 icon: z.string()\n      //     //               })\n      //     //             )\n      //     //           })\n      //     //         })\n      //     //       })\n      //     //     })\n      //     //   }),\n      //       z.object({\n      //         entityKey: z.string(),\n      //         type: z.string(),\n      //         options: z.object({ persistenceOption: z.string() })\n      //       }),\n      //     //   z.object({\n      //     //     entityKey: z.string(),\n      //     //     type: z.string(),\n      //     //     payload: z.object({\n      //     //       subscriptionStateEntity: z.object({\n      //     //         key: z.string(),\n      //     //         subscribed: z.boolean()\n      //     //       })\n      //     //     })\n      //     //   })\n      //     // ])\n      //   ),\n      //   timestamp: z.object({ seconds: z.string(), nanos: z.number() })\n      // })\n    }),\n  }),\n  html5player: z.string(),\n  formats: z.array(\n    // z.union([\n    z.object({\n      // itag: z.number(),\n      mimeType: z.string(),\n      // bitrate: z.number(),\n      // width: z.number(),\n      // height: z.number(),\n      // lastModified: z.string(),\n      // quality: z.string(),\n      // fps: z.number(),\n      // qualityLabel: z.string(),\n      // projectionType: z.string(),\n      // audioQuality: z.string(),\n      // approxDurationMs: z.string(),\n      // audioSampleRate: z.string(),\n      // audioChannels: z.number(),\n      // signatureCipher: z.string()\n    }),\n    //   z.object({\n    //     itag: z.number(),\n    //     mimeType: z.string(),\n    //     bitrate: z.number(),\n    //     width: z.number(),\n    //     height: z.number(),\n    //     initRange: z.object({ start: z.string(), end: z.string() }),\n    //     indexRange: z.object({ start: z.string(), end: z.string() }),\n    //     lastModified: z.string(),\n    //     contentLength: z.string(),\n    //     quality: z.string(),\n    //     fps: z.number(),\n    //     qualityLabel: z.string(),\n    //     projectionType: z.string(),\n    //     averageBitrate: z.number(),\n    //     colorInfo: z.object({\n    //       primaries: z.string(),\n    //       transferCharacteristics: z.string(),\n    //       matrixCoefficients: z.string()\n    //     }),\n    //     approxDurationMs: z.string(),\n    //     signatureCipher: z.string()\n    //   }),\n    //   z.object({\n    //     itag: z.number(),\n    //     mimeType: z.string(),\n    //     bitrate: z.number(),\n    //     width: z.number(),\n    //     height: z.number(),\n    //     initRange: z.object({ start: z.string(), end: z.string() }),\n    //     indexRange: z.object({ start: z.string(), end: z.string() }),\n    //     lastModified: z.string(),\n    //     contentLength: z.string(),\n    //     quality: z.string(),\n    //     fps: z.number(),\n    //     qualityLabel: z.string(),\n    //     projectionType: z.string(),\n    //     averageBitrate: z.number(),\n    //     approxDurationMs: z.string(),\n    //     signatureCipher: z.string()\n    //   }),\n    //   z.object({\n    //     itag: z.number(),\n    //     mimeType: z.string(),\n    //     bitrate: z.number(),\n    //     width: z.number(),\n    //     height: z.number(),\n    //     initRange: z.object({ start: z.string(), end: z.string() }),\n    //     indexRange: z.object({ start: z.string(), end: z.string() }),\n    //     lastModified: z.string(),\n    //     contentLength: z.string(),\n    //     quality: z.string(),\n    //     fps: z.number(),\n    //     qualityLabel: z.string(),\n    //     projectionType: z.string(),\n    //     averageBitrate: z.number(),\n    //     highReplication: z.boolean(),\n    //     approxDurationMs: z.string(),\n    //     signatureCipher: z.string()\n    //   }),\n    //   z.object({\n    //     itag: z.number(),\n    //     mimeType: z.string(),\n    //     bitrate: z.number(),\n    //     initRange: z.object({ start: z.string(), end: z.string() }),\n    //     indexRange: z.object({ start: z.string(), end: z.string() }),\n    //     lastModified: z.string(),\n    //     contentLength: z.string(),\n    //     quality: z.string(),\n    //     projectionType: z.string(),\n    //     averageBitrate: z.number(),\n    //     highReplication: z.boolean(),\n    //     audioQuality: z.string(),\n    //     approxDurationMs: z.string(),\n    //     audioSampleRate: z.string(),\n    //     audioChannels: z.number(),\n    //     loudnessDb: z.number(),\n    //     signatureCipher: z.string()\n    //   }),\n    //   z.object({\n    //     itag: z.number(),\n    //     mimeType: z.string(),\n    //     bitrate: z.number(),\n    //     initRange: z.object({ start: z.string(), end: z.string() }),\n    //     indexRange: z.object({ start: z.string(), end: z.string() }),\n    //     lastModified: z.string(),\n    //     contentLength: z.string(),\n    //     quality: z.string(),\n    //     projectionType: z.string(),\n    //     averageBitrate: z.number(),\n    //     audioQuality: z.string(),\n    //     approxDurationMs: z.string(),\n    //     audioSampleRate: z.string(),\n    //     audioChannels: z.number(),\n    //     loudnessDb: z.number(),\n    //     signatureCipher: z.string()\n    //   })\n    // ])\n  ),\n  related_videos: z.array(\n    z.object({\n      id: z.string(),\n      title: z.string(),\n      published: z.string(),\n      author: z.object({\n        id: z.string(),\n        name: z.string(),\n        user: z.string(),\n        channel_url: z.string(),\n        user_url: z.string(),\n        thumbnails: z.array(\n          z.object({ url: z.string(), width: z.number(), height: z.number() }),\n        ),\n        verified: z.boolean(),\n      }),\n      short_view_count_text: z.string(),\n      view_count: z.string(),\n      length_seconds: z.number(),\n      thumbnails: z.array(\n        z.object({ url: z.string(), width: z.number(), height: z.number() }),\n      ),\n      richThumbnails: z.array(z.unknown()),\n      isLive: z.boolean(),\n    }),\n  ),\n  videoDetails: z.object({\n    embed: z.object({\n      iframeUrl: z.string(),\n      width: z.number(),\n      height: z.number(),\n    }),\n    title: z.string(),\n    description: z.string().nullable(),\n    lengthSeconds: z.string(),\n    ownerProfileUrl: z.string(),\n    externalChannelId: z.string(),\n    isFamilySafe: z.boolean(),\n    availableCountries: z.array(z.string()),\n    isUnlisted: z.boolean(),\n    hasYpcMetadata: z.boolean(),\n    viewCount: z.string(),\n    category: z.string(),\n    publishDate: z.string(),\n    ownerChannelName: z.string(),\n    // liveBroadcastDetails: z.object({\n    //   isLiveNow: z.boolean(),\n    //   startTimestamp: z.string(),\n    //   endTimestamp: z.string()\n    // }),\n    uploadDate: z.string(),\n    videoId: z.string(),\n    keywords: z.array(z.string()).optional(),\n    channelId: z.string(),\n    isOwnerViewing: z.boolean(),\n    isCrawlable: z.boolean(),\n    allowRatings: z.boolean(),\n    author: z.object({\n      id: z.string(),\n      name: z.string(),\n      user: z.string(),\n      channel_url: z.string(),\n      external_channel_url: z.string(),\n      user_url: z.string(),\n      thumbnails: z.array(\n        z.object({ url: z.string(), width: z.number(), height: z.number() }),\n      ),\n      verified: z.boolean(),\n      subscriber_count: z.number(),\n    }),\n    // isLowLatencyLiveStream: z.boolean(),\n    isPrivate: z.boolean(),\n    isUnpluggedCorpus: z.boolean(),\n    // latencyClass: z.string(),\n    isLiveContent: z.boolean(),\n    media: z.object({}),\n    likes: z.null(),\n    dislikes: z.null(),\n    age_restricted: z.boolean(),\n    video_url: z.string(),\n    storyboards: z.array(\n      z.object({\n        templateUrl: z.string(),\n        thumbnailWidth: z.number(),\n        thumbnailHeight: z.number(),\n        thumbnailCount: z.number(),\n        interval: z.number(),\n        columns: z.number(),\n        rows: z.number(),\n        storyboardCount: z.number(),\n      }),\n    ),\n    chapters: z.array(z.unknown()),\n    thumbnails: z.array(\n      z.object({ url: z.string(), width: z.number(), height: z.number() }),\n    ),\n  }),\n});\n\nexport const InfoSchema = z.object({\n  page: z.string(),\n  player_response: z.unknown(),\n  response: z.object({\n    responseContext: z.unknown(),\n    contents: z.unknown(),\n    currentVideoEndpoint: z.unknown(),\n    trackingParams: z.string(),\n    playerOverlays: z.unknown(),\n    onResponseReceivedEndpoints: z.unknown().array(),\n    engagementPanels: z.unknown().array(),\n    topbar: z.unknown(),\n    cards: z.unknown(),\n    pageVisualEffects: z.array(\n      z.object({\n        cinematicContainerRenderer: z.object({\n          // gradientColorConfig: z.array(\n          //   z.union([\n          //     z.object({\n          //       darkThemeColor: z.number(),\n          //       startLocation: z.number(),\n          //     }),\n          //     z.object({ darkThemeColor: z.number() }),\n          //   ])\n          // ),\n          presentationStyle: z.string(),\n          config: z.object({\n            lightThemeBackgroundColor: z.number(),\n            darkThemeBackgroundColor: z.number(),\n            animationConfig: z.object({\n              minImageUpdateIntervalMs: z.number(),\n              crossfadeDurationMs: z.number(),\n              crossfadeStartOffset: z.number(),\n              maxFrameRate: z.number(),\n            }),\n            colorSourceSizeMultiplier: z.number(),\n            applyClientImageBlur: z.boolean(),\n            bottomColorSourceHeightMultiplier: z.number(),\n            maxBottomColorSourceHeight: z.number(),\n            colorSourceWidthMultiplier: z.number(),\n            colorSourceHeightMultiplier: z.number(),\n            blurStrength: z.number(),\n          }),\n        }),\n      }),\n    ),\n    frameworkUpdates: z.object({\n      entityBatchUpdate: z.object({\n        mutations: z.array(\n          // z.union([\n          z.object({\n            entityKey: z.string(),\n            type: z.string(),\n            options: z.object({ persistenceOption: z.string() }),\n          }),\n          //   z.object({\n          //     entityKey: z.string(),\n          //     type: z.string(),\n          //     payload: z.object({\n          //       macroMarkersListEntity: z.object({\n          //         key: z.string(),\n          //         externalVideoId: z.string(),\n          //         markersList: z.object({\n          //           markerType: z.string(),\n          //           markers: z.array(\n          //             z.object({\n          //               startMillis: z.string(),\n          //               durationMillis: z.string(),\n          //               intensityScoreNormalized: z.number(),\n          //             })\n          //           ),\n          //           markersMetadata: z.object({\n          //             heatmapMetadata: z.object({\n          //               maxHeightDp: z.number(),\n          //               minHeightDp: z.number(),\n          //               showHideAnimationDurationMillis: z.number(),\n          //             }),\n          //           }),\n          //           markersDecoration: z.object({\n          //             timedMarkerDecorations: z.array(\n          //               z.object({\n          //                 visibleTimeRangeStartMillis: z.number(),\n          //                 visibleTimeRangeEndMillis: z.number(),\n          //                 decorationTimeMillis: z.number(),\n          //                 label: z.object({\n          //                   runs: z.array(z.object({ text: z.string() })),\n          //                 }),\n          //                 icon: z.string(),\n          //               })\n          //             ),\n          //           }),\n          //         }),\n          //       }),\n          //     }),\n          //   }),\n          //   z.object({\n          //     entityKey: z.string(),\n          //     type: z.string(),\n          //     payload: z.object({\n          //       subscriptionStateEntity: z.object({\n          //         key: z.string(),\n          //         subscribed: z.boolean(),\n          //       }),\n          //     }),\n          //   }),\n          // ])\n        ),\n        timestamp: z.object({ seconds: z.string(), nanos: z.number() }),\n      }),\n    }),\n  }),\n  html5player: z.string(),\n  formats: z.unknown().array(),\n  related_videos: z.unknown().array(),\n  videoDetails: z.object({\n    embed: z.object({\n      iframeUrl: z.string(),\n      width: z.number(),\n      height: z.number(),\n    }),\n    title: z.string(),\n    description: z.string(),\n    lengthSeconds: z.string(),\n    ownerProfileUrl: z.string(),\n    externalChannelId: z.string(),\n    isFamilySafe: z.boolean(),\n    availableCountries: z.array(z.string()),\n    isUnlisted: z.boolean(),\n    hasYpcMetadata: z.boolean(),\n    viewCount: z.string(),\n    category: z.string(),\n    publishDate: z.string(),\n    ownerChannelName: z.string(),\n    liveBroadcastDetails: z\n      .object({\n        isLiveNow: z.boolean(),\n        startTimestamp: z.string(),\n        endTimestamp: z.string(),\n      })\n      .optional(),\n    uploadDate: z.string(),\n    videoId: z.string(),\n    keywords: z.array(z.string()),\n    channelId: z.string(),\n    isOwnerViewing: z.boolean(),\n    isCrawlable: z.boolean(),\n    allowRatings: z.boolean(),\n    author: z.object({\n      id: z.string(),\n      name: z.string(),\n      user: z.string(),\n      channel_url: z.string(),\n      external_channel_url: z.string(),\n      user_url: z.string(),\n      thumbnails: z.array(\n        z.object({ url: z.string(), width: z.number(), height: z.number() }),\n      ),\n      verified: z.boolean(),\n      subscriber_count: z.number(),\n    }),\n    isLowLatencyLiveStream: z.boolean().optional(),\n    isPrivate: z.boolean(),\n    isUnpluggedCorpus: z.boolean(),\n    latencyClass: z.string().optional(),\n    isLiveContent: z.boolean(),\n    media: z.object({}),\n    likes: z.null(),\n    dislikes: z.null(),\n    age_restricted: z.boolean(),\n    video_url: z.string(),\n    storyboards: z.array(\n      z.object({\n        templateUrl: z.string(),\n        thumbnailWidth: z.number(),\n        thumbnailHeight: z.number(),\n        thumbnailCount: z.number(),\n        interval: z.number(),\n        columns: z.number(),\n        rows: z.number(),\n        storyboardCount: z.number(),\n      }),\n    ),\n    chapters: z.array(z.unknown()),\n    thumbnails: z.array(\n      z.object({ url: z.string(), width: z.number(), height: z.number() }),\n    ),\n  }),\n  full: z.boolean(),\n});\n\nexport type BasicInfoType = z.infer<typeof BasicInfoSchema>;\nexport type InfoType = z.infer<typeof InfoSchema>;\n"],"names":["StyledSpinner","styled","div","Spinner","React","className","viewBox","cx","cy","r","fill","strokeWidth","BasicInfoSchema","z","object","page","string","player_response","responseContext","serviceTrackingParams","array","service","params","key","value","maxAgeSeconds","number","mainAppWebResponseContext","loggedOut","boolean","trackingParam","webResponseContextExtensionData","hasDecorated","playabilityStatus","status","playableInEmbed","miniplayer","miniplayerRenderer","playbackMode","contextParams","streamingData","expiresInSeconds","formats","itag","mimeType","bitrate","width","height","lastModified","quality","fps","qualityLabel","projectionType","audioQuality","approxDurationMs","audioSampleRate","audioChannels","signatureCipher","optional","adaptiveFormats","playbackTracking","videostatsPlaybackUrl","baseUrl","videostatsDelayplayUrl","videostatsWatchtimeUrl","ptrackingUrl","qoeUrl","atrUrl","elapsedMediaTimeSeconds","videostatsScheduledFlushWalltimeSeconds","videostatsDefaultFlushIntervalSeconds","captions","playerCaptionsTracklistRenderer","captionTracks","name","simpleText","vssId","languageCode","isTranslatable","trackName","audioTracks","translationLanguages","languageName","defaultAudioTrackIndex","videoDetails","videoId","title","lengthSeconds","keywords","channelId","isOwnerViewing","shortDescription","isCrawlable","thumbnail","thumbnails","url","allowRatings","viewCount","author","isPrivate","playerConfig","audioConfig","loudnessDb","perceptualLoudnessDb","enablePerFormatLoudness","streamSelectionConfig","maxBitrate","mediaCommonConfig","dynamicReadaheadConfig","maxReadAheadMediaTimeMs","minReadAheadMediaTimeMs","readAheadGrowthRateMs","webPlayerConfig","useCobaltTvosDash","webPlayerActionsPorting","getSharePanelCommand","clickTrackingParams","commandMetadata","webCommandMetadata","sendPost","apiUrl","webPlayerShareEntityServiceEndpoint","serializedShareEntity","subscribeCommand","subscribeEndpoint","channelIds","unsubscribeCommand","unsubscribeEndpoint","addToWatchLaterCommand","playlistEditEndpoint","playlistId","actions","addedVideoId","action","removeFromWatchLaterCommand","removedVideoId","storyboards","playerStoryboardSpecRenderer","spec","recommendedLevel","highResolutionRecommendedLevel","microformat","playerMicroformatRenderer","embed","iframeUrl","description","ownerProfileUrl","externalChannelId","isFamilySafe","availableCountries","isUnlisted","hasYpcMetadata","category","publishDate","ownerChannelName","liveBroadcastDetails","isLiveNow","startTimestamp","endTimestamp","uploadDate","trackingParams","attestation","playerAttestationRenderer","challenge","botguardData","program","interpreterSafeUrl","privateDoNotAccessOrElseTrustedResourceUrlWrappedValue","serverEnvironment","adBreakHeartbeatParams","frameworkUpdates","entityBatchUpdate","mutations","entityKey","type","payload","offlineabilityEntity","addToOfflineButtonState","timestamp","seconds","nanos","response","ytConfigData","visitorData","rootVisualElementType","webPrefetchData","navigationEndpoints","webPageType","rootVe","watchEndpoint","playerParams","watchEndpointSupportedPrefetchConfig","prefetchHintConfig","prefetchPriority","countdownUiRelativeSecondsPrefetchCondition","contents","twoColumnWatchNextResults","results","secondaryResults","autoplay","sets","mode","autoplayVideo","countDownSecs","currentVideoEndpoint","watchEndpointSupportedOnesieConfig","html5PlaybackOnesieConfig","commonConfig","playerOverlays","playerOverlayRenderer","onResponseReceivedEndpoints","topbar","desktopTopbarRenderer","logo","topbarLogoRenderer","iconImage","iconType","tooltipText","runs","text","endpoint","browseEndpoint","browseId","overrideEntityKey","searchbox","fusionSearchboxRenderer","icon","placeholderText","config","webSearchboxConfig","requestLanguage","requestDomain","hasOnscreenKeyboard","focusSearchbox","searchEndpoint","query","clearButton","buttonRenderer","style","size","isDisabled","accessibilityData","label","interstitial","consentBumpV2Renderer","interstitialLogoAside","languagePickerButton","accessibility","interstitialTitle","customizeButton","command","urlEndpoint","agreeButton","saveConsentAction","socsCookie","savePreferenceUrl","privacyLink","navigationEndpoint","termsLink","signInButton","tooltip","signInEndpoint","hack","languageList","dropdownRenderer","entries","dropdownItemRenderer","isSelected","stringValue","onSelectCommand","signalServiceEndpoint","signal","selectLanguageCommand","hl","readMoreButton","iconPosition","disableP13nButton","disablePersonalizationAction","loadingMessage","errorMessage","eomV1Text","essentialCookieMsg","begin","items","nonEssentialCookieMsg","ifReject","personalization","moreOptions","countryCode","topbarButtons","hotkeyDialog","hotkeyDialogRenderer","sections","hotkeyDialogSectionRenderer","options","hotkeyDialogSectionOptionRenderer","hotkey","dismissButton","backButton","signalAction","forwardButton","a11ySkipNavigationButton","pageVisualEffects","cinematicContainerRenderer","gradientColorConfig","darkThemeColor","startLocation","presentationStyle","lightThemeBackgroundColor","darkThemeBackgroundColor","animationConfig","minImageUpdateIntervalMs","crossfadeDurationMs","crossfadeStartOffset","maxFrameRate","colorSourceSizeMultiplier","applyClientImageBlur","bottomColorSourceHeightMultiplier","maxBottomColorSourceHeight","colorSourceWidthMultiplier","colorSourceHeightMultiplier","blurStrength","html5player","related_videos","id","published","user","channel_url","user_url","verified","short_view_count_text","view_count","length_seconds","richThumbnails","unknown","isLive","nullable","external_channel_url","subscriber_count","isUnpluggedCorpus","isLiveContent","media","likes","null","dislikes","age_restricted","video_url","templateUrl","thumbnailWidth","thumbnailHeight","thumbnailCount","interval","columns","rows","storyboardCount","chapters","engagementPanels","cards","persistenceOption","isLowLatencyLiveStream","latencyClass","full"],"sourceRoot":""}
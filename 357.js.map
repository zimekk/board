{"version":3,"file":"357.js","mappings":"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","sources":["webpack://@dev/web/../../node_modules/.pnpm/cross-fetch@3.1.8/node_modules/cross-fetch/dist/browser-ponyfill.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/isArrayLike.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/isPromise.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/isInteropObservable.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/isAsyncIterable.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/throwUnobservableError.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/symbol/iterator.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/isIterable.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/isReadableStreamLike.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/observeOn.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/subscribeOn.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleAsyncIterable.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/observable/from.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/scheduled/scheduled.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleObservable.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleArray.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/scheduled/schedulePromise.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleIterable.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleReadableStreamLike.js","webpack://@dev/web/../../node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/esm/defaultJsonSerializer.js","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/jsutils/invariant.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/location.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/printLocation.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/error/GraphQLError.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/jsutils/isObjectLike.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/error/syntaxError.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/ast.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/directiveLocation.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/kinds.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/tokenKind.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/characterClasses.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/blockString.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/lexer.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/jsutils/devAssert.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/jsutils/inspect.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/jsutils/instanceOf.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/source.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/parser.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/printString.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/visitor.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/printer.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/esm/resolveRequestDocument.js","webpack://@dev/web/../../node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/esm/types.js","webpack://@dev/web/../../node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/esm/index.js","webpack://@dev/web/../../node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/esm/helpers.js","webpack://@dev/web/../../node_modules/.pnpm/graphql-request@6.1.0_graphql@16.8.1/node_modules/graphql-request/build/esm/parseArgs.js","webpack://@dev/web/../../node_modules/.pnpm/graphql-ws@5.16.0_graphql@16.8.1/node_modules/graphql-ws/lib/utils.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql-ws@5.16.0_graphql@16.8.1/node_modules/graphql-ws/lib/common.mjs","webpack://@dev/web/../../node_modules/.pnpm/graphql-ws@5.16.0_graphql@16.8.1/node_modules/graphql-ws/lib/client.mjs"],"sourcesContent":["var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","export var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n//# sourceMappingURL=isArrayLike.js.map","import { isFunction } from \"./isFunction\";\nexport function isPromise(value) {\n    return isFunction(value === null || value === void 0 ? void 0 : value.then);\n}\n//# sourceMappingURL=isPromise.js.map","import { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\nexport function isInteropObservable(input) {\n    return isFunction(input[Symbol_observable]);\n}\n//# sourceMappingURL=isInteropObservable.js.map","import { isFunction } from './isFunction';\nexport function isAsyncIterable(obj) {\n    return Symbol.asyncIterator && isFunction(obj === null || obj === void 0 ? void 0 : obj[Symbol.asyncIterator]);\n}\n//# sourceMappingURL=isAsyncIterable.js.map","export function createInvalidObservableTypeError(input) {\n    return new TypeError(\"You provided \" + (input !== null && typeof input === 'object' ? 'an invalid object' : \"'\" + input + \"'\") + \" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.\");\n}\n//# sourceMappingURL=throwUnobservableError.js.map","export function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport var iterator = getSymbolIterator();\n//# sourceMappingURL=iterator.js.map","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\nexport function isIterable(input) {\n    return isFunction(input === null || input === void 0 ? void 0 : input[Symbol_iterator]);\n}\n//# sourceMappingURL=isIterable.js.map","import { __asyncGenerator, __await, __generator } from \"tslib\";\nimport { isFunction } from './isFunction';\nexport function readableStreamLikeToAsyncGenerator(readableStream) {\n    return __asyncGenerator(this, arguments, function readableStreamLikeToAsyncGenerator_1() {\n        var reader, _a, value, done;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    reader = readableStream.getReader();\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, , 9, 10]);\n                    _b.label = 2;\n                case 2:\n                    if (!true) return [3, 8];\n                    return [4, __await(reader.read())];\n                case 3:\n                    _a = _b.sent(), value = _a.value, done = _a.done;\n                    if (!done) return [3, 5];\n                    return [4, __await(void 0)];\n                case 4: return [2, _b.sent()];\n                case 5: return [4, __await(value)];\n                case 6: return [4, _b.sent()];\n                case 7:\n                    _b.sent();\n                    return [3, 2];\n                case 8: return [3, 10];\n                case 9:\n                    reader.releaseLock();\n                    return [7];\n                case 10: return [2];\n            }\n        });\n    });\n}\nexport function isReadableStreamLike(obj) {\n    return isFunction(obj === null || obj === void 0 ? void 0 : obj.getReader);\n}\n//# sourceMappingURL=isReadableStreamLike.js.map","import { __asyncValues, __awaiter, __generator, __values } from \"tslib\";\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function innerFrom(input) {\n    if (input instanceof Observable) {\n        return input;\n    }\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return fromInteropObservable(input);\n        }\n        if (isArrayLike(input)) {\n            return fromArrayLike(input);\n        }\n        if (isPromise(input)) {\n            return fromPromise(input);\n        }\n        if (isAsyncIterable(input)) {\n            return fromAsyncIterable(input);\n        }\n        if (isIterable(input)) {\n            return fromIterable(input);\n        }\n        if (isReadableStreamLike(input)) {\n            return fromReadableStreamLike(input);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\nexport function fromInteropObservable(obj) {\n    return new Observable(function (subscriber) {\n        var obs = obj[Symbol_observable]();\n        if (isFunction(obs.subscribe)) {\n            return obs.subscribe(subscriber);\n        }\n        throw new TypeError('Provided object does not correctly implement Symbol.observable');\n    });\n}\nexport function fromArrayLike(array) {\n    return new Observable(function (subscriber) {\n        for (var i = 0; i < array.length && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        subscriber.complete();\n    });\n}\nexport function fromPromise(promise) {\n    return new Observable(function (subscriber) {\n        promise\n            .then(function (value) {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, function (err) { return subscriber.error(err); })\n            .then(null, reportUnhandledError);\n    });\n}\nexport function fromIterable(iterable) {\n    return new Observable(function (subscriber) {\n        var e_1, _a;\n        try {\n            for (var iterable_1 = __values(iterable), iterable_1_1 = iterable_1.next(); !iterable_1_1.done; iterable_1_1 = iterable_1.next()) {\n                var value = iterable_1_1.value;\n                subscriber.next(value);\n                if (subscriber.closed) {\n                    return;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (iterable_1_1 && !iterable_1_1.done && (_a = iterable_1.return)) _a.call(iterable_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        subscriber.complete();\n    });\n}\nexport function fromAsyncIterable(asyncIterable) {\n    return new Observable(function (subscriber) {\n        process(asyncIterable, subscriber).catch(function (err) { return subscriber.error(err); });\n    });\n}\nexport function fromReadableStreamLike(readableStream) {\n    return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\nfunction process(asyncIterable, subscriber) {\n    var asyncIterable_1, asyncIterable_1_1;\n    var e_2, _a;\n    return __awaiter(this, void 0, void 0, function () {\n        var value, e_2_1;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _b.trys.push([0, 5, 6, 11]);\n                    asyncIterable_1 = __asyncValues(asyncIterable);\n                    _b.label = 1;\n                case 1: return [4, asyncIterable_1.next()];\n                case 2:\n                    if (!(asyncIterable_1_1 = _b.sent(), !asyncIterable_1_1.done)) return [3, 4];\n                    value = asyncIterable_1_1.value;\n                    subscriber.next(value);\n                    if (subscriber.closed) {\n                        return [2];\n                    }\n                    _b.label = 3;\n                case 3: return [3, 1];\n                case 4: return [3, 11];\n                case 5:\n                    e_2_1 = _b.sent();\n                    e_2 = { error: e_2_1 };\n                    return [3, 11];\n                case 6:\n                    _b.trys.push([6, , 9, 10]);\n                    if (!(asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return))) return [3, 8];\n                    return [4, _a.call(asyncIterable_1)];\n                case 7:\n                    _b.sent();\n                    _b.label = 8;\n                case 8: return [3, 10];\n                case 9:\n                    if (e_2) throw e_2.error;\n                    return [7];\n                case 10: return [7];\n                case 11:\n                    subscriber.complete();\n                    return [2];\n            }\n        });\n    });\n}\n//# sourceMappingURL=innerFrom.js.map","export function executeSchedule(parentSubscription, scheduler, work, delay, repeat) {\n    if (delay === void 0) { delay = 0; }\n    if (repeat === void 0) { repeat = false; }\n    var scheduleSubscription = scheduler.schedule(function () {\n        work();\n        if (repeat) {\n            parentSubscription.add(this.schedule(null, delay));\n        }\n        else {\n            this.unsubscribe();\n        }\n    }, delay);\n    parentSubscription.add(scheduleSubscription);\n    if (!repeat) {\n        return scheduleSubscription;\n    }\n}\n//# sourceMappingURL=executeSchedule.js.map","import { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operate(function (source, subscriber) {\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return executeSchedule(subscriber, scheduler, function () { return subscriber.next(value); }, delay); }, function () { return executeSchedule(subscriber, scheduler, function () { return subscriber.complete(); }, delay); }, function (err) { return executeSchedule(subscriber, scheduler, function () { return subscriber.error(err); }, delay); }));\n    });\n}\n//# sourceMappingURL=observeOn.js.map","import { operate } from '../util/lift';\nexport function subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operate(function (source, subscriber) {\n        subscriber.add(scheduler.schedule(function () { return source.subscribe(subscriber); }, delay));\n    });\n}\n//# sourceMappingURL=subscribeOn.js.map","import { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleAsyncIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable(function (subscriber) {\n        executeSchedule(subscriber, scheduler, function () {\n            var iterator = input[Symbol.asyncIterator]();\n            executeSchedule(subscriber, scheduler, function () {\n                iterator.next().then(function (result) {\n                    if (result.done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(result.value);\n                    }\n                });\n            }, 0, true);\n        });\n    });\n}\n//# sourceMappingURL=scheduleAsyncIterable.js.map","import { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\nexport function from(input, scheduler) {\n    return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n//# sourceMappingURL=from.js.map","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\nexport function scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return scheduleObservable(input, scheduler);\n        }\n        if (isArrayLike(input)) {\n            return scheduleArray(input, scheduler);\n        }\n        if (isPromise(input)) {\n            return schedulePromise(input, scheduler);\n        }\n        if (isAsyncIterable(input)) {\n            return scheduleAsyncIterable(input, scheduler);\n        }\n        if (isIterable(input)) {\n            return scheduleIterable(input, scheduler);\n        }\n        if (isReadableStreamLike(input)) {\n            return scheduleReadableStreamLike(input, scheduler);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\n//# sourceMappingURL=scheduled.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function scheduleObservable(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n//# sourceMappingURL=scheduleObservable.js.map","import { Observable } from '../Observable';\nexport function scheduleArray(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var i = 0;\n        return scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n            }\n            else {\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    this.schedule();\n                }\n            }\n        });\n    });\n}\n//# sourceMappingURL=scheduleArray.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function schedulePromise(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n//# sourceMappingURL=schedulePromise.js.map","import { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleIterable(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var iterator;\n        executeSchedule(subscriber, scheduler, function () {\n            iterator = input[Symbol_iterator]();\n            executeSchedule(subscriber, scheduler, function () {\n                var _a;\n                var value;\n                var done;\n                try {\n                    (_a = iterator.next(), value = _a.value, done = _a.done);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                }\n            }, 0, true);\n        });\n        return function () { return isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return(); };\n    });\n}\n//# sourceMappingURL=scheduleIterable.js.map","import { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nexport function scheduleReadableStreamLike(input, scheduler) {\n    return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n//# sourceMappingURL=scheduleReadableStreamLike.js.map","export const defaultJsonSerializer = JSON;\n//# sourceMappingURL=defaultJsonSerializer.js.map","export function invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(\n      message != null ? message : 'Unexpected invariant triggered.',\n    );\n  }\n}\n","import { invariant } from '../jsutils/invariant.mjs';\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === 'number' || invariant(false);\n\n    if (match.index >= position) {\n      break;\n    }\n\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n\n  return {\n    line,\n    column: position + 1 - lastLineStart,\n  };\n}\n","import { getLocation } from './location.mjs';\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nexport function printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    getLocation(location.source, location.start),\n  );\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return (\n      locationStr +\n      printPrefixedLines([\n        [`${lineNum} |`, subLines[0]],\n        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),\n        ['|', '^'.padStart(subLineColumnNum)],\n        ['|', subLines[subLineIndex + 1]],\n      ])\n    );\n  }\n\n  return (\n    locationStr +\n    printPrefixedLines([\n      // Lines specified like this: [\"prefix\", \"string\"],\n      [`${lineNum - 1} |`, lines[lineIndex - 1]],\n      [`${lineNum} |`, locationLine],\n      ['|', '^'.padStart(columnNum)],\n      [`${lineNum + 1} |`, lines[lineIndex + 1]],\n    ])\n  );\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines\n    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))\n    .join('\\n');\n}\n","import { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { getLocation } from '../language/location.mjs';\nimport {\n  printLocation,\n  printSourceLocation,\n} from '../language/printLocation.mjs';\n\nfunction toNormalizedOptions(args) {\n  const firstArg = args[0];\n\n  if (firstArg == null || 'kind' in firstArg || 'length' in firstArg) {\n    return {\n      nodes: firstArg,\n      source: args[1],\n      positions: args[2],\n      path: args[3],\n      originalError: args[4],\n      extensions: args[5],\n    };\n  }\n\n  return firstArg;\n}\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport class GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n\n  /**\n   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.\n   */\n  constructor(message, ...rawArgs) {\n    var _this$nodes, _nodeLocations$, _ref;\n\n    const { nodes, source, positions, path, originalError, extensions } =\n      toNormalizedOptions(rawArgs);\n    super(message);\n    this.name = 'GraphQLError';\n    this.path = path !== null && path !== void 0 ? path : undefined;\n    this.originalError =\n      originalError !== null && originalError !== void 0\n        ? originalError\n        : undefined; // Compute list of blame nodes.\n\n    this.nodes = undefinedIfEmpty(\n      Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined,\n    );\n    const nodeLocations = undefinedIfEmpty(\n      (_this$nodes = this.nodes) === null || _this$nodes === void 0\n        ? void 0\n        : _this$nodes.map((node) => node.loc).filter((loc) => loc != null),\n    ); // Compute locations in the source for the given nodes/positions.\n\n    this.source =\n      source !== null && source !== void 0\n        ? source\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : (_nodeLocations$ = nodeLocations[0]) === null ||\n          _nodeLocations$ === void 0\n        ? void 0\n        : _nodeLocations$.source;\n    this.positions =\n      positions !== null && positions !== void 0\n        ? positions\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => loc.start);\n    this.locations =\n      positions && source\n        ? positions.map((pos) => getLocation(source, pos))\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => getLocation(loc.source, loc.start));\n    const originalExtensions = isObjectLike(\n      originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions,\n    )\n      ? originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions\n      : undefined;\n    this.extensions =\n      (_ref =\n        extensions !== null && extensions !== void 0\n          ? extensions\n          : originalExtensions) !== null && _ref !== void 0\n        ? _ref\n        : Object.create(null); // Only properties prescribed by the spec should be enumerable.\n    // Keep the rest as non-enumerable.\n\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true,\n      },\n      name: {\n        enumerable: false,\n      },\n      nodes: {\n        enumerable: false,\n      },\n      source: {\n        enumerable: false,\n      },\n      positions: {\n        enumerable: false,\n      },\n      originalError: {\n        enumerable: false,\n      },\n    }); // Include (non-enumerable) stack trace.\n\n    /* c8 ignore start */\n    // FIXME: https://github.com/graphql/graphql-js/issues/2317\n\n    if (\n      originalError !== null &&\n      originalError !== void 0 &&\n      originalError.stack\n    ) {\n      Object.defineProperty(this, 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true,\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true,\n      });\n    }\n    /* c8 ignore stop */\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLError';\n  }\n\n  toString() {\n    let output = this.message;\n\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += '\\n\\n' + printLocation(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output += '\\n\\n' + printSourceLocation(this.source, location);\n      }\n    }\n\n    return output;\n  }\n\n  toJSON() {\n    const formattedError = {\n      message: this.message,\n    };\n\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n\n    return formattedError;\n  }\n}\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * See: https://spec.graphql.org/draft/#sec-Errors\n */\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\nexport function printError(error) {\n  return error.toString();\n}\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n *\n * @deprecated Please use `error.toJSON` instead. Will be removed in v17\n */\n\nexport function formatError(error) {\n  return error.toJSON();\n}\n","/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport function isObjectLike(value) {\n  return typeof value == 'object' && value !== null;\n}\n","import { GraphQLError } from './GraphQLError.mjs';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(`Syntax Error: ${description}`, {\n    source,\n    positions: [position],\n  });\n}\n","/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport class Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport class Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\n/**\n * @internal\n */\nexport const QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nvar OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (OperationTypeNode = {}));\n\nexport { OperationTypeNode };\n","/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation;\n\n(function (DirectiveLocation) {\n  DirectiveLocation['QUERY'] = 'QUERY';\n  DirectiveLocation['MUTATION'] = 'MUTATION';\n  DirectiveLocation['SUBSCRIPTION'] = 'SUBSCRIPTION';\n  DirectiveLocation['FIELD'] = 'FIELD';\n  DirectiveLocation['FRAGMENT_DEFINITION'] = 'FRAGMENT_DEFINITION';\n  DirectiveLocation['FRAGMENT_SPREAD'] = 'FRAGMENT_SPREAD';\n  DirectiveLocation['INLINE_FRAGMENT'] = 'INLINE_FRAGMENT';\n  DirectiveLocation['VARIABLE_DEFINITION'] = 'VARIABLE_DEFINITION';\n  DirectiveLocation['SCHEMA'] = 'SCHEMA';\n  DirectiveLocation['SCALAR'] = 'SCALAR';\n  DirectiveLocation['OBJECT'] = 'OBJECT';\n  DirectiveLocation['FIELD_DEFINITION'] = 'FIELD_DEFINITION';\n  DirectiveLocation['ARGUMENT_DEFINITION'] = 'ARGUMENT_DEFINITION';\n  DirectiveLocation['INTERFACE'] = 'INTERFACE';\n  DirectiveLocation['UNION'] = 'UNION';\n  DirectiveLocation['ENUM'] = 'ENUM';\n  DirectiveLocation['ENUM_VALUE'] = 'ENUM_VALUE';\n  DirectiveLocation['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  DirectiveLocation['INPUT_FIELD_DEFINITION'] = 'INPUT_FIELD_DEFINITION';\n})(DirectiveLocation || (DirectiveLocation = {}));\n\nexport { DirectiveLocation };\n/**\n * The enum type representing the directive location values.\n *\n * @deprecated Please use `DirectiveLocation`. Will be remove in v17.\n */\n","/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind;\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (Kind = {}));\n\nexport { Kind };\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind;\n\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (TokenKind = {}));\n\nexport { TokenKind };\n/**\n * The enum type representing the token kinds values.\n *\n * @deprecated Please use `TokenKind`. Will be remove in v17.\n */\n","/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nexport function isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nexport function isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nexport function isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n","import { isWhiteSpace } from './characterClasses.mjs';\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\n\nexport function dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (i < str.length && isWhiteSpace(str.charCodeAt(i))) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nexport function isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every((line) => line.length === 0 || isWhiteSpace(line.charCodeAt(0))); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine = isSingleLine && isWhiteSpace(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Token } from './ast.mjs';\nimport { dedentBlockStringLines } from './blockString.mjs';\nimport { isDigit, isNameContinue, isNameStart } from './characterClasses.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport class Lexer {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  constructor(source) {\n    const startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lexer';\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n  advance() {\n    this.lastToken = this.token;\n    const token = (this.token = this.lookahead());\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n\n  lookahead() {\n    let token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        if (token.next) {\n          token = token.next;\n        } else {\n          // Read the next token and form a link in the token linked-list.\n          const nextToken = readNextToken(this, token.end); // @ts-expect-error next is only mutable during parsing.\n\n          token.next = nextToken; // @ts-expect-error prev is only mutable during parsing.\n\n          nextToken.prev = token;\n          token = nextToken;\n        }\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  }\n}\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return (\n    kind === TokenKind.BANG ||\n    kind === TokenKind.DOLLAR ||\n    kind === TokenKind.AMP ||\n    kind === TokenKind.PAREN_L ||\n    kind === TokenKind.PAREN_R ||\n    kind === TokenKind.SPREAD ||\n    kind === TokenKind.COLON ||\n    kind === TokenKind.EQUALS ||\n    kind === TokenKind.AT ||\n    kind === TokenKind.BRACKET_L ||\n    kind === TokenKind.BRACKET_R ||\n    kind === TokenKind.BRACE_L ||\n    kind === TokenKind.PIPE ||\n    kind === TokenKind.BRACE_R\n  );\n}\n/**\n * A Unicode scalar value is any Unicode code point except surrogate code\n * points. In other words, the inclusive ranges of values 0x0000 to 0xD7FF and\n * 0xE000 to 0x10FFFF.\n *\n * SourceCharacter ::\n *   - \"Any Unicode scalar value\"\n */\n\nfunction isUnicodeScalarValue(code) {\n  return (\n    (code >= 0x0000 && code <= 0xd7ff) || (code >= 0xe000 && code <= 0x10ffff)\n  );\n}\n/**\n * The GraphQL specification defines source text as a sequence of unicode scalar\n * values (which Unicode defines to exclude surrogate code points). However\n * JavaScript defines strings as a sequence of UTF-16 code units which may\n * include surrogates. A surrogate pair is a valid source character as it\n * encodes a supplementary code point (above U+FFFF), but unpaired surrogate\n * code points are not valid source characters.\n */\n\nfunction isSupplementaryCodePoint(body, location) {\n  return (\n    isLeadingSurrogate(body.charCodeAt(location)) &&\n    isTrailingSurrogate(body.charCodeAt(location + 1))\n  );\n}\n\nfunction isLeadingSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction isTrailingSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n/**\n * Prints the code point (or end of file reference) at a given location in a\n * source for use in error messages.\n *\n * Printable ASCII is printed quoted, while other points are printed in Unicode\n * code point form (ie. U+1234).\n */\n\nfunction printCodePointAt(lexer, location) {\n  const code = lexer.source.body.codePointAt(location);\n\n  if (code === undefined) {\n    return TokenKind.EOF;\n  } else if (code >= 0x0020 && code <= 0x007e) {\n    // Printable ASCII\n    const char = String.fromCodePoint(code);\n    return char === '\"' ? \"'\\\"'\" : `\"${char}\"`;\n  } // Unicode code point\n\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0');\n}\n/**\n * Create a token with line and column location information.\n */\n\nfunction createToken(lexer, kind, start, end, value) {\n  const line = lexer.line;\n  const col = 1 + start - lexer.lineStart;\n  return new Token(kind, start, end, line, col, value);\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\nfunction readNextToken(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // SourceCharacter\n\n    switch (code) {\n      // Ignored ::\n      //   - UnicodeBOM\n      //   - WhiteSpace\n      //   - LineTerminator\n      //   - Comment\n      //   - Comma\n      //\n      // UnicodeBOM :: \"Byte Order Mark (U+FEFF)\"\n      //\n      // WhiteSpace ::\n      //   - \"Horizontal Tab (U+0009)\"\n      //   - \"Space (U+0020)\"\n      //\n      // Comma :: ,\n      case 0xfeff: // <BOM>\n\n      case 0x0009: // \\t\n\n      case 0x0020: // <space>\n\n      case 0x002c:\n        // ,\n        ++position;\n        continue;\n      // LineTerminator ::\n      //   - \"New Line (U+000A)\"\n      //   - \"Carriage Return (U+000D)\" [lookahead != \"New Line (U+000A)\"]\n      //   - \"Carriage Return (U+000D)\" \"New Line (U+000A)\"\n\n      case 0x000a:\n        // \\n\n        ++position;\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n\n      case 0x000d:\n        // \\r\n        if (body.charCodeAt(position + 1) === 0x000a) {\n          position += 2;\n        } else {\n          ++position;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n      // Comment\n\n      case 0x0023:\n        // #\n        return readComment(lexer, position);\n      // Token ::\n      //   - Punctuator\n      //   - Name\n      //   - IntValue\n      //   - FloatValue\n      //   - StringValue\n      //\n      // Punctuator :: one of ! $ & ( ) ... : = @ [ ] { | }\n\n      case 0x0021:\n        // !\n        return createToken(lexer, TokenKind.BANG, position, position + 1);\n\n      case 0x0024:\n        // $\n        return createToken(lexer, TokenKind.DOLLAR, position, position + 1);\n\n      case 0x0026:\n        // &\n        return createToken(lexer, TokenKind.AMP, position, position + 1);\n\n      case 0x0028:\n        // (\n        return createToken(lexer, TokenKind.PAREN_L, position, position + 1);\n\n      case 0x0029:\n        // )\n        return createToken(lexer, TokenKind.PAREN_R, position, position + 1);\n\n      case 0x002e:\n        // .\n        if (\n          body.charCodeAt(position + 1) === 0x002e &&\n          body.charCodeAt(position + 2) === 0x002e\n        ) {\n          return createToken(lexer, TokenKind.SPREAD, position, position + 3);\n        }\n\n        break;\n\n      case 0x003a:\n        // :\n        return createToken(lexer, TokenKind.COLON, position, position + 1);\n\n      case 0x003d:\n        // =\n        return createToken(lexer, TokenKind.EQUALS, position, position + 1);\n\n      case 0x0040:\n        // @\n        return createToken(lexer, TokenKind.AT, position, position + 1);\n\n      case 0x005b:\n        // [\n        return createToken(lexer, TokenKind.BRACKET_L, position, position + 1);\n\n      case 0x005d:\n        // ]\n        return createToken(lexer, TokenKind.BRACKET_R, position, position + 1);\n\n      case 0x007b:\n        // {\n        return createToken(lexer, TokenKind.BRACE_L, position, position + 1);\n\n      case 0x007c:\n        // |\n        return createToken(lexer, TokenKind.PIPE, position, position + 1);\n\n      case 0x007d:\n        // }\n        return createToken(lexer, TokenKind.BRACE_R, position, position + 1);\n      // StringValue\n\n      case 0x0022:\n        // \"\n        if (\n          body.charCodeAt(position + 1) === 0x0022 &&\n          body.charCodeAt(position + 2) === 0x0022\n        ) {\n          return readBlockString(lexer, position);\n        }\n\n        return readString(lexer, position);\n    } // IntValue | FloatValue (Digit | -)\n\n    if (isDigit(code) || code === 0x002d) {\n      return readNumber(lexer, position, code);\n    } // Name\n\n    if (isNameStart(code)) {\n      return readName(lexer, position);\n    }\n\n    throw syntaxError(\n      lexer.source,\n      position,\n      code === 0x0027\n        ? 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?'\n        : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position)\n        ? `Unexpected character: ${printCodePointAt(lexer, position)}.`\n        : `Invalid character: ${printCodePointAt(lexer, position)}.`,\n    );\n  }\n\n  return createToken(lexer, TokenKind.EOF, bodyLength, bodyLength);\n}\n/**\n * Reads a comment token from the source file.\n *\n * ```\n * Comment :: # CommentChar* [lookahead != CommentChar]\n *\n * CommentChar :: SourceCharacter but not LineTerminator\n * ```\n */\n\nfunction readComment(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.COMMENT,\n    start,\n    position,\n    body.slice(start + 1, position),\n  );\n}\n/**\n * Reads a number token from the source file, either a FloatValue or an IntValue\n * depending on whether a FractionalPart or ExponentPart is encountered.\n *\n * ```\n * IntValue :: IntegerPart [lookahead != {Digit, `.`, NameStart}]\n *\n * IntegerPart ::\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit Digit*\n *\n * NegativeSign :: -\n *\n * NonZeroDigit :: Digit but not `0`\n *\n * FloatValue ::\n *   - IntegerPart FractionalPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart FractionalPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *\n * FractionalPart :: . Digit+\n *\n * ExponentPart :: ExponentIndicator Sign? Digit+\n *\n * ExponentIndicator :: one of `e` `E`\n *\n * Sign :: one of + -\n * ```\n */\n\nfunction readNumber(lexer, start, firstCode) {\n  const body = lexer.source.body;\n  let position = start;\n  let code = firstCode;\n  let isFloat = false; // NegativeSign (-)\n\n  if (code === 0x002d) {\n    code = body.charCodeAt(++position);\n  } // Zero (0)\n\n  if (code === 0x0030) {\n    code = body.charCodeAt(++position);\n\n    if (isDigit(code)) {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid number, unexpected digit after 0: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  } else {\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Full stop (.)\n\n  if (code === 0x002e) {\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // E e\n\n  if (code === 0x0045 || code === 0x0065) {\n    isFloat = true;\n    code = body.charCodeAt(++position); // + -\n\n    if (code === 0x002b || code === 0x002d) {\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n  if (code === 0x002e || isNameStart(code)) {\n    throw syntaxError(\n      lexer.source,\n      position,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        position,\n      )}.`,\n    );\n  }\n\n  return createToken(\n    lexer,\n    isFloat ? TokenKind.FLOAT : TokenKind.INT,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n/**\n * Returns the new position in the source after reading one or more digits.\n */\n\nfunction readDigits(lexer, start, firstCode) {\n  if (!isDigit(firstCode)) {\n    throw syntaxError(\n      lexer.source,\n      start,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        start,\n      )}.`,\n    );\n  }\n\n  const body = lexer.source.body;\n  let position = start + 1; // +1 to skip first firstCode\n\n  while (isDigit(body.charCodeAt(position))) {\n    ++position;\n  }\n\n  return position;\n}\n/**\n * Reads a single-quote string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"` [lookahead != `\"`]\n *   - `\"` StringCharacter+ `\"`\n *\n * StringCharacter ::\n *   - SourceCharacter but not `\"` or `\\` or LineTerminator\n *   - `\\u` EscapedUnicode\n *   - `\\` EscapedCharacter\n *\n * EscapedUnicode ::\n *   - `{` HexDigit+ `}`\n *   - HexDigit HexDigit HexDigit HexDigit\n *\n * EscapedCharacter :: one of `\"` `\\` `/` `b` `f` `n` `r` `t`\n * ```\n */\n\nfunction readString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  let chunkStart = position;\n  let value = '';\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Quote (\")\n\n    if (code === 0x0022) {\n      value += body.slice(chunkStart, position);\n      return createToken(lexer, TokenKind.STRING, start, position + 1, value);\n    } // Escape Sequence (\\)\n\n    if (code === 0x005c) {\n      value += body.slice(chunkStart, position);\n      const escape =\n        body.charCodeAt(position + 1) === 0x0075 // u\n          ? body.charCodeAt(position + 2) === 0x007b // {\n            ? readEscapedUnicodeVariableWidth(lexer, position)\n            : readEscapedUnicodeFixedWidth(lexer, position)\n          : readEscapedCharacter(lexer, position);\n      value += escape.value;\n      position += escape.size;\n      chunkStart = position;\n      continue;\n    } // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n} // The string value and lexed size of an escape sequence.\n\nfunction readEscapedUnicodeVariableWidth(lexer, position) {\n  const body = lexer.source.body;\n  let point = 0;\n  let size = 3; // Cannot be larger than 12 chars (\\u{00000000}).\n\n  while (size < 12) {\n    const code = body.charCodeAt(position + size++); // Closing Brace (})\n\n    if (code === 0x007d) {\n      // Must be at least 5 chars (\\u{0}) and encode a Unicode scalar value.\n      if (size < 5 || !isUnicodeScalarValue(point)) {\n        break;\n      }\n\n      return {\n        value: String.fromCodePoint(point),\n        size,\n      };\n    } // Append this hex digit to the code point.\n\n    point = (point << 4) | readHexDigit(code);\n\n    if (point < 0) {\n      break;\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(\n      position,\n      position + size,\n    )}\".`,\n  );\n}\n\nfunction readEscapedUnicodeFixedWidth(lexer, position) {\n  const body = lexer.source.body;\n  const code = read16BitHexCode(body, position + 2);\n\n  if (isUnicodeScalarValue(code)) {\n    return {\n      value: String.fromCodePoint(code),\n      size: 6,\n    };\n  } // GraphQL allows JSON-style surrogate pair escape sequences, but only when\n  // a valid pair is formed.\n\n  if (isLeadingSurrogate(code)) {\n    // \\u\n    if (\n      body.charCodeAt(position + 6) === 0x005c &&\n      body.charCodeAt(position + 7) === 0x0075\n    ) {\n      const trailingCode = read16BitHexCode(body, position + 8);\n\n      if (isTrailingSurrogate(trailingCode)) {\n        // JavaScript defines strings as a sequence of UTF-16 code units and\n        // encodes Unicode code points above U+FFFF using a surrogate pair of\n        // code units. Since this is a surrogate pair escape sequence, just\n        // include both codes into the JavaScript string value. Had JavaScript\n        // not been internally based on UTF-16, then this surrogate pair would\n        // be decoded to retrieve the supplementary code point.\n        return {\n          value: String.fromCodePoint(code, trailingCode),\n          size: 12,\n        };\n      }\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(position, position + 6)}\".`,\n  );\n}\n/**\n * Reads four hexadecimal characters and returns the positive integer that 16bit\n * hexadecimal string represents. For example, \"000f\" will return 15, and \"dead\"\n * will return 57005.\n *\n * Returns a negative number if any char was not a valid hexadecimal digit.\n */\n\nfunction read16BitHexCode(body, position) {\n  // readHexDigit() returns -1 on error. ORing a negative value with any other\n  // value always produces a negative value.\n  return (\n    (readHexDigit(body.charCodeAt(position)) << 12) |\n    (readHexDigit(body.charCodeAt(position + 1)) << 8) |\n    (readHexDigit(body.charCodeAt(position + 2)) << 4) |\n    readHexDigit(body.charCodeAt(position + 3))\n  );\n}\n/**\n * Reads a hexadecimal character and returns its positive integer value (0-15).\n *\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 if the provided character code was not a valid hexadecimal digit.\n *\n * HexDigit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n *   - `A` `B` `C` `D` `E` `F`\n *   - `a` `b` `c` `d` `e` `f`\n */\n\nfunction readHexDigit(code) {\n  return code >= 0x0030 && code <= 0x0039 // 0-9\n    ? code - 0x0030\n    : code >= 0x0041 && code <= 0x0046 // A-F\n    ? code - 0x0037\n    : code >= 0x0061 && code <= 0x0066 // a-f\n    ? code - 0x0057\n    : -1;\n}\n/**\n * | Escaped Character | Code Point | Character Name               |\n * | ----------------- | ---------- | ---------------------------- |\n * | `\"`               | U+0022     | double quote                 |\n * | `\\`               | U+005C     | reverse solidus (back slash) |\n * | `/`               | U+002F     | solidus (forward slash)      |\n * | `b`               | U+0008     | backspace                    |\n * | `f`               | U+000C     | form feed                    |\n * | `n`               | U+000A     | line feed (new line)         |\n * | `r`               | U+000D     | carriage return              |\n * | `t`               | U+0009     | horizontal tab               |\n */\n\nfunction readEscapedCharacter(lexer, position) {\n  const body = lexer.source.body;\n  const code = body.charCodeAt(position + 1);\n\n  switch (code) {\n    case 0x0022:\n      // \"\n      return {\n        value: '\\u0022',\n        size: 2,\n      };\n\n    case 0x005c:\n      // \\\n      return {\n        value: '\\u005c',\n        size: 2,\n      };\n\n    case 0x002f:\n      // /\n      return {\n        value: '\\u002f',\n        size: 2,\n      };\n\n    case 0x0062:\n      // b\n      return {\n        value: '\\u0008',\n        size: 2,\n      };\n\n    case 0x0066:\n      // f\n      return {\n        value: '\\u000c',\n        size: 2,\n      };\n\n    case 0x006e:\n      // n\n      return {\n        value: '\\u000a',\n        size: 2,\n      };\n\n    case 0x0072:\n      // r\n      return {\n        value: '\\u000d',\n        size: 2,\n      };\n\n    case 0x0074:\n      // t\n      return {\n        value: '\\u0009',\n        size: 2,\n      };\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid character escape sequence: \"${body.slice(\n      position,\n      position + 2,\n    )}\".`,\n  );\n}\n/**\n * Reads a block string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"\"` BlockStringCharacter* `\"\"\"`\n *\n * BlockStringCharacter ::\n *   - SourceCharacter but not `\"\"\"` or `\\\"\"\"`\n *   - `\\\"\"\"`\n * ```\n */\n\nfunction readBlockString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let lineStart = lexer.lineStart;\n  let position = start + 3;\n  let chunkStart = position;\n  let currentLine = '';\n  const blockLines = [];\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Triple-Quote (\"\"\")\n\n    if (\n      code === 0x0022 &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n      const token = createToken(\n        lexer,\n        TokenKind.BLOCK_STRING,\n        start,\n        position + 3, // Return a string of the lines joined with U+000A.\n        dedentBlockStringLines(blockLines).join('\\n'),\n      );\n      lexer.line += blockLines.length - 1;\n      lexer.lineStart = lineStart;\n      return token;\n    } // Escaped Triple-Quote (\\\"\"\")\n\n    if (\n      code === 0x005c &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022 &&\n      body.charCodeAt(position + 3) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      chunkStart = position + 1; // skip only slash\n\n      position += 4;\n      continue;\n    } // LineTerminator\n\n    if (code === 0x000a || code === 0x000d) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n\n      if (code === 0x000d && body.charCodeAt(position + 1) === 0x000a) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      currentLine = '';\n      chunkStart = position;\n      lineStart = position;\n      continue;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * ```\n * Name ::\n *   - NameStart NameContinue* [lookahead != NameContinue]\n * ```\n */\n\nfunction readName(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position);\n\n    if (isNameContinue(code)) {\n      ++position;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.NAME,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n","export function devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","const MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","import { inspect } from './inspect.mjs';\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n * See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n * See: https://webpack.js.org/guides/production/\n */\n\nexport const instanceOf =\n  /* c8 ignore next 6 */\n  // FIXME: https://github.com/graphql/graphql-js/issues/2317\n  globalThis.process && globalThis.process.env.NODE_ENV === 'production'\n    ? function instanceOf(value, constructor) {\n        return value instanceof constructor;\n      }\n    : function instanceOf(value, constructor) {\n        if (value instanceof constructor) {\n          return true;\n        }\n\n        if (typeof value === 'object' && value !== null) {\n          var _value$constructor;\n\n          // Prefer Symbol.toStringTag since it is immune to minification.\n          const className = constructor.prototype[Symbol.toStringTag];\n          const valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n            Symbol.toStringTag in value // @ts-expect-error TS bug see, https://github.com/microsoft/TypeScript/issues/38009\n              ? value[Symbol.toStringTag]\n              : (_value$constructor = value.constructor) === null ||\n                _value$constructor === void 0\n              ? void 0\n              : _value$constructor.name;\n\n          if (className === valueClassName) {\n            const stringifiedValue = inspect(value);\n            throw new Error(`Cannot use ${className} \"${stringifiedValue}\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`);\n          }\n        }\n\n        return false;\n      };\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport class Source {\n  constructor(\n    body,\n    name = 'GraphQL request',\n    locationOffset = {\n      line: 1,\n      column: 1,\n    },\n  ) {\n    typeof body === 'string' ||\n      devAssert(false, `Body must be a string. Received: ${inspect(body)}.`);\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 ||\n      devAssert(\n        false,\n        'line in locationOffset is 1-indexed and must be positive.',\n      );\n    this.locationOffset.column > 0 ||\n      devAssert(\n        false,\n        'column in locationOffset is 1-indexed and must be positive.',\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Location, OperationTypeNode } from './ast.mjs';\nimport { DirectiveLocation } from './directiveLocation.mjs';\nimport { Kind } from './kinds.mjs';\nimport { isPunctuatorTokenKind, Lexer } from './lexer.mjs';\nimport { isSource, Source } from './source.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  const parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Similar to parseValue(), but raises a parse error if it encounters a\n * variable. The return type will be a constant value.\n */\n\nexport function parseConstValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseConstValueLiteral();\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport class Parser {\n  constructor(source, options = {}) {\n    const sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n    this._tokenCounter = 0;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n  parseName() {\n    const token = this.expectToken(TokenKind.NAME);\n    return this.node(token, {\n      kind: Kind.NAME,\n      value: token.value,\n    });\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n\n  parseDocument() {\n    return this.node(this._lexer.token, {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(\n        TokenKind.SOF,\n        this.parseDefinition,\n        TokenKind.EOF,\n      ),\n    });\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   *\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n\n  parseDefinition() {\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } // Many definitions begin with a description and require a lookahead.\n\n    const hasDescription = this.peekDescription();\n    const keywordToken = hasDescription\n      ? this._lexer.lookahead()\n      : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n\n      if (hasDescription) {\n        throw syntaxError(\n          this._lexer.source,\n          this._lexer.token.start,\n          'Unexpected description, descriptions are supported only on type definitions.',\n        );\n      }\n\n      switch (keywordToken.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n\n  parseOperationDefinition() {\n    const start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.node(start, {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: OperationTypeNode.QUERY,\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    const operation = this.parseOperationType();\n    let name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return this.node(start, {\n      kind: Kind.OPERATION_DEFINITION,\n      operation,\n      name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n\n  parseOperationType() {\n    const operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return OperationTypeNode.QUERY;\n\n      case 'mutation':\n        return OperationTypeNode.MUTATION;\n\n      case 'subscription':\n        return OperationTypeNode.SUBSCRIPTION;\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n\n  parseVariableDefinitions() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseVariableDefinition,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n\n  parseVariableDefinition() {\n    return this.node(this._lexer.token, {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS)\n        ? this.parseConstValueLiteral()\n        : undefined,\n      directives: this.parseConstDirectives(),\n    });\n  }\n  /**\n   * Variable : $ Name\n   */\n\n  parseVariable() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return this.node(start, {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n    });\n  }\n  /**\n   * ```\n   * SelectionSet : { Selection+ }\n   * ```\n   */\n\n  parseSelectionSet() {\n    return this.node(this._lexer.token, {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(\n        TokenKind.BRACE_L,\n        this.parseSelection,\n        TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n\n  parseSelection() {\n    return this.peek(TokenKind.SPREAD)\n      ? this.parseFragment()\n      : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n\n  parseField() {\n    const start = this._lexer.token;\n    const nameOrAlias = this.parseName();\n    let alias;\n    let name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return this.node(start, {\n      kind: Kind.FIELD,\n      alias,\n      name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L)\n        ? this.parseSelectionSet()\n        : undefined,\n    });\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n\n  parseArguments(isConst) {\n    const item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n\n  parseArgument(isConst = false) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.ARGUMENT,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  }\n\n  parseConstArgument() {\n    return this.parseArgument(true);\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n\n  parseFragment() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    const hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n\n  parseFragmentDefinition() {\n    const start = this._lexer.token;\n    this.expectKeyword('fragment'); // Legacy support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.allowLegacyFragmentVariables === true) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n\n  parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseValueLiteral(isConst) {\n    const token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: Kind.INT,\n          value: token.value,\n        });\n\n      case TokenKind.FLOAT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: Kind.FLOAT,\n          value: token.value,\n        });\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this.advanceLexer();\n\n        switch (token.value) {\n          case 'true':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: true,\n            });\n\n          case 'false':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: false,\n            });\n\n          case 'null':\n            return this.node(token, {\n              kind: Kind.NULL,\n            });\n\n          default:\n            return this.node(token, {\n              kind: Kind.ENUM,\n              value: token.value,\n            });\n        }\n\n      case TokenKind.DOLLAR:\n        if (isConst) {\n          this.expectToken(TokenKind.DOLLAR);\n\n          if (this._lexer.token.kind === TokenKind.NAME) {\n            const varName = this._lexer.token.value;\n            throw syntaxError(\n              this._lexer.source,\n              token.start,\n              `Unexpected variable \"$${varName}\" in constant value.`,\n            );\n          } else {\n            throw this.unexpected(token);\n          }\n        }\n\n        return this.parseVariable();\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseConstValueLiteral() {\n    return this.parseValueLiteral(true);\n  }\n\n  parseStringLiteral() {\n    const token = this._lexer.token;\n    this.advanceLexer();\n    return this.node(token, {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n    });\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n\n  parseList(isConst) {\n    const item = () => this.parseValueLiteral(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n    });\n  }\n  /**\n   * ```\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   * ```\n   */\n\n  parseObject(isConst) {\n    const item = () => this.parseObjectField(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n    });\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n\n  parseObjectField(isConst) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.OBJECT_FIELD,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n\n  parseDirectives(isConst) {\n    const directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n\n  parseConstDirectives() {\n    return this.parseDirectives(true);\n  }\n  /**\n   * ```\n   * Directive[Const] : @ Name Arguments[?Const]?\n   * ```\n   */\n\n  parseDirective(isConst) {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return this.node(start, {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n    });\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n\n  parseTypeReference() {\n    const start = this._lexer.token;\n    let type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      const innerType = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = this.node(start, {\n        kind: Kind.LIST_TYPE,\n        type: innerType,\n      });\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return this.node(start, {\n        kind: Kind.NON_NULL_TYPE,\n        type,\n      });\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n\n  parseNamedType() {\n    return this.node(this._lexer.token, {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n    });\n  } // Implements the parsing rules in the Type Definition section.\n\n  peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n\n  parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * ```\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   * ```\n   */\n\n  parseSchemaDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.many(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n    return this.node(start, {\n      kind: Kind.SCHEMA_DEFINITION,\n      description,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n\n  parseOperationTypeDefinition() {\n    const start = this._lexer.token;\n    const operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseNamedType();\n    return this.node(start, {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation,\n      type,\n    });\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n\n  parseScalarTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n\n  parseObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n\n  parseImplementsInterfaces() {\n    return this.expectOptionalKeyword('implements')\n      ? this.delimitedMany(TokenKind.AMP, this.parseNamedType)\n      : [];\n  }\n  /**\n   * ```\n   * FieldsDefinition : { FieldDefinition+ }\n   * ```\n   */\n\n  parseFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseFieldDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n\n  parseFieldDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.FIELD_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      type,\n      directives,\n    });\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n\n  parseArgumentDefs() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseInputValueDef,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n\n  parseInputValueDef() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    let defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseConstValueLiteral();\n    }\n\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description,\n      name,\n      type,\n      defaultValue,\n      directives,\n    });\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n\n  parseInterfaceTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n\n  parseUnionTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n\n  parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS)\n      ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType)\n      : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n\n  parseEnumTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * ```\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   * ```\n   */\n\n  parseEnumValuesDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseEnumValueDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   */\n\n  parseEnumValueDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseEnumValueName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseEnumValueName() {\n    if (\n      this._lexer.token.value === 'true' ||\n      this._lexer.token.value === 'false' ||\n      this._lexer.token.value === 'null'\n    ) {\n      throw syntaxError(\n        this._lexer.source,\n        this._lexer.token.start,\n        `${getTokenDesc(\n          this._lexer.token,\n        )} is reserved and cannot be used for an enum value.`,\n      );\n    }\n\n    return this.parseName();\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n\n  parseInputObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   * ```\n   */\n\n  parseInputFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseInputValueDef,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n\n  parseTypeSystemExtension() {\n    const keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * ```\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   * ```\n   */\n\n  parseSchemaExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n\n  parseScalarTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n\n  parseObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n\n  parseInterfaceTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n\n  parseUnionTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n\n  parseEnumTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n\n  parseInputObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   * ```\n   */\n\n  parseDirectiveDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    const repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    const locations = this.parseDirectiveLocations();\n    return this.node(start, {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      repeatable,\n      locations,\n    });\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n\n  parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n\n  parseDirectiveLocation() {\n    const start = this._lexer.token;\n    const name = this.parseName();\n\n    if (Object.prototype.hasOwnProperty.call(DirectiveLocation, name.value)) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a node that, if configured to do so, sets a \"loc\" field as a\n   * location object, used to identify the place in the source that created a\n   * given parsed object.\n   */\n\n  node(startToken, node) {\n    if (this._options.noLocation !== true) {\n      node.loc = new Location(\n        startToken,\n        this._lexer.lastToken,\n        this._lexer.source,\n      );\n    }\n\n    return node;\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n\n  peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return token;\n    }\n\n    throw syntaxError(\n      this._lexer.source,\n      token.start,\n      `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * If the next token is of the given kind, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n    } else {\n      throw syntaxError(\n        this._lexer.source,\n        token.start,\n        `Expected \"${value}\", found ${getTokenDesc(token)}.`,\n      );\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n\n  unexpected(atToken) {\n    const token =\n      atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(\n      this._lexer.source,\n      token.start,\n      `Unexpected ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      const nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n\n  delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  }\n\n  advanceLexer() {\n    const { maxTokens } = this._options;\n\n    const token = this._lexer.advance();\n\n    if (maxTokens !== undefined && token.kind !== TokenKind.EOF) {\n      ++this._tokenCounter;\n\n      if (this._tokenCounter > maxTokens) {\n        throw syntaxError(\n          this._lexer.source,\n          token.start,\n          `Document contains more that ${maxTokens} tokens. Parsing aborted.`,\n        );\n      }\n    }\n  }\n}\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  const value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? ` \"${value}\"` : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? `\"${kind}\"` : kind;\n}\n","/**\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\n */\nexport function printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\n\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = [\n  '\\\\u0000',\n  '\\\\u0001',\n  '\\\\u0002',\n  '\\\\u0003',\n  '\\\\u0004',\n  '\\\\u0005',\n  '\\\\u0006',\n  '\\\\u0007',\n  '\\\\b',\n  '\\\\t',\n  '\\\\n',\n  '\\\\u000B',\n  '\\\\f',\n  '\\\\r',\n  '\\\\u000E',\n  '\\\\u000F',\n  '\\\\u0010',\n  '\\\\u0011',\n  '\\\\u0012',\n  '\\\\u0013',\n  '\\\\u0014',\n  '\\\\u0015',\n  '\\\\u0016',\n  '\\\\u0017',\n  '\\\\u0018',\n  '\\\\u0019',\n  '\\\\u001A',\n  '\\\\u001B',\n  '\\\\u001C',\n  '\\\\u001D',\n  '\\\\u001E',\n  '\\\\u001F',\n  '',\n  '',\n  '\\\\\"',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 2F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 3F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 4F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\\\\\',\n  '',\n  '',\n  '', // 5F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 6F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\u007F',\n  '\\\\u0080',\n  '\\\\u0081',\n  '\\\\u0082',\n  '\\\\u0083',\n  '\\\\u0084',\n  '\\\\u0085',\n  '\\\\u0086',\n  '\\\\u0087',\n  '\\\\u0088',\n  '\\\\u0089',\n  '\\\\u008A',\n  '\\\\u008B',\n  '\\\\u008C',\n  '\\\\u008D',\n  '\\\\u008E',\n  '\\\\u008F',\n  '\\\\u0090',\n  '\\\\u0091',\n  '\\\\u0092',\n  '\\\\u0093',\n  '\\\\u0094',\n  '\\\\u0095',\n  '\\\\u0096',\n  '\\\\u0097',\n  '\\\\u0098',\n  '\\\\u0099',\n  '\\\\u009A',\n  '\\\\u009B',\n  '\\\\u009C',\n  '\\\\u009D',\n  '\\\\u009E',\n  '\\\\u009F',\n];\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { isNode, QueryDocumentKeys } from './ast.mjs';\nimport { Kind } from './kinds.mjs';\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport const BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n * ```ts\n * const editedAST = visit(ast, {\n *   enter(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: skip visiting this node\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   },\n *   leave(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: no action\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   }\n * });\n * ```\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to three permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind(node) {\n *     // enter the \"Kind\" node\n *   }\n * })\n * ```\n *\n * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind: {\n *     enter(node) {\n *       // enter the \"Kind\" node\n *     }\n *     leave(node) {\n *       // leave the \"Kind\" node\n *     }\n *   }\n * })\n * ```\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n * ```ts\n * visit(ast, {\n *   enter(node) {\n *     // enter any node\n *   },\n *   leave(node) {\n *     // leave any node\n *   }\n * })\n * ```\n */\n\nexport function visit(root, visitor, visitorKeys = QueryDocumentKeys) {\n  const enterLeaveMap = new Map();\n\n  for (const kind of Object.values(Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  /* eslint-disable no-undef-init */\n\n  let stack = undefined;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = undefined;\n  let parent = undefined;\n  const path = [];\n  const ancestors = [];\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node),\n          );\n\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      path.push(key);\n    }\n\n    let result;\n\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n\n      isNode(node) || devAssert(false, `Invalid AST Node: ${inspect(node)}.`);\n      const visitFn = isLeaving\n        ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get === void 0\n          ? void 0\n          : _enterLeaveMap$get.leave\n        : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get2 === void 0\n        ? void 0\n        : _enterLeaveMap$get2.enter;\n      result =\n        visitFn === null || visitFn === void 0\n          ? void 0\n          : visitFn.call(visitor, node, key, parent, path, ancestors);\n\n      if (result === BREAK) {\n        break;\n      }\n\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== undefined) {\n        edits.push([key, result]);\n\n        if (!isLeaving) {\n          if (isNode(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack,\n      };\n      inArray = Array.isArray(node);\n      keys = inArray\n        ? node\n        : (_node$kind = visitorKeys[node.kind]) !== null &&\n          _node$kind !== void 0\n        ? _node$kind\n        : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    // New root\n    return edits[edits.length - 1][1];\n  }\n\n  return root;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  const skipping = new Array(visitors.length).fill(null);\n  const mergedVisitor = Object.create(null);\n\n  for (const kind of Object.values(Kind)) {\n    let hasVisitor = false;\n    const enterList = new Array(visitors.length).fill(undefined);\n    const leaveList = new Array(visitors.length).fill(undefined);\n\n    for (let i = 0; i < visitors.length; ++i) {\n      const { enter, leave } = getEnterLeaveForKind(visitors[i], kind);\n      hasVisitor || (hasVisitor = enter != null || leave != null);\n      enterList[i] = enter;\n      leaveList[i] = leave;\n    }\n\n    if (!hasVisitor) {\n      continue;\n    }\n\n    const mergedEnterLeave = {\n      enter(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _enterList$i;\n\n            const result =\n              (_enterList$i = enterList[i]) === null || _enterList$i === void 0\n                ? void 0\n                : _enterList$i.apply(visitors[i], args);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      },\n\n      leave(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _leaveList$i;\n\n            const result =\n              (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0\n                ? void 0\n                : _leaveList$i.apply(visitors[i], args);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          } else if (skipping[i] === node) {\n            skipping[i] = null;\n          }\n        }\n      },\n    };\n    mergedVisitor[kind] = mergedEnterLeave;\n  }\n\n  return mergedVisitor;\n}\n/**\n * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.\n */\n\nexport function getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n\n  if (typeof kindVisitor === 'object') {\n    // { Kind: { enter() {}, leave() {} } }\n    return kindVisitor;\n  } else if (typeof kindVisitor === 'function') {\n    // { Kind() {} }\n    return {\n      enter: kindVisitor,\n      leave: undefined,\n    };\n  } // { enter() {}, leave() {} }\n\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave,\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n *\n * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17\n */\n\n/* c8 ignore next 8 */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  const { enter, leave } = getEnterLeaveForKind(visitor, kind);\n  return isLeaving ? leave : enter;\n}\n","import { printBlockString } from './blockString.mjs';\nimport { printString } from './printString.mjs';\nimport { visit } from './visitor.mjs';\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, printDocASTReducer);\n}\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value,\n  },\n  Variable: {\n    leave: (node) => '$' + node.name,\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, '\\n\\n'),\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, ' '),\n        ],\n        ' ',\n      ); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    },\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) =>\n      variable +\n      ': ' +\n      type +\n      wrap(' = ', defaultValue) +\n      wrap(' ', join(directives, ' ')),\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections),\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    },\n  },\n  Argument: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) =>\n      '...' + name + wrap(' ', join(directives, ' ')),\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) =>\n      join(\n        [\n          '...',\n          wrap('on ', typeCondition),\n          join(directives, ' '),\n          selectionSet,\n        ],\n        ' ',\n      ),\n  },\n  FragmentDefinition: {\n    leave: (\n      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n      // or removed in the future.\n      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n      selectionSet,\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value,\n  },\n  FloatValue: {\n    leave: ({ value }) => value,\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) =>\n      isBlockString ? printBlockString(value) : printString(value),\n  },\n  BooleanValue: {\n    leave: ({ value }) => (value ? 'true' : 'false'),\n  },\n  NullValue: {\n    leave: () => 'null',\n  },\n  EnumValue: {\n    leave: ({ value }) => value,\n  },\n  ListValue: {\n    leave: ({ values }) => '[' + join(values, ', ') + ']',\n  },\n  ObjectValue: {\n    leave: ({ fields }) => '{' + join(fields, ', ') + '}',\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) =>\n      '@' + name + wrap('(', join(args, ', '), ')'),\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name,\n  },\n  ListType: {\n    leave: ({ type }) => '[' + type + ']',\n  },\n  NonNullType: {\n    leave: ({ type }) => type + '!',\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) =>\n      wrap('', description, '\\n') +\n      join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + ': ' + type,\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') +\n      join(['scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) =>\n      wrap('', description, '\\n') +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      ': ' +\n      type +\n      wrap(' ', join(directives, ' ')),\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) =>\n      wrap('', description, '\\n') +\n      join(\n        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],\n        ' ',\n      ),\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) =>\n      wrap('', description, '\\n') +\n      join(\n        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],\n        ' ',\n      ),\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) =>\n      wrap('', description, '\\n') +\n      join(['enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') + join([name, join(directives, ' ')], ' '),\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(['input', name, join(directives, ' '), block(fields)], ' '),\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) =>\n      wrap('', description, '\\n') +\n      'directive @' +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      (repeatable ? ' repeatable' : '') +\n      ' on ' +\n      join(locations, ' | '),\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) =>\n      join(\n        ['extend schema', join(directives, ' '), block(operationTypes)],\n        ' ',\n      ),\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) =>\n      join(['extend scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) =>\n      join(\n        [\n          'extend union',\n          name,\n          join(directives, ' '),\n          wrap('= ', join(types, ' | ')),\n        ],\n        ' ',\n      ),\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) =>\n      join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) =>\n      join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n  },\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n\n  return (_maybeArray$filter$jo =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.filter((x) => x).join(separator)) !== null &&\n    _maybeArray$filter$jo !== void 0\n    ? _maybeArray$filter$jo\n    : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== ''\n    ? start + maybeString + end\n    : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.some((str) => str.includes('\\n'))) !== null &&\n    _maybeArray$some !== void 0\n    ? _maybeArray$some\n    : false;\n}\n","import { parse, print } from 'graphql';\n/**\n * helpers\n */\nconst extractOperationName = (document) => {\n    let operationName = undefined;\n    const operationDefinitions = document.definitions.filter((definition) => definition.kind === `OperationDefinition`);\n    if (operationDefinitions.length === 1) {\n        operationName = operationDefinitions[0]?.name?.value;\n    }\n    return operationName;\n};\nexport const resolveRequestDocument = (document) => {\n    if (typeof document === `string`) {\n        let operationName = undefined;\n        try {\n            const parsedDocument = parse(document);\n            operationName = extractOperationName(parsedDocument);\n        }\n        catch (err) {\n            // Failed parsing the document, the operationName will be undefined\n        }\n        return { query: document, operationName };\n    }\n    const operationName = extractOperationName(document);\n    return { query: print(document), operationName };\n};\n//# sourceMappingURL=resolveRequestDocument.js.map","export class ClientError extends Error {\n    constructor(response, request) {\n        const message = `${ClientError.extractMessage(response)}: ${JSON.stringify({\n            response,\n            request,\n        })}`;\n        super(message);\n        Object.setPrototypeOf(this, ClientError.prototype);\n        this.response = response;\n        this.request = request;\n        // this is needed as Safari doesn't support .captureStackTrace\n        if (typeof Error.captureStackTrace === `function`) {\n            Error.captureStackTrace(this, ClientError);\n        }\n    }\n    static extractMessage(response) {\n        return response.errors?.[0]?.message ?? `GraphQL Error (Code: ${response.status})`;\n    }\n}\n//# sourceMappingURL=types.js.map","import { defaultJsonSerializer } from './defaultJsonSerializer.js';\nimport { HeadersInstanceToPlainObject, uppercase } from './helpers.js';\nimport { parseBatchRequestArgs, parseRawRequestArgs, parseRawRequestExtendedArgs, parseRequestArgs, parseRequestExtendedArgs, } from './parseArgs.js';\nimport { resolveRequestDocument } from './resolveRequestDocument.js';\nimport { ClientError, } from './types.js';\nimport crossFetch, * as CrossFetch from 'cross-fetch';\n/**\n * Convert the given headers configuration into a plain object.\n */\nconst resolveHeaders = (headers) => {\n    let oHeaders = {};\n    if (headers) {\n        if ((typeof Headers !== `undefined` && headers instanceof Headers) ||\n            (CrossFetch && CrossFetch.Headers && headers instanceof CrossFetch.Headers)) {\n            oHeaders = HeadersInstanceToPlainObject(headers);\n        }\n        else if (Array.isArray(headers)) {\n            headers.forEach(([name, value]) => {\n                if (name && value !== undefined) {\n                    oHeaders[name] = value;\n                }\n            });\n        }\n        else {\n            oHeaders = headers;\n        }\n    }\n    return oHeaders;\n};\n/**\n * Clean a GraphQL document to send it via a GET query\n */\nconst cleanQuery = (str) => str.replace(/([\\s,]|#[^\\n\\r]+)+/g, ` `).trim();\n/**\n * Create query string for GraphQL request\n */\nconst buildRequestConfig = (params) => {\n    if (!Array.isArray(params.query)) {\n        const params_ = params;\n        const search = [`query=${encodeURIComponent(cleanQuery(params_.query))}`];\n        if (params.variables) {\n            search.push(`variables=${encodeURIComponent(params_.jsonSerializer.stringify(params_.variables))}`);\n        }\n        if (params_.operationName) {\n            search.push(`operationName=${encodeURIComponent(params_.operationName)}`);\n        }\n        return search.join(`&`);\n    }\n    if (typeof params.variables !== `undefined` && !Array.isArray(params.variables)) {\n        throw new Error(`Cannot create query with given variable type, array expected`);\n    }\n    // Batch support\n    const params_ = params;\n    const payload = params.query.reduce((acc, currentQuery, index) => {\n        acc.push({\n            query: cleanQuery(currentQuery),\n            variables: params_.variables ? params_.jsonSerializer.stringify(params_.variables[index]) : undefined,\n        });\n        return acc;\n    }, []);\n    return `query=${encodeURIComponent(params_.jsonSerializer.stringify(payload))}`;\n};\nconst createHttpMethodFetcher = (method) => async (params) => {\n    const { url, query, variables, operationName, fetch, fetchOptions, middleware } = params;\n    const headers = { ...params.headers };\n    let queryParams = ``;\n    let body = undefined;\n    if (method === `POST`) {\n        body = createRequestBody(query, variables, operationName, fetchOptions.jsonSerializer);\n        if (typeof body === `string`) {\n            // @ts-expect-error todo\n            headers[`Content-Type`] = `application/json`;\n        }\n    }\n    else {\n        // @ts-expect-error todo needs ADT for TS to understand the different states\n        queryParams = buildRequestConfig({\n            query,\n            variables,\n            operationName,\n            jsonSerializer: fetchOptions.jsonSerializer ?? defaultJsonSerializer,\n        });\n    }\n    const init = {\n        method,\n        headers,\n        body,\n        ...fetchOptions,\n    };\n    let urlResolved = url;\n    let initResolved = init;\n    if (middleware) {\n        const result = await Promise.resolve(middleware({ ...init, url, operationName, variables }));\n        const { url: urlNew, ...initNew } = result;\n        urlResolved = urlNew;\n        initResolved = initNew;\n    }\n    if (queryParams) {\n        urlResolved = `${urlResolved}?${queryParams}`;\n    }\n    return await fetch(urlResolved, initResolved);\n};\n/**\n * GraphQL Client.\n */\nclass GraphQLClient {\n    constructor(url, requestConfig = {}) {\n        this.url = url;\n        this.requestConfig = requestConfig;\n        /**\n         * Send a GraphQL query to the server.\n         */\n        this.rawRequest = async (...args) => {\n            const [queryOrOptions, variables, requestHeaders] = args;\n            const rawRequestOptions = parseRawRequestArgs(queryOrOptions, variables, requestHeaders);\n            const { headers, fetch = crossFetch, method = `POST`, requestMiddleware, responseMiddleware, ...fetchOptions } = this.requestConfig;\n            const { url } = this;\n            if (rawRequestOptions.signal !== undefined) {\n                fetchOptions.signal = rawRequestOptions.signal;\n            }\n            const { operationName } = resolveRequestDocument(rawRequestOptions.query);\n            return makeRequest({\n                url,\n                query: rawRequestOptions.query,\n                variables: rawRequestOptions.variables,\n                headers: {\n                    ...resolveHeaders(callOrIdentity(headers)),\n                    ...resolveHeaders(rawRequestOptions.requestHeaders),\n                },\n                operationName,\n                fetch,\n                method,\n                fetchOptions,\n                middleware: requestMiddleware,\n            })\n                .then((response) => {\n                if (responseMiddleware) {\n                    responseMiddleware(response);\n                }\n                return response;\n            })\n                .catch((error) => {\n                if (responseMiddleware) {\n                    responseMiddleware(error);\n                }\n                throw error;\n            });\n        };\n    }\n    async request(documentOrOptions, ...variablesAndRequestHeaders) {\n        const [variables, requestHeaders] = variablesAndRequestHeaders;\n        const requestOptions = parseRequestArgs(documentOrOptions, variables, requestHeaders);\n        const { headers, fetch = crossFetch, method = `POST`, requestMiddleware, responseMiddleware, ...fetchOptions } = this.requestConfig;\n        const { url } = this;\n        if (requestOptions.signal !== undefined) {\n            fetchOptions.signal = requestOptions.signal;\n        }\n        const { query, operationName } = resolveRequestDocument(requestOptions.document);\n        return makeRequest({\n            url,\n            query,\n            variables: requestOptions.variables,\n            headers: {\n                ...resolveHeaders(callOrIdentity(headers)),\n                ...resolveHeaders(requestOptions.requestHeaders),\n            },\n            operationName,\n            fetch,\n            method,\n            fetchOptions,\n            middleware: requestMiddleware,\n        })\n            .then((response) => {\n            if (responseMiddleware) {\n                responseMiddleware(response);\n            }\n            return response.data;\n        })\n            .catch((error) => {\n            if (responseMiddleware) {\n                responseMiddleware(error);\n            }\n            throw error;\n        });\n    }\n    // prettier-ignore\n    batchRequests(documentsOrOptions, requestHeaders) {\n        const batchRequestOptions = parseBatchRequestArgs(documentsOrOptions, requestHeaders);\n        const { headers, ...fetchOptions } = this.requestConfig;\n        if (batchRequestOptions.signal !== undefined) {\n            fetchOptions.signal = batchRequestOptions.signal;\n        }\n        const queries = batchRequestOptions.documents.map(({ document }) => resolveRequestDocument(document).query);\n        const variables = batchRequestOptions.documents.map(({ variables }) => variables);\n        return makeRequest({\n            url: this.url,\n            query: queries,\n            // @ts-expect-error TODO reconcile batch variables into system.\n            variables,\n            headers: {\n                ...resolveHeaders(callOrIdentity(headers)),\n                ...resolveHeaders(batchRequestOptions.requestHeaders),\n            },\n            operationName: undefined,\n            fetch: this.requestConfig.fetch ?? crossFetch,\n            method: this.requestConfig.method || `POST`,\n            fetchOptions,\n            middleware: this.requestConfig.requestMiddleware,\n        })\n            .then((response) => {\n            if (this.requestConfig.responseMiddleware) {\n                this.requestConfig.responseMiddleware(response);\n            }\n            return response.data;\n        })\n            .catch((error) => {\n            if (this.requestConfig.responseMiddleware) {\n                this.requestConfig.responseMiddleware(error);\n            }\n            throw error;\n        });\n    }\n    setHeaders(headers) {\n        this.requestConfig.headers = headers;\n        return this;\n    }\n    /**\n     * Attach a header to the client. All subsequent requests will have this header.\n     */\n    setHeader(key, value) {\n        const { headers } = this.requestConfig;\n        if (headers) {\n            // todo what if headers is in nested array form... ?\n            //@ts-expect-error todo\n            headers[key] = value;\n        }\n        else {\n            this.requestConfig.headers = { [key]: value };\n        }\n        return this;\n    }\n    /**\n     * Change the client endpoint. All subsequent requests will send to this endpoint.\n     */\n    setEndpoint(value) {\n        this.url = value;\n        return this;\n    }\n}\nconst makeRequest = async (params) => {\n    const { query, variables, fetchOptions } = params;\n    const fetcher = createHttpMethodFetcher(uppercase(params.method ?? `post`));\n    const isBatchingQuery = Array.isArray(params.query);\n    const response = await fetcher(params);\n    const result = await getResult(response, fetchOptions.jsonSerializer ?? defaultJsonSerializer);\n    const successfullyReceivedData = Array.isArray(result)\n        ? !result.some(({ data }) => !data)\n        : Boolean(result.data);\n    const successfullyPassedErrorPolicy = Array.isArray(result) ||\n        !result.errors ||\n        (Array.isArray(result.errors) && !result.errors.length) ||\n        fetchOptions.errorPolicy === `all` ||\n        fetchOptions.errorPolicy === `ignore`;\n    if (response.ok && successfullyPassedErrorPolicy && successfullyReceivedData) {\n        // @ts-expect-error TODO fixme\n        const { errors: _, ...rest } = Array.isArray(result) ? result : result;\n        const data = fetchOptions.errorPolicy === `ignore` ? rest : result;\n        const dataEnvelope = isBatchingQuery ? { data } : data;\n        // @ts-expect-error TODO\n        return {\n            ...dataEnvelope,\n            headers: response.headers,\n            status: response.status,\n        };\n    }\n    else {\n        const errorResult = typeof result === `string`\n            ? {\n                error: result,\n            }\n            : result;\n        throw new ClientError(\n        // @ts-expect-error TODO\n        { ...errorResult, status: response.status, headers: response.headers }, { query, variables });\n    }\n};\n/**\n * Send a GraphQL Query to the GraphQL server for execution.\n */\nconst rawRequest = async (...args) => {\n    const [urlOrOptions, query, ...variablesAndRequestHeaders] = args;\n    const requestOptions = parseRawRequestExtendedArgs(urlOrOptions, query, ...variablesAndRequestHeaders);\n    const client = new GraphQLClient(requestOptions.url);\n    return client.rawRequest({\n        ...requestOptions,\n    });\n};\n// prettier-ignore\n// eslint-disable-next-line\nasync function request(urlOrOptions, document, ...variablesAndRequestHeaders) {\n    const requestOptions = parseRequestExtendedArgs(urlOrOptions, document, ...variablesAndRequestHeaders);\n    const client = new GraphQLClient(requestOptions.url);\n    return client.request({\n        ...requestOptions,\n    });\n}\n/**\n * Send a batch of GraphQL Document to the GraphQL server for execution.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await batchRequests('https://foo.bar/graphql', [\n * {\n *  query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * },\n * {\n *   query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * }])\n *\n * // You can also pass a GraphQL DocumentNode as query. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await batchRequests('https://foo.bar/graphql', [{ query: gql`...` }])\n * ```\n */\nconst batchRequests = async (...args) => {\n    const params = parseBatchRequestsArgsExtended(args);\n    const client = new GraphQLClient(params.url);\n    return client.batchRequests(params);\n};\nconst parseBatchRequestsArgsExtended = (args) => {\n    if (args.length === 1) {\n        return args[0];\n    }\n    else {\n        return {\n            url: args[0],\n            documents: args[1],\n            requestHeaders: args[2],\n            signal: undefined,\n        };\n    }\n};\nconst createRequestBody = (query, variables, operationName, jsonSerializer) => {\n    const jsonSerializer_ = jsonSerializer ?? defaultJsonSerializer;\n    if (!Array.isArray(query)) {\n        return jsonSerializer_.stringify({ query, variables, operationName });\n    }\n    if (typeof variables !== `undefined` && !Array.isArray(variables)) {\n        throw new Error(`Cannot create request body with given variable type, array expected`);\n    }\n    // Batch support\n    const payload = query.reduce((acc, currentQuery, index) => {\n        acc.push({ query: currentQuery, variables: variables ? variables[index] : undefined });\n        return acc;\n    }, []);\n    return jsonSerializer_.stringify(payload);\n};\nconst getResult = async (response, jsonSerializer) => {\n    let contentType;\n    response.headers.forEach((value, key) => {\n        if (key.toLowerCase() === `content-type`) {\n            contentType = value;\n        }\n    });\n    if (contentType &&\n        (contentType.toLowerCase().startsWith(`application/json`) ||\n            contentType.toLowerCase().startsWith(`application/graphql+json`) ||\n            contentType.toLowerCase().startsWith(`application/graphql-response+json`))) {\n        return jsonSerializer.parse(await response.text());\n    }\n    else {\n        return response.text();\n    }\n};\nconst callOrIdentity = (value) => {\n    return typeof value === `function` ? value() : value;\n};\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n * ```\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n * ```\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\nexport const gql = (chunks, ...variables) => {\n    return chunks.reduce((acc, chunk, index) => `${acc}${chunk}${index in variables ? String(variables[index]) : ``}`, ``);\n};\nexport { GraphQLWebSocketClient } from './graphql-ws.js';\nexport { resolveRequestDocument } from './resolveRequestDocument.js';\nexport { batchRequests, ClientError, GraphQLClient, rawRequest, request, };\nexport default request;\n//# sourceMappingURL=index.js.map","export const uppercase = (str) => str.toUpperCase();\n/**\n * Convert Headers instance into regular object\n */\nexport const HeadersInstanceToPlainObject = (headers) => {\n    const o = {};\n    headers.forEach((v, k) => {\n        o[k] = v;\n    });\n    return o;\n};\n//# sourceMappingURL=helpers.js.map","export const parseRequestArgs = (documentOrOptions, variables, requestHeaders) => {\n    return documentOrOptions.document\n        ? documentOrOptions\n        : {\n            document: documentOrOptions,\n            variables: variables,\n            requestHeaders: requestHeaders,\n            signal: undefined,\n        };\n};\nexport const parseRawRequestArgs = (queryOrOptions, variables, requestHeaders) => {\n    return queryOrOptions.query\n        ? queryOrOptions\n        : {\n            query: queryOrOptions,\n            variables: variables,\n            requestHeaders: requestHeaders,\n            signal: undefined,\n        };\n};\nexport const parseBatchRequestArgs = (documentsOrOptions, requestHeaders) => {\n    return documentsOrOptions.documents\n        ? documentsOrOptions\n        : {\n            documents: documentsOrOptions,\n            requestHeaders: requestHeaders,\n            signal: undefined,\n        };\n};\nexport const parseRequestExtendedArgs = (urlOrOptions, document, ...variablesAndRequestHeaders) => {\n    const [variables, requestHeaders] = variablesAndRequestHeaders;\n    return urlOrOptions.document\n        ? urlOrOptions\n        : {\n            url: urlOrOptions,\n            document: document,\n            variables,\n            requestHeaders,\n            signal: undefined,\n        };\n};\nexport const parseRawRequestExtendedArgs = (urlOrOptions, query, ...variablesAndRequestHeaders) => {\n    const [variables, requestHeaders] = variablesAndRequestHeaders;\n    return urlOrOptions.query\n        ? urlOrOptions\n        : {\n            url: urlOrOptions,\n            query: query,\n            variables,\n            requestHeaders,\n            signal: undefined,\n        };\n};\n//# sourceMappingURL=parseArgs.js.map","/** @private */\nexport function extendedTypeof(val) {\n    if (val === null) {\n        return 'null';\n    }\n    if (Array.isArray(val)) {\n        return 'array';\n    }\n    return typeof val;\n}\n/** @private */\nexport function isObject(val) {\n    return extendedTypeof(val) === 'object';\n}\n/** @private */\nexport function isAsyncIterable(val) {\n    return typeof Object(val)[Symbol.asyncIterator] === 'function';\n}\n/** @private */\nexport function isAsyncGenerator(val) {\n    return (isObject(val) &&\n        typeof Object(val)[Symbol.asyncIterator] === 'function' &&\n        typeof val.return === 'function'\n    // for lazy ones, we only need the return anyway\n    // typeof val.throw === 'function' &&\n    // typeof val.next === 'function'\n    );\n}\n/** @private */\nexport function areGraphQLErrors(obj) {\n    return (Array.isArray(obj) &&\n        // must be at least one error\n        obj.length > 0 &&\n        // error has at least a message\n        obj.every((ob) => 'message' in ob));\n}\n/**\n * Limits the WebSocket close event reason to not exceed a length of one frame.\n * Reference: https://datatracker.ietf.org/doc/html/rfc6455#section-5.2.\n *\n * @private\n */\nexport function limitCloseReason(reason, whenTooLong) {\n    return reason.length < 124 ? reason : whenTooLong;\n}\n","/**\n *\n * common\n *\n */\nimport { areGraphQLErrors, extendedTypeof, isObject } from './utils.mjs';\n/**\n * The WebSocket sub-protocol used for the [GraphQL over WebSocket Protocol](https://github.com/graphql/graphql-over-http/blob/main/rfcs/GraphQLOverWebSocket.md).\n *\n * @category Common\n */\nexport const GRAPHQL_TRANSPORT_WS_PROTOCOL = 'graphql-transport-ws';\n/**\n * The deprecated subprotocol used by [subscriptions-transport-ws](https://github.com/apollographql/subscriptions-transport-ws).\n *\n * @private\n */\nexport const DEPRECATED_GRAPHQL_WS_PROTOCOL = 'graphql-ws';\n/**\n * `graphql-ws` expected and standard close codes of the [GraphQL over WebSocket Protocol](https://github.com/graphql/graphql-over-http/blob/main/rfcs/GraphQLOverWebSocket.md).\n *\n * @category Common\n */\nexport var CloseCode;\n(function (CloseCode) {\n    CloseCode[CloseCode[\"InternalServerError\"] = 4500] = \"InternalServerError\";\n    CloseCode[CloseCode[\"InternalClientError\"] = 4005] = \"InternalClientError\";\n    CloseCode[CloseCode[\"BadRequest\"] = 4400] = \"BadRequest\";\n    CloseCode[CloseCode[\"BadResponse\"] = 4004] = \"BadResponse\";\n    /** Tried subscribing before connect ack */\n    CloseCode[CloseCode[\"Unauthorized\"] = 4401] = \"Unauthorized\";\n    CloseCode[CloseCode[\"Forbidden\"] = 4403] = \"Forbidden\";\n    CloseCode[CloseCode[\"SubprotocolNotAcceptable\"] = 4406] = \"SubprotocolNotAcceptable\";\n    CloseCode[CloseCode[\"ConnectionInitialisationTimeout\"] = 4408] = \"ConnectionInitialisationTimeout\";\n    CloseCode[CloseCode[\"ConnectionAcknowledgementTimeout\"] = 4504] = \"ConnectionAcknowledgementTimeout\";\n    /** Subscriber distinction is very important */\n    CloseCode[CloseCode[\"SubscriberAlreadyExists\"] = 4409] = \"SubscriberAlreadyExists\";\n    CloseCode[CloseCode[\"TooManyInitialisationRequests\"] = 4429] = \"TooManyInitialisationRequests\";\n})(CloseCode || (CloseCode = {}));\n/**\n * Types of messages allowed to be sent by the client/server over the WS protocol.\n *\n * @category Common\n */\nexport var MessageType;\n(function (MessageType) {\n    MessageType[\"ConnectionInit\"] = \"connection_init\";\n    MessageType[\"ConnectionAck\"] = \"connection_ack\";\n    MessageType[\"Ping\"] = \"ping\";\n    MessageType[\"Pong\"] = \"pong\";\n    MessageType[\"Subscribe\"] = \"subscribe\";\n    MessageType[\"Next\"] = \"next\";\n    MessageType[\"Error\"] = \"error\";\n    MessageType[\"Complete\"] = \"complete\";\n})(MessageType || (MessageType = {}));\n/**\n * Validates the message against the GraphQL over WebSocket Protocol.\n *\n * Invalid messages will throw descriptive errors.\n *\n * @category Common\n */\nexport function validateMessage(val) {\n    if (!isObject(val)) {\n        throw new Error(`Message is expected to be an object, but got ${extendedTypeof(val)}`);\n    }\n    if (!val.type) {\n        throw new Error(`Message is missing the 'type' property`);\n    }\n    if (typeof val.type !== 'string') {\n        throw new Error(`Message is expects the 'type' property to be a string, but got ${extendedTypeof(val.type)}`);\n    }\n    switch (val.type) {\n        case MessageType.ConnectionInit:\n        case MessageType.ConnectionAck:\n        case MessageType.Ping:\n        case MessageType.Pong: {\n            if (val.payload != null && !isObject(val.payload)) {\n                throw new Error(`\"${val.type}\" message expects the 'payload' property to be an object or nullish or missing, but got \"${val.payload}\"`);\n            }\n            break;\n        }\n        case MessageType.Subscribe: {\n            if (typeof val.id !== 'string') {\n                throw new Error(`\"${val.type}\" message expects the 'id' property to be a string, but got ${extendedTypeof(val.id)}`);\n            }\n            if (!val.id) {\n                throw new Error(`\"${val.type}\" message requires a non-empty 'id' property`);\n            }\n            if (!isObject(val.payload)) {\n                throw new Error(`\"${val.type}\" message expects the 'payload' property to be an object, but got ${extendedTypeof(val.payload)}`);\n            }\n            if (typeof val.payload.query !== 'string') {\n                throw new Error(`\"${val.type}\" message payload expects the 'query' property to be a string, but got ${extendedTypeof(val.payload.query)}`);\n            }\n            if (val.payload.variables != null && !isObject(val.payload.variables)) {\n                throw new Error(`\"${val.type}\" message payload expects the 'variables' property to be a an object or nullish or missing, but got ${extendedTypeof(val.payload.variables)}`);\n            }\n            if (val.payload.operationName != null &&\n                extendedTypeof(val.payload.operationName) !== 'string') {\n                throw new Error(`\"${val.type}\" message payload expects the 'operationName' property to be a string or nullish or missing, but got ${extendedTypeof(val.payload.operationName)}`);\n            }\n            if (val.payload.extensions != null && !isObject(val.payload.extensions)) {\n                throw new Error(`\"${val.type}\" message payload expects the 'extensions' property to be a an object or nullish or missing, but got ${extendedTypeof(val.payload.extensions)}`);\n            }\n            break;\n        }\n        case MessageType.Next: {\n            if (typeof val.id !== 'string') {\n                throw new Error(`\"${val.type}\" message expects the 'id' property to be a string, but got ${extendedTypeof(val.id)}`);\n            }\n            if (!val.id) {\n                throw new Error(`\"${val.type}\" message requires a non-empty 'id' property`);\n            }\n            if (!isObject(val.payload)) {\n                throw new Error(`\"${val.type}\" message expects the 'payload' property to be an object, but got ${extendedTypeof(val.payload)}`);\n            }\n            break;\n        }\n        case MessageType.Error: {\n            if (typeof val.id !== 'string') {\n                throw new Error(`\"${val.type}\" message expects the 'id' property to be a string, but got ${extendedTypeof(val.id)}`);\n            }\n            if (!val.id) {\n                throw new Error(`\"${val.type}\" message requires a non-empty 'id' property`);\n            }\n            if (!areGraphQLErrors(val.payload)) {\n                throw new Error(`\"${val.type}\" message expects the 'payload' property to be an array of GraphQL errors, but got ${JSON.stringify(val.payload)}`);\n            }\n            break;\n        }\n        case MessageType.Complete: {\n            if (typeof val.id !== 'string') {\n                throw new Error(`\"${val.type}\" message expects the 'id' property to be a string, but got ${extendedTypeof(val.id)}`);\n            }\n            if (!val.id) {\n                throw new Error(`\"${val.type}\" message requires a non-empty 'id' property`);\n            }\n            break;\n        }\n        default:\n            throw new Error(`Invalid message 'type' property \"${val.type}\"`);\n    }\n    return val;\n}\n/**\n * Checks if the provided value is a valid GraphQL over WebSocket message.\n *\n * @deprecated Use `validateMessage` instead.\n *\n * @category Common\n */\nexport function isMessage(val) {\n    try {\n        validateMessage(val);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n/**\n * Parses the raw websocket message data to a valid message.\n *\n * @category Common\n */\nexport function parseMessage(data, reviver) {\n    return validateMessage(typeof data === 'string' ? JSON.parse(data, reviver) : data);\n}\n/**\n * Stringifies a valid message ready to be sent through the socket.\n *\n * @category Common\n */\nexport function stringifyMessage(msg, replacer) {\n    validateMessage(msg);\n    return JSON.stringify(msg, replacer);\n}\n","/**\n *\n * client\n *\n */\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nimport { GRAPHQL_TRANSPORT_WS_PROTOCOL, CloseCode, MessageType, parseMessage, stringifyMessage, } from './common.mjs';\nimport { isObject, limitCloseReason } from './utils.mjs';\n/** This file is the entry point for browsers, re-export common elements. */\nexport * from './common.mjs';\n/**\n * Creates a disposable GraphQL over WebSocket client.\n *\n * @category Client\n */\nexport function createClient(options) {\n    const { url, connectionParams, lazy = true, onNonLazyError = console.error, lazyCloseTimeout: lazyCloseTimeoutMs = 0, keepAlive = 0, disablePong, connectionAckWaitTimeout = 0, retryAttempts = 5, retryWait = async function randomisedExponentialBackoff(retries) {\n        let retryDelay = 1000; // start with 1s delay\n        for (let i = 0; i < retries; i++) {\n            retryDelay *= 2;\n        }\n        await new Promise((resolve) => setTimeout(resolve, retryDelay +\n            // add random timeout from 300ms to 3s\n            Math.floor(Math.random() * (3000 - 300) + 300)));\n    }, shouldRetry = isLikeCloseEvent, isFatalConnectionProblem, on, webSocketImpl, \n    /**\n     * Generates a v4 UUID to be used as the ID using `Math`\n     * as the random number generator. Supply your own generator\n     * in case you need more uniqueness.\n     *\n     * Reference: https://gist.github.com/jed/982883\n     */\n    generateID = function generateUUID() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n            const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }, jsonMessageReplacer: replacer, jsonMessageReviver: reviver, } = options;\n    let ws;\n    if (webSocketImpl) {\n        if (!isWebSocket(webSocketImpl)) {\n            throw new Error('Invalid WebSocket implementation provided');\n        }\n        ws = webSocketImpl;\n    }\n    else if (typeof WebSocket !== 'undefined') {\n        ws = WebSocket;\n    }\n    else if (typeof global !== 'undefined') {\n        ws =\n            global.WebSocket ||\n                // @ts-expect-error: Support more browsers\n                global.MozWebSocket;\n    }\n    else if (typeof window !== 'undefined') {\n        ws =\n            window.WebSocket ||\n                // @ts-expect-error: Support more browsers\n                window.MozWebSocket;\n    }\n    if (!ws)\n        throw new Error(\"WebSocket implementation missing; on Node you can `import WebSocket from 'ws';` and pass `webSocketImpl: WebSocket` to `createClient`\");\n    const WebSocketImpl = ws;\n    // websocket status emitter, subscriptions are handled differently\n    const emitter = (() => {\n        const message = (() => {\n            const listeners = {};\n            return {\n                on(id, listener) {\n                    listeners[id] = listener;\n                    return () => {\n                        delete listeners[id];\n                    };\n                },\n                emit(message) {\n                    var _a;\n                    if ('id' in message)\n                        (_a = listeners[message.id]) === null || _a === void 0 ? void 0 : _a.call(listeners, message);\n                },\n            };\n        })();\n        const listeners = {\n            connecting: (on === null || on === void 0 ? void 0 : on.connecting) ? [on.connecting] : [],\n            opened: (on === null || on === void 0 ? void 0 : on.opened) ? [on.opened] : [],\n            connected: (on === null || on === void 0 ? void 0 : on.connected) ? [on.connected] : [],\n            ping: (on === null || on === void 0 ? void 0 : on.ping) ? [on.ping] : [],\n            pong: (on === null || on === void 0 ? void 0 : on.pong) ? [on.pong] : [],\n            message: (on === null || on === void 0 ? void 0 : on.message) ? [message.emit, on.message] : [message.emit],\n            closed: (on === null || on === void 0 ? void 0 : on.closed) ? [on.closed] : [],\n            error: (on === null || on === void 0 ? void 0 : on.error) ? [on.error] : [],\n        };\n        return {\n            onMessage: message.on,\n            on(event, listener) {\n                const l = listeners[event];\n                l.push(listener);\n                return () => {\n                    l.splice(l.indexOf(listener), 1);\n                };\n            },\n            emit(event, ...args) {\n                // we copy the listeners so that unlistens dont \"pull the rug under our feet\"\n                for (const listener of [...listeners[event]]) {\n                    // @ts-expect-error: The args should fit\n                    listener(...args);\n                }\n            },\n        };\n    })();\n    // invokes the callback either when an error or closed event is emitted,\n    // first one that gets called prevails, other emissions are ignored\n    function errorOrClosed(cb) {\n        const listening = [\n            // errors are fatal and more critical than close events, throw them first\n            emitter.on('error', (err) => {\n                listening.forEach((unlisten) => unlisten());\n                cb(err);\n            }),\n            // closes can be graceful and not fatal, throw them second (if error didnt throw)\n            emitter.on('closed', (event) => {\n                listening.forEach((unlisten) => unlisten());\n                cb(event);\n            }),\n        ];\n    }\n    let connecting, locks = 0, lazyCloseTimeout, retrying = false, retries = 0, disposed = false;\n    async function connect() {\n        // clear the lazy close timeout immediatelly so that close gets debounced\n        // see: https://github.com/enisdenjo/graphql-ws/issues/388\n        clearTimeout(lazyCloseTimeout);\n        const [socket, throwOnClose] = await (connecting !== null && connecting !== void 0 ? connecting : (connecting = new Promise((connected, denied) => (async () => {\n            if (retrying) {\n                await retryWait(retries);\n                // subscriptions might complete while waiting for retry\n                if (!locks) {\n                    connecting = undefined;\n                    return denied({ code: 1000, reason: 'All Subscriptions Gone' });\n                }\n                retries++;\n            }\n            emitter.emit('connecting', retrying);\n            const socket = new WebSocketImpl(typeof url === 'function' ? await url() : url, GRAPHQL_TRANSPORT_WS_PROTOCOL);\n            let connectionAckTimeout, queuedPing;\n            function enqueuePing() {\n                if (isFinite(keepAlive) && keepAlive > 0) {\n                    clearTimeout(queuedPing); // in case where a pong was received before a ping (this is valid behaviour)\n                    queuedPing = setTimeout(() => {\n                        if (socket.readyState === WebSocketImpl.OPEN) {\n                            socket.send(stringifyMessage({ type: MessageType.Ping }));\n                            emitter.emit('ping', false, undefined);\n                        }\n                    }, keepAlive);\n                }\n            }\n            errorOrClosed((errOrEvent) => {\n                connecting = undefined;\n                clearTimeout(connectionAckTimeout);\n                clearTimeout(queuedPing);\n                denied(errOrEvent);\n                if (errOrEvent instanceof TerminatedCloseEvent) {\n                    socket.close(4499, 'Terminated'); // close event is artificial and emitted manually, see `Client.terminate()` below\n                    socket.onerror = null;\n                    socket.onclose = null;\n                }\n            });\n            socket.onerror = (err) => emitter.emit('error', err);\n            socket.onclose = (event) => emitter.emit('closed', event);\n            socket.onopen = async () => {\n                try {\n                    emitter.emit('opened', socket);\n                    const payload = typeof connectionParams === 'function'\n                        ? await connectionParams()\n                        : connectionParams;\n                    // connectionParams might take too long causing the server to kick off the client\n                    // the necessary error/close event is already reported - simply stop execution\n                    if (socket.readyState !== WebSocketImpl.OPEN)\n                        return;\n                    socket.send(stringifyMessage(payload\n                        ? {\n                            type: MessageType.ConnectionInit,\n                            payload,\n                        }\n                        : {\n                            type: MessageType.ConnectionInit,\n                            // payload is completely absent if not provided\n                        }, replacer));\n                    if (isFinite(connectionAckWaitTimeout) &&\n                        connectionAckWaitTimeout > 0) {\n                        connectionAckTimeout = setTimeout(() => {\n                            socket.close(CloseCode.ConnectionAcknowledgementTimeout, 'Connection acknowledgement timeout');\n                        }, connectionAckWaitTimeout);\n                    }\n                    enqueuePing(); // enqueue ping (noop if disabled)\n                }\n                catch (err) {\n                    emitter.emit('error', err);\n                    socket.close(CloseCode.InternalClientError, limitCloseReason(err instanceof Error ? err.message : new Error(err).message, 'Internal client error'));\n                }\n            };\n            let acknowledged = false;\n            socket.onmessage = ({ data }) => {\n                try {\n                    const message = parseMessage(data, reviver);\n                    emitter.emit('message', message);\n                    if (message.type === 'ping' || message.type === 'pong') {\n                        emitter.emit(message.type, true, message.payload); // received\n                        if (message.type === 'pong') {\n                            enqueuePing(); // enqueue next ping (noop if disabled)\n                        }\n                        else if (!disablePong) {\n                            // respond with pong on ping\n                            socket.send(stringifyMessage(message.payload\n                                ? {\n                                    type: MessageType.Pong,\n                                    payload: message.payload,\n                                }\n                                : {\n                                    type: MessageType.Pong,\n                                    // payload is completely absent if not provided\n                                }));\n                            emitter.emit('pong', false, message.payload);\n                        }\n                        return; // ping and pongs can be received whenever\n                    }\n                    if (acknowledged)\n                        return; // already connected and acknowledged\n                    if (message.type !== MessageType.ConnectionAck)\n                        throw new Error(`First message cannot be of type ${message.type}`);\n                    clearTimeout(connectionAckTimeout);\n                    acknowledged = true;\n                    emitter.emit('connected', socket, message.payload, retrying); // connected = socket opened + acknowledged\n                    retrying = false; // future lazy connects are not retries\n                    retries = 0; // reset the retries on connect\n                    connected([\n                        socket,\n                        new Promise((_, reject) => errorOrClosed(reject)),\n                    ]);\n                }\n                catch (err) {\n                    socket.onmessage = null; // stop reading messages as soon as reading breaks once\n                    emitter.emit('error', err);\n                    socket.close(CloseCode.BadResponse, limitCloseReason(err instanceof Error ? err.message : new Error(err).message, 'Bad response'));\n                }\n            };\n        })())));\n        // if the provided socket is in a closing state, wait for the throw on close\n        if (socket.readyState === WebSocketImpl.CLOSING)\n            await throwOnClose;\n        let release = () => {\n            // releases this connection\n        };\n        const released = new Promise((resolve) => (release = resolve));\n        return [\n            socket,\n            release,\n            Promise.race([\n                // wait for\n                released.then(() => {\n                    if (!locks) {\n                        // and if no more locks are present, complete the connection\n                        const complete = () => socket.close(1000, 'Normal Closure');\n                        if (isFinite(lazyCloseTimeoutMs) && lazyCloseTimeoutMs > 0) {\n                            // if the keepalive is set, allow for the specified calmdown time and\n                            // then complete if the socket is still open.\n                            lazyCloseTimeout = setTimeout(() => {\n                                if (socket.readyState === WebSocketImpl.OPEN)\n                                    complete();\n                            }, lazyCloseTimeoutMs);\n                        }\n                        else {\n                            // otherwise complete immediately\n                            complete();\n                        }\n                    }\n                }),\n                // or\n                throwOnClose,\n            ]),\n        ];\n    }\n    /**\n     * Checks the `connect` problem and evaluates if the client should retry.\n     */\n    function shouldRetryConnectOrThrow(errOrCloseEvent) {\n        // some close codes are worth reporting immediately\n        if (isLikeCloseEvent(errOrCloseEvent) &&\n            (isFatalInternalCloseCode(errOrCloseEvent.code) ||\n                [\n                    CloseCode.InternalServerError,\n                    CloseCode.InternalClientError,\n                    CloseCode.BadRequest,\n                    CloseCode.BadResponse,\n                    CloseCode.Unauthorized,\n                    // CloseCode.Forbidden, might grant access out after retry\n                    CloseCode.SubprotocolNotAcceptable,\n                    // CloseCode.ConnectionInitialisationTimeout, might not time out after retry\n                    // CloseCode.ConnectionAcknowledgementTimeout, might not time out after retry\n                    CloseCode.SubscriberAlreadyExists,\n                    CloseCode.TooManyInitialisationRequests,\n                    // 4499, // Terminated, probably because the socket froze, we want to retry\n                ].includes(errOrCloseEvent.code)))\n            throw errOrCloseEvent;\n        // client was disposed, no retries should proceed regardless\n        if (disposed)\n            return false;\n        // normal closure (possibly all subscriptions have completed)\n        // if no locks were acquired in the meantime, shouldnt try again\n        if (isLikeCloseEvent(errOrCloseEvent) && errOrCloseEvent.code === 1000)\n            return locks > 0;\n        // retries are not allowed or we tried to many times, report error\n        if (!retryAttempts || retries >= retryAttempts)\n            throw errOrCloseEvent;\n        // throw non-retryable connection problems\n        if (!shouldRetry(errOrCloseEvent))\n            throw errOrCloseEvent;\n        // @deprecated throw fatal connection problems immediately\n        if (isFatalConnectionProblem === null || isFatalConnectionProblem === void 0 ? void 0 : isFatalConnectionProblem(errOrCloseEvent))\n            throw errOrCloseEvent;\n        // looks good, start retrying\n        return (retrying = true);\n    }\n    // in non-lazy (hot?) mode always hold one connection lock to persist the socket\n    if (!lazy) {\n        (async () => {\n            locks++;\n            for (;;) {\n                try {\n                    const [, , throwOnClose] = await connect();\n                    await throwOnClose; // will always throw because releaser is not used\n                }\n                catch (errOrCloseEvent) {\n                    try {\n                        if (!shouldRetryConnectOrThrow(errOrCloseEvent))\n                            return;\n                    }\n                    catch (errOrCloseEvent) {\n                        // report thrown error, no further retries\n                        return onNonLazyError === null || onNonLazyError === void 0 ? void 0 : onNonLazyError(errOrCloseEvent);\n                    }\n                }\n            }\n        })();\n    }\n    function subscribe(payload, sink) {\n        const id = generateID(payload);\n        let done = false, errored = false, releaser = () => {\n            // for handling completions before connect\n            locks--;\n            done = true;\n        };\n        (async () => {\n            locks++;\n            for (;;) {\n                try {\n                    const [socket, release, waitForReleaseOrThrowOnClose] = await connect();\n                    // if done while waiting for connect, release the connection lock right away\n                    if (done)\n                        return release();\n                    const unlisten = emitter.onMessage(id, (message) => {\n                        switch (message.type) {\n                            case MessageType.Next: {\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any -- payload will fit type\n                                sink.next(message.payload);\n                                return;\n                            }\n                            case MessageType.Error: {\n                                (errored = true), (done = true);\n                                sink.error(message.payload);\n                                releaser();\n                                return;\n                            }\n                            case MessageType.Complete: {\n                                done = true;\n                                releaser(); // release completes the sink\n                                return;\n                            }\n                        }\n                    });\n                    socket.send(stringifyMessage({\n                        id,\n                        type: MessageType.Subscribe,\n                        payload,\n                    }, replacer));\n                    releaser = () => {\n                        if (!done && socket.readyState === WebSocketImpl.OPEN)\n                            // if not completed already and socket is open, send complete message to server on release\n                            socket.send(stringifyMessage({\n                                id,\n                                type: MessageType.Complete,\n                            }, replacer));\n                        locks--;\n                        done = true;\n                        release();\n                    };\n                    // either the releaser will be called, connection completed and\n                    // the promise resolved or the socket closed and the promise rejected.\n                    // whatever happens though, we want to stop listening for messages\n                    await waitForReleaseOrThrowOnClose.finally(unlisten);\n                    return; // completed, shouldnt try again\n                }\n                catch (errOrCloseEvent) {\n                    if (!shouldRetryConnectOrThrow(errOrCloseEvent))\n                        return;\n                }\n            }\n        })()\n            .then(() => {\n            // delivering either an error or a complete terminates the sequence\n            if (!errored)\n                sink.complete();\n        }) // resolves on release or normal closure\n            .catch((err) => {\n            sink.error(err);\n        }); // rejects on close events and errors\n        return () => {\n            // dispose only of active subscriptions\n            if (!done)\n                releaser();\n        };\n    }\n    return {\n        on: emitter.on,\n        subscribe,\n        iterate(request) {\n            const pending = [];\n            const deferred = {\n                done: false,\n                error: null,\n                resolve: () => {\n                    // noop\n                },\n            };\n            const dispose = subscribe(request, {\n                next(val) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    pending.push(val);\n                    deferred.resolve();\n                },\n                error(err) {\n                    deferred.done = true;\n                    deferred.error = err;\n                    deferred.resolve();\n                },\n                complete() {\n                    deferred.done = true;\n                    deferred.resolve();\n                },\n            });\n            const iterator = (function iterator() {\n                return __asyncGenerator(this, arguments, function* iterator_1() {\n                    for (;;) {\n                        if (!pending.length) {\n                            // only wait if there are no pending messages available\n                            yield __await(new Promise((resolve) => (deferred.resolve = resolve)));\n                        }\n                        // first flush\n                        while (pending.length) {\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                            yield yield __await(pending.shift());\n                        }\n                        // then error\n                        if (deferred.error) {\n                            throw deferred.error;\n                        }\n                        // or complete\n                        if (deferred.done) {\n                            return yield __await(void 0);\n                        }\n                    }\n                });\n            })();\n            iterator.throw = async (err) => {\n                if (!deferred.done) {\n                    deferred.done = true;\n                    deferred.error = err;\n                    deferred.resolve();\n                }\n                return { done: true, value: undefined };\n            };\n            iterator.return = async () => {\n                dispose();\n                return { done: true, value: undefined };\n            };\n            return iterator;\n        },\n        async dispose() {\n            disposed = true;\n            if (connecting) {\n                // if there is a connection, close it\n                const [socket] = await connecting;\n                socket.close(1000, 'Normal Closure');\n            }\n        },\n        terminate() {\n            if (connecting) {\n                // only if there is a connection\n                emitter.emit('closed', new TerminatedCloseEvent());\n            }\n        },\n    };\n}\n/**\n * A syntetic close event `4499: Terminated` is issued to the current to immediately\n * close the connection without waiting for the one coming from `WebSocket.onclose`.\n *\n * Terminating is not considered fatal and a connection retry will occur as expected.\n *\n * Useful in cases where the WebSocket is stuck and not emitting any events;\n * can happen on iOS Safari, see: https://github.com/enisdenjo/graphql-ws/discussions/290.\n */\nexport class TerminatedCloseEvent extends Error {\n    constructor() {\n        super(...arguments);\n        this.name = 'TerminatedCloseEvent';\n        this.message = '4499: Terminated';\n        this.code = 4499;\n        this.reason = 'Terminated';\n        this.wasClean = false;\n    }\n}\nfunction isLikeCloseEvent(val) {\n    return isObject(val) && 'code' in val && 'reason' in val;\n}\nfunction isFatalInternalCloseCode(code) {\n    if ([\n        1000,\n        1001,\n        1006,\n        1005,\n        1012,\n        1013,\n        1014, // Bad Gateway\n    ].includes(code))\n        return false;\n    // all other internal errors are fatal\n    return code >= 1000 && code <= 1999;\n}\nfunction isWebSocket(val) {\n    return (typeof val === 'function' &&\n        'constructor' in val &&\n        'CLOSED' in val &&\n        'CLOSING' in val &&\n        'CONNECTING' in val &&\n        'OPEN' in val);\n}\n"],"names":["global","self","this","__self__","F","fetch","DOMException","prototype","exports","support","Symbol","Blob","e","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","Error","arrayBuffer","then","text","readAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","formData","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","Request","input","options","method","upcased","url","credentials","mode","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","create","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","key","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","ponyfill","ctx","module","isArrayLike","x","isPromise","isFunction","isInteropObservable","isAsyncIterable","asyncIterator","createInvalidObservableTypeError","isIterable","readableStreamLikeToAsyncGenerator","readableStream","arguments","_a","_b","label","getReader","trys","read","sent","releaseLock","isReadableStreamLike","innerFrom","Observable","subscriber","obs","subscribe","array","closed","complete","reportUnhandledError","fromAsyncIterable","iterable","e_1","iterable_1","iterable_1_1","e_1_1","return","asyncIterable","asyncIterable_1","asyncIterable_1_1","e_2","e_2_1","process","catch","executeSchedule","parentSubscription","scheduler","work","delay","repeat","scheduleSubscription","schedule","add","unsubscribe","observeOn","source","subscribeOn","scheduleAsyncIterable","from","pipe","scheduleObservable","scheduleArray","schedulePromise","scheduleIterable","scheduleReadableStreamLike","scheduled","defaultJsonSerializer","invariant","condition","Boolean","LineRegExp","getLocation","position","lastLineStart","match","matchAll","index","column","printSourceLocation","sourceLocation","firstLineColumnOffset","locationOffset","padStart","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","lines","locationLine","subLineIndex","Math","floor","subLineColumnNum","subLines","printPrefixedLines","subLine","existingLines","filter","_","padLen","max","prefix","GraphQLError","rawArgs","_this$nodes","_nodeLocations$","_ref","nodes","positions","path","originalError","extensions","args","firstArg","toNormalizedOptions","super","undefinedIfEmpty","nodeLocations","node","loc","start","locations","pos","originalExtensions","defineProperties","writable","enumerable","configurable","captureStackTrace","toStringTag","output","toJSON","formattedError","syntaxError","description","Location","startToken","endToken","end","Token","kind","prev","QueryDocumentKeys","Name","Document","OperationDefinition","VariableDefinition","Variable","SelectionSet","Field","Argument","FragmentSpread","InlineFragment","FragmentDefinition","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","Directive","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","kindValues","Set","isNode","maybeNode","maybeKind","OperationTypeNode","DirectiveLocation","TokenKind","Kind","isWhiteSpace","code","isDigit","isLetter","isNameStart","dedentBlockStringLines","_firstNonEmptyLine2","commonIndent","Number","MAX_SAFE_INTEGER","firstNonEmptyLine","lastNonEmptyLine","_firstNonEmptyLine","indent","leadingWhitespace","str","charCodeAt","Lexer","startOfFileToken","SOF","lastToken","token","lineStart","advance","lookahead","EOF","nextToken","readNextToken","COMMENT","isUnicodeScalarValue","isSupplementaryCodePoint","isLeadingSurrogate","isTrailingSurrogate","printCodePointAt","lexer","codePointAt","char","fromCodePoint","createToken","col","bodyLength","readComment","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","readBlockString","readString","readNumber","readName","firstCode","isFloat","readDigits","FLOAT","INT","chunkStart","STRING","escape","readEscapedUnicodeVariableWidth","readEscapedUnicodeFixedWidth","readEscapedCharacter","size","point","readHexDigit","read16BitHexCode","trailingCode","currentLine","blockLines","BLOCK_STRING","NAME","devAssert","MAX_ARRAY_LENGTH","MAX_RECURSIVE_DEPTH","inspect","formatValue","seenValues","stringify","previouslySeenValues","includes","isJSONable","jsonValue","len","min","remaining","formatArray","object","tag","getObjectTag","properties","formatObject","formatObjectValue","instanceOf","globalThis","env","NODE_ENV","_value$constructor","className","stringifiedValue","Source","Parser","sourceObj","isSource","_lexer","_options","_tokenCounter","parseName","expectToken","parseDocument","DOCUMENT","definitions","many","parseDefinition","peek","parseOperationDefinition","hasDescription","peekDescription","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseFragmentDefinition","parseTypeSystemExtension","unexpected","OPERATION_DEFINITION","operation","QUERY","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","MUTATION","SUBSCRIPTION","optionalMany","parseVariableDefinition","VARIABLE_DEFINITION","variable","parseVariable","parseTypeReference","defaultValue","expectOptionalToken","parseConstValueLiteral","parseConstDirectives","VARIABLE","SELECTION_SET","selections","parseSelection","parseFragment","parseField","nameOrAlias","alias","FIELD","parseArguments","isConst","item","parseConstArgument","parseArgument","ARGUMENT","parseValueLiteral","hasTypeCondition","expectOptionalKeyword","FRAGMENT_SPREAD","parseFragmentName","INLINE_FRAGMENT","typeCondition","parseNamedType","expectKeyword","allowLegacyFragmentVariables","FRAGMENT_DEFINITION","parseList","parseObject","advanceLexer","parseStringLiteral","BOOLEAN","NULL","ENUM","varName","block","LIST","any","OBJECT","fields","parseObjectField","OBJECT_FIELD","parseDirective","DIRECTIVE","innerType","LIST_TYPE","NON_NULL_TYPE","NAMED_TYPE","parseDescription","operationTypes","parseOperationTypeDefinition","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","interfaces","parseImplementsInterfaces","parseFieldsDefinition","OBJECT_TYPE_DEFINITION","delimitedMany","parseFieldDefinition","parseArgumentDefs","FIELD_DEFINITION","parseInputValueDef","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","types","parseUnionMemberTypes","UNION_TYPE_DEFINITION","parseEnumValuesDefinition","ENUM_TYPE_DEFINITION","parseEnumValueDefinition","parseEnumValueName","ENUM_VALUE_DEFINITION","getTokenDesc","parseInputFieldsDefinition","INPUT_OBJECT_TYPE_DEFINITION","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","repeatable","parseDirectiveLocations","DIRECTIVE_DEFINITION","parseDirectiveLocation","noLocation","getTokenKindDesc","atToken","openKind","parseFn","closeKind","delimiterKind","maxTokens","isPunctuatorTokenKind","escapedRegExp","escapedReplacer","escapeSequences","BREAK","freeze","getEnterLeaveForKind","visitor","kindVisitor","enter","leave","printDocASTReducer","varDefs","wrap","argsLine","isBlockString","escapedValue","isSingleLine","forceLeadingNewLine","every","hasTrailingTripleQuotes","endsWith","hasTrailingQuote","hasTrailingSlash","forceTrailingNewline","printAsMultipleLines","skipLeadingNewLine","printBlockString","hasMultilineItems","maybeArray","separator","_maybeArray$filter$jo","maybeString","_maybeArray$some","some","extractOperationName","document","operationName","operationDefinitions","definition","resolveRequestDocument","parsedDocument","query","ast","root","visitorKeys","enterLeaveMap","Map","parent","inArray","edits","ancestors","isLeaving","isEdited","pop","editOffset","editKey","editValue","arrayKey","splice","getOwnPropertyDescriptors","_enterLeaveMap$get","_enterLeaveMap$get2","visitFn","_node$kind","visit","ClientError","extractMessage","setPrototypeOf","errors","resolveHeaders","oHeaders","o","v","k","HeadersInstanceToPlainObject","cleanQuery","GraphQLClient","requestConfig","rawRequest","async","queryOrOptions","variables","requestHeaders","rawRequestOptions","parseRawRequestArgs","requestMiddleware","responseMiddleware","fetchOptions","makeRequest","callOrIdentity","middleware","documentOrOptions","variablesAndRequestHeaders","requestOptions","parseRequestArgs","data","batchRequests","documentsOrOptions","batchRequestOptions","documents","parseBatchRequestArgs","queries","setHeaders","setHeader","setEndpoint","params","fetcher","queryParams","createRequestBody","jsonSerializer","params_","search","encodeURIComponent","payload","reduce","acc","currentQuery","buildRequestConfig","urlResolved","initResolved","urlNew","initNew","isBatchingQuery","getResult","successfullyReceivedData","successfullyPassedErrorPolicy","errorPolicy","rest","jsonSerializer_","contentType","startsWith","gql","chunks","chunk","extendedTypeof","val","isObject","limitCloseReason","reason","whenTooLong","GRAPHQL_TRANSPORT_WS_PROTOCOL","CloseCode","MessageType","validateMessage","ConnectionInit","ConnectionAck","Ping","Pong","Subscribe","id","Next","ob","Complete","stringifyMessage","msg","replacer","__await","__asyncGenerator","_arguments","generator","g","apply","q","verb","n","a","b","resume","r","fulfill","settle","f","createClient","connectionParams","lazy","onNonLazyError","console","lazyCloseTimeout","lazyCloseTimeoutMs","keepAlive","disablePong","connectionAckWaitTimeout","retryAttempts","retryWait","retries","retryDelay","setTimeout","random","shouldRetry","isLikeCloseEvent","isFatalConnectionProblem","on","webSocketImpl","generateID","c","jsonMessageReplacer","jsonMessageReviver","reviver","ws","WebSocket","MozWebSocket","window","WebSocketImpl","emitter","listeners","listener","emit","connecting","opened","connected","ping","pong","onMessage","event","l","errorOrClosed","cb","listening","unlisten","locks","retrying","disposed","connect","clearTimeout","socket","throwOnClose","denied","connectionAckTimeout","queuedPing","enqueuePing","isFinite","OPEN","errOrEvent","TerminatedCloseEvent","close","onclose","onopen","ConnectionAcknowledgementTimeout","InternalClientError","acknowledged","onmessage","parseMessage","BadResponse","CLOSING","release","released","race","shouldRetryConnectOrThrow","errOrCloseEvent","InternalServerError","BadRequest","Unauthorized","SubprotocolNotAcceptable","SubscriberAlreadyExists","TooManyInitialisationRequests","sink","errored","releaser","waitForReleaseOrThrowOnClose","finally","iterate","pending","deferred","dispose","throw","terminate","wasClean"],"sourceRoot":""}
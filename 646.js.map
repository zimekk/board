{"version":3,"file":"646.js","mappings":"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","sources":["webpack://@dev/web/../../node_modules/.pnpm/format-quantity@3.0.0/node_modules/format-quantity/dist/format-quantity.mjs","webpack://@dev/web/../recipes/src/containers/index.tsx"],"sourcesContent":["// src/constants.ts\nvar defaultTolerance = 75e-4;\nvar defaultOptions = {\n  vulgarFractions: false,\n  tolerance: defaultTolerance,\n  fractionSlash: false,\n  romanNumerals: false\n};\nvar vulgarToAsciiMap = {\n  \"\\xBC\": \"1/4\",\n  \"\\xBD\": \"1/2\",\n  \"\\xBE\": \"3/4\",\n  \"\\u2150\": \"1/7\",\n  \"\\u2151\": \"1/9\",\n  \"\\u2152\": \"1/10\",\n  \"\\u2153\": \"1/3\",\n  \"\\u2154\": \"2/3\",\n  \"\\u2155\": \"1/5\",\n  \"\\u2156\": \"2/5\",\n  \"\\u2157\": \"3/5\",\n  \"\\u2158\": \"4/5\",\n  \"\\u2159\": \"1/6\",\n  \"\\u215A\": \"5/6\",\n  \"\\u215B\": \"1/8\",\n  \"\\u215C\": \"3/8\",\n  \"\\u215D\": \"5/8\",\n  \"\\u215E\": \"7/8\"\n};\nvar fractionDecimalMatches = [\n  [0.33, \"\\u2153\"],\n  [0.66, \"\\u2154\"],\n  [0.2, \"\\u2155\"],\n  [0.4, \"\\u2156\"],\n  [0.6, \"\\u2157\"],\n  [0.8, \"\\u2158\"],\n  [0.166, \"\\u2159\"],\n  [0.833, \"\\u215A\"],\n  [0.143, \"\\u2150\"],\n  [0.111, \"\\u2151\"],\n  [0.1, \"\\u2152\"],\n  [0.125, \"\\u215B\"],\n  [0.25, \"\\xBC\"],\n  [0.375, \"\\u215C\"],\n  [0.5, \"\\xBD\"],\n  [0.625, \"\\u215D\"],\n  [0.75, \"\\xBE\"],\n  [0.875, \"\\u215E\"],\n  [0.0625, \"1/16\"],\n  [0.1875, \"3/16\"],\n  [0.3125, \"5/16\"],\n  [0.4375, \"7/16\"],\n  [0.5625, \"9/16\"],\n  [0.6875, \"11/16\"],\n  [0.8125, \"13/16\"],\n  [0.9375, \"15/16\"]\n];\n\n// src/formatQuantity.ts\nvar closeEnough = (n1, n2, tolerance) => Math.abs(n1 - n2) < tolerance;\nvar getFraction = (vulgarFractionOrSixteenth, { fractionSlash, vulgarFractions }) => {\n  if (vulgarFractions) {\n    return vulgarFractionOrSixteenth;\n  }\n  const plainFraction = vulgarToAsciiMap[vulgarFractionOrSixteenth] ?? vulgarFractionOrSixteenth;\n  if (fractionSlash) {\n    return plainFraction.replace(\"/\", \"\\u2044\");\n  }\n  return plainFraction;\n};\nvar normalizeOptions = (options) => ({\n  ...defaultOptions,\n  ...typeof options === \"boolean\" ? { vulgarFractions: options } : options\n});\nvar romanNumeralValueKey = [\n  \"\",\n  \"C\",\n  \"CC\",\n  \"CCC\",\n  \"CD\",\n  \"D\",\n  \"DC\",\n  \"DCC\",\n  \"DCCC\",\n  \"CM\",\n  \"\",\n  \"X\",\n  \"XX\",\n  \"XXX\",\n  \"XL\",\n  \"L\",\n  \"LX\",\n  \"LXX\",\n  \"LXXX\",\n  \"XC\",\n  \"\",\n  \"I\",\n  \"II\",\n  \"III\",\n  \"IV\",\n  \"V\",\n  \"VI\",\n  \"VII\",\n  \"VIII\",\n  \"IX\"\n];\nvar formatRomanNumerals = (qty) => {\n  if (typeof qty !== \"number\" || isNaN(qty)) {\n    return null;\n  }\n  if (qty < 1 || qty >= 4e3) {\n    return \"\";\n  }\n  const floored = Math.floor(qty);\n  const digits = `${floored}`.split(\"\");\n  let roman = \"\";\n  let i = 3;\n  while (i--) {\n    roman = `${romanNumeralValueKey[+digits.pop() + i * 10] || \"\"}${roman}`;\n  }\n  return `${Array(+digits.join(\"\") + 1).join(\"M\")}${roman}`;\n};\nvar formatQuantity = (qty, options = defaultOptions) => {\n  const qtyAsNumber = typeof qty === \"string\" ? parseFloat(qty) : qty;\n  if (isNaN(qtyAsNumber) || qtyAsNumber === null) {\n    return null;\n  }\n  if (qtyAsNumber === 0) {\n    return \"\";\n  }\n  const opts = normalizeOptions(options ?? defaultOptions);\n  if (opts.romanNumerals) {\n    return formatRomanNumerals(qtyAsNumber);\n  }\n  const absoluteValue = Math.abs(qtyAsNumber);\n  const flooredAbsVal = Math.floor(absoluteValue);\n  const flooredAbsValStr = `${qtyAsNumber < 0 ? \"-\" : \"\"}${flooredAbsVal === 0 ? \"\" : `${flooredAbsVal} `}`;\n  const decimalValue = absoluteValue - flooredAbsVal;\n  if (decimalValue === 0) {\n    return `${qtyAsNumber}`;\n  }\n  for (const [num, vf] of fractionDecimalMatches) {\n    if (closeEnough(decimalValue, num, opts.tolerance)) {\n      const fraction = getFraction(vf, opts);\n      const int = fraction in vulgarToAsciiMap ? flooredAbsValStr.trim() : flooredAbsValStr;\n      return `${int}${fraction}`;\n    }\n  }\n  return `${qtyAsNumber}`;\n};\nexport {\n  defaultOptions,\n  defaultTolerance,\n  formatQuantity,\n  fractionDecimalMatches,\n  vulgarToAsciiMap\n};\n//# sourceMappingURL=format-quantity.mjs.map","import React, {\n  type MouseEventHandler,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\nimport ReactPlayer from \"react-player/youtube\";\nimport { formatQuantity } from \"format-quantity\";\nimport { Spinner } from \"@dev/video/components\";\nimport {\n  type BasicInfoType as InfoType,\n  BasicInfoSchema as InfoSchema,\n} from \"@dev/video/schema\";\n\ninterface RecipeType {\n  name: string;\n  link?: string;\n  video?: string;\n  servings?: number;\n  ingredients?: (servings?: number) => string[];\n  instructions?: (servings?: number) => string[];\n  directions?: (servings?: number) => string[];\n  preparation?: (servings?: number) => string[];\n  additions?: string[];\n}\n\nfunction Checklist({ list }: { list: string[] }) {\n  const [checked, setChecked] = useState<number[]>([]);\n\n  return (\n    <ol>\n      {list.map((item, index) => (\n        <li key={index}>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={checked.includes(index)}\n              onChange={({ target }) =>\n                setChecked((checked) =>\n                  target.checked\n                    ? checked.concat(index)\n                    : checked.filter((i) => i !== index),\n                )\n              }\n            />\n            <span>{item}</span>\n          </label>\n        </li>\n      ))}\n    </ol>\n  );\n}\n\nfunction Recipe({\n  recipe,\n  setVideoId,\n}: {\n  recipe: RecipeType;\n  setVideoId: (video: string) => void;\n}) {\n  const [info, setInfo] = useState<InfoType | null>(null);\n  const [servings, setServings] = useState<RecipeType[\"servings\"]>(\n    recipe.servings,\n  );\n\n  useEffect(() => {\n    fetch(`video/info?videoId=${recipe.video}`)\n      .then((res) => res.json())\n      .then((info) => InfoSchema.parseAsync(info))\n      .then(setInfo);\n  }, []);\n\n  const handleClick = useCallback<MouseEventHandler<HTMLAnchorElement>>(\n    (e) => (e.preventDefault(), setVideoId(recipe.video)),\n    [],\n  );\n\n  return (\n    <details>\n      <summary>\n        <h3 style={{ display: \"inline\" }}>{recipe.name}</h3>\n      </summary>\n      <section style={{ padding: \"1em\" }}>\n        {info ? (\n          <div>\n            {info.videoDetails.thumbnails\n              .slice(0, 1)\n              .map(({ url, width, height }, key) => (\n                <div key={key}>\n                  <a href={recipe.video} onClick={handleClick}>\n                    <img\n                      src={url}\n                      width={width}\n                      height={height}\n                      referrerPolicy=\"no-referrer\"\n                    />\n                  </a>\n                  <div>\n                    <strong>{info.videoDetails.title}</strong>\n                  </div>\n                </div>\n              ))}\n          </div>\n        ) : (\n          <Spinner />\n        )}\n        {recipe.servings && (\n          <div>\n            <label>\n              <select\n                value={servings}\n                onChange={({ target }) => setServings(Number(target.value))}\n              >\n                {[1, 2, 3, 4, 5, 6, 9, 12].map((servings) => (\n                  <option key={servings} value={servings}>\n                    {servings}\n                  </option>\n                ))}\n              </select>\n              <span>servings</span>\n            </label>\n          </div>\n        )}\n        {recipe.ingredients && (\n          <div>\n            <h4>ingredients</h4>\n            <Checklist list={recipe.ingredients(servings)} />\n          </div>\n        )}\n        {recipe.preparation && (\n          <div>\n            <h4>preparation</h4>\n            <Checklist list={recipe.preparation(servings)} />\n          </div>\n        )}\n        {recipe.additions && (\n          <div>\n            <h4>additions</h4>\n            <Checklist list={recipe.additions} />\n          </div>\n        )}\n        {recipe.link && (\n          <div>\n            <a\n              href={recipe.link}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              onClick={(e) => e.preventDefault()}\n            >\n              {recipe.link.split(\"//\")[1]}\n            </a>\n          </div>\n        )}\n      </section>\n    </details>\n  );\n}\n\nconst textToList = (text: string) =>\n  text\n    .split(\"\\n\")\n    .map((s) => s.trim())\n    .filter(Boolean);\n\nexport default function Section() {\n  const [videoId, setVideoId] = useState(\"\");\n  const [recipes] = useState<RecipeType[]>(() => [\n    {\n      name: \"Domowa PIZZA lepsza niż z pizzerii - przepis na najlepsze ciasto na pizzę 🍕\",\n      video: \"https://www.youtube.com/watch?v=fvm7uz4IUZ0\",\n      servings: 2,\n      ingredients: (servings) =>\n        ((rate) =>\n          textToList(`${350 * rate}g mąki 00 (W250-280)\n      ${200 * rate}-${210 * rate}ml zimnej wody\n      ${10 * rate}g soli (ok ${formatQuantity((1 / 2) * rate)} łyżeczki)\n      ${10 * rate}ml oliwy (ok ${formatQuantity(2 * rate)} łyżeczki)\n      ${formatQuantity(1 * rate)}g drożdży świeżych\n      `))(servings / 2),\n      preparation: () =>\n        textToList(`200ml wody + 1,5 łyżeczki sól + 2 łyżeczki oliwy\n      rozetrzeć w wodzie 1g drożdży + wsypać połowę mąki\n      dosypać resztę mąki\n      uformować kulkę i przykryć na 20 min wilgotną ściereczką (lub zwilżyć ciasto)\n      uformować blok i pozostawić szczelnie zamknięte na 1h\n      podzielić i uformować na kulki i pozostawić do wyrośnięcia 6-7h (2h pierwszego dnia + 4-5h kolejnego po wyjęciu z lodówki)\n      najlepiej włożyć do lodówki na 12h\n      `),\n      additions: textToList(`mozzarella świeża w kulce\n      parmezan\n      prosciutto cotto, anchois, oliwki, cebula, kapary, salami, pieczarki\n      `),\n    },\n    {\n      name: \"Ciasto na Napoletanę - Pierwszy TEST miksera planetarnego MAXIMA\",\n      video: \"https://www.youtube.com/watch?v=WS1XryTDFX0\",\n      ingredients: () =>\n        textToList(`500g mąki W260 - W280\n      300g wody\n      13g soli\n      1g drożdży świeżych\n      `),\n      preparation: () =>\n        textToList(`1 min (woda + drożdże + 1/2 mąki)\n      10 min (reszta mąki + sól)\n      uformować 5-10 min przerwy\n      1 min - wyrabianie\n      uformować i odczekać 10-15 min\n      12 h w temperaturze otoczenia\n      porcjowanie na kulki (4x 200 g)\n      pozostawić na 6-7h w temperaturze otoczenia\n      wrzucić do lodówki na kolejne 24h\n      wyciągnąć na 3-4h przed wypiekiem\n      `),\n    },\n    {\n      name: \"Puszysty omlet z 2 jaj 👌 pyszne i szybkie śniadanie w 10 minut 👍\",\n      video: \"https://www.youtube.com/watch?v=3HTbEWhpe9k\",\n      servings: 2,\n      ingredients: (servings) =>\n        ((rate) =>\n          textToList(`${formatQuantity(2 * rate)} jajka\n      ${formatQuantity((1 / 2) * rate)} szklanki mleka (${125 * rate}ml)\n      ${formatQuantity(3 * rate)} łyżki mąki (${50 * rate}g)\n      ${formatQuantity(2 * rate)} łyżki oleju (${20 * rate}g)\n      ${formatQuantity((1 / 4) * rate)} łyżeczki soli (${formatQuantity(\n        1 * rate,\n      )}g)\n      `))(servings / 2),\n    },\n    {\n      name: \"Przepis na najlepsze bułki do burgerów - Brioche. Jak je najlepiej zrobić.\",\n      video: \"https://www.youtube.com/watch?v=PILcY1a5amc\",\n      ingredients: () =>\n        textToList(`60ml mleka\n      30ml wody\n      20g mąki typ 00\n      120ml mleka 35\\u00B0\n      9g drożdży suchych\n      320g mąki\n      1 jajko + 1 żółtko\n      35g cukru i 7g soli\n      40g miękkiego masła\n      `),\n    },\n    {\n      name: \"NAJLEPSZE BUŁKI NA ŚWIECIE - chrupiące bułki Maryny z mąki orkiszowej w domowej piekarni.\",\n      video: \"https://www.youtube.com/watch?v=U2RXIiCXa-M\",\n      servings: 9,\n      ingredients: (servings) =>\n        ((rate) =>\n          textToList(`${500 * rate}g mąki orkiszowej TYP 630\n      ${300 * rate}ml zimnej wody\n      ${20 * rate}g oliwy z oliwek lub masła\n      ${10 * rate}g soli\n      kawałek świeżych drożdży\n      `))(servings / 9),\n    },\n    {\n      name: \"Bułki z piekarni jak za starych dobrych czasów. Przepis jak zrobić domowe bułeczki. MENU Dorotki\",\n      video: \"https://www.youtube.com/watch?v=_-0aiXG09wc\",\n      servings: 9,\n      ingredients: (servings) =>\n        ((rate) =>\n          textToList(`SKŁADNIKI:\n      ${\n        500 * rate\n      }g mąki pszennej najlepiej typ 550 (można też użyć 450, 650 czy 750)\n      ${30 * rate}g świeżych drożdży (ewentualnie ${formatQuantity(\n        2 * rate,\n      )} opakowania drożdży suszonych po 7g)\n      ${formatQuantity(2 * rate)} łyżeczki soli\n      ${330 * rate}g wody\n      `))(servings / 9),\n      preparation: (servings) =>\n        ((rate) =>\n          textToList(`Z powyższych składników biorę:\n      ${10 * rate}g drożdży\n      ${150 * rate}ml wody\n      ${formatQuantity(3 * rate)} łyżki mąki\n      i przygotowuję rozczyn \n      \n      dodatkowo mąka do podsypania i ewentualnie ${formatQuantity(\n        2,\n      )} łyżki oleju do posmarowania \n      \n      PIECZENIE:\n      temperatura piekarnika: 230\\u00B0C (górna i dolna grzałka)\n      czas pieczenia: około 20 minut\n      `))(servings / 9),\n    },\n    {\n      name: \"Puszyste, maślane BUŁKI DO BURGERÓW! Nigdy nie jedliście lepszych!\",\n      video: \"https://www.youtube.com/watch?v=Nn3rVOEgC7Y\",\n      ingredients: () =>\n        textToList(`Przestudzony Tangzhong: 200g wody + 40 mąki\n      600g mąki pszennej typ 650\n      30g świeżych lub 10g suchych drożdży\n      40g cukru\n      1 jajko\n      1 żółtko\n      180g ciepłego mleka\n      120g masła\n      2 łyżeczki soli\n  Do posmarowania:\n      1 jajko + 2 łyżki mleka,\n      odrobina sezamu\n  Na wykończenie:\n      2 łyżki rozpuszczonego masła do posmarowania.\n      `),\n    },\n    {\n      name: \"Jak zrobić idealne BUŁKI do HAMBURGERÓW\",\n      link: \"https://policzona-szama.pl/blogs/przepisy/bulka-do-hamburgera-prosta-i-smaczna\",\n      video: \"https://www.youtube.com/watch?v=JL4jyt-LbWI\",\n      ingredients: () =>\n        textToList(`na 4 bułki do burgerów:\n      mąka typ 650 – 400 g\n      masło – 40 g\n      mleka 1,5% (bez laktozy – słodsze w smaku) – 150 ml\n      drożdże świeże – 25 g\n      sól – 5 g\n      cukier brązowy – 10 g\n      woda – 100 ml\n      do posmarowania: żółtko + mleko, sezam\n      `),\n    },\n    {\n      name: \"Najlepszy przepis na BUŁKI do BURGERÓW!\",\n      video: \"https://www.youtube.com/watch?v=apmsMiRddtU\",\n      ingredients: () =>\n        textToList(`300g mąki pszennej (w trakcie dodaliśmy jeszcze ok. 50g)\n      100 ml wody\n      150 ml mleka\n      40 g masła\n      2 jajka\n      5 g drożdży suchych **\n      1 łyzka cukru\n      pół łyżeczki soli\n      sezam/ czarnuszka/ mak\n      `),\n    },\n    {\n      name: 'Policzone SAJGONKI. Lepsze niż \"U CHIŃCZYKA\" ?',\n      video: \"https://www.youtube.com/watch?v=hszZgtrbYtY\",\n    },\n  ]);\n\n  return (\n    <section>\n      <h2>Recipes</h2>\n      <div style={{ padding: \"0 1em 1em\" }}>\n        {recipes.map((recipe, key) => (\n          <Recipe key={key} recipe={recipe} setVideoId={setVideoId} />\n        ))}\n      </div>\n      {videoId && (\n        <div\n          style={{\n            position: \"fixed\",\n            bottom: 0,\n            right: 0,\n            border: \"2px solid black\",\n            background: \"lightgray\",\n          }}\n        >\n          <ReactPlayer\n            url={videoId}\n            width={320}\n            height={180}\n            controls\n            light\n            loop\n            pip\n            playing\n          />\n        </div>\n      )}\n    </section>\n  );\n}\n"],"names":["defaultOptions","vulgarFractions","tolerance","fractionSlash","romanNumerals","vulgarToAsciiMap","fractionDecimalMatches","getFraction","vulgarFractionOrSixteenth","plainFraction","replace","romanNumeralValueKey","formatQuantity","qty","options","qtyAsNumber","parseFloat","isNaN","opts","normalizeOptions","digits","Math","floor","split","roman","i","pop","Array","join","formatRomanNumerals","absoluteValue","abs","flooredAbsVal","flooredAbsValStr","decimalValue","num","vf","n1","n2","fraction","trim","Checklist","list","checked","setChecked","useState","React","map","item","index","key","type","includes","onChange","target","concat","filter","Recipe","recipe","setVideoId","info","setInfo","servings","setServings","useEffect","fetch","video","then","res","json","InfoSchema","parseAsync","handleClick","useCallback","e","preventDefault","style","display","name","padding","videoDetails","thumbnails","slice","url","width","height","href","onClick","src","referrerPolicy","title","Spinner","value","Number","ingredients","preparation","additions","link","rel","textToList","text","s","Boolean","Section","videoId","recipes","rate","position","bottom","right","border","background","ReactPlayer","controls","light","loop","pip","playing"],"sourceRoot":""}
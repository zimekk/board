{"version":3,"file":"43.js","mappings":"wJASA,SAASA,GAAK,SAAEC,IACd,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,WAAsB,IAAM,QAEpDC,EAAAA,EAAAA,YAAU,KACRC,MAAM,SACHC,MAAMC,GAAQA,EAAIC,SAClBF,MAAK,EAAGL,UAAWA,IACnBK,KAAKJ,EAAQ,GACf,IAEH,MAAMO,GAAeC,EAAAA,EAAAA,cAClBC,IACCA,EAAEC,iBAEFZ,EAAUW,EAAEE,OAA6BC,QAE3C,IAGF,OAAa,OAATb,EACKc,EAAAA,cAACC,EAAAA,EAAO,MAIfD,EAAAA,cAAA,WACEA,EAAAA,cAAA,UACGd,EAAKgB,KAAI,EAAGC,UACXH,EAAAA,cAAA,MAAII,IAAKD,GACPH,EAAAA,cAAA,KACED,KAAO,SAAQM,mBAAmBF,KAClCL,OAAO,SACPQ,QAASZ,GAERS,OAOf,CAEA,SAASI,GAAK,KAAEJ,IACd,OACEH,EAAAA,cAAA,OACEQ,MAAO,CAELC,OAAQ,EACRC,MAAO,EACPC,OAAQ,oBAGVX,EAAAA,cAAA,OACEQ,MAAO,CACLI,SAAU,QAEZC,IAAKV,IAIb,CAEe,SAASW,IACtB,MAAOX,EAAMY,IAAW3B,EAAAA,EAAAA,UAAS,MAEjC,OACEY,EAAAA,cAAA,eACEA,EAAAA,cAAA,UAAI,SACJA,EAAAA,cAAChB,EAAI,CAACC,SAAU8B,IACfZ,GAAQH,EAAAA,cAACO,EAAI,CAACJ,KAAMA,IAG3B,C,iGC3EA,MAAMa,E,OAAgBC,GAAOC,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+C1B,SAASjB,IACd,OACED,EAAAA,cAACgB,EAAa,KACZhB,EAAAA,cAAA,OAAKmB,UAAU,UAAUC,QAAQ,aAC/BpB,EAAAA,cAAA,UACEmB,UAAU,OACVE,GAAG,KACHC,GAAG,KACHC,EAAE,KACFC,KAAK,OACLC,YAAY,OAKtB,C","sources":["webpack://@dev/web/../photo/src/containers/index.tsx","webpack://@dev/web/../video/src/components/Spinner/index.tsx"],"sourcesContent":["import React, {\n  type MouseEventHandler,\n  useCallback,\n  useState,\n  useEffect,\n} from \"react\";\nimport { Spinner } from \"@dev/video/components\";\nimport { type PhotoType } from \"../schema\";\n\nfunction List({ onSelect }: { onSelect: (name: string) => void }) {\n  const [list, setList] = useState<PhotoType[]>(() => null);\n\n  useEffect(() => {\n    fetch(\"photo\")\n      .then((res) => res.json())\n      .then(({ list }) => list)\n      .then(setList);\n  }, []);\n\n  const handleSelect = useCallback<MouseEventHandler<HTMLAnchorElement>>(\n    (e) => (\n      e.preventDefault(),\n      handleSelect,\n      onSelect((e.target as HTMLAnchorElement).href)\n    ),\n    [],\n  );\n\n  if (list === null) {\n    return <Spinner />;\n  }\n\n  return (\n    <div>\n      <ul>\n        {list.map(({ name }) => (\n          <li key={name}>\n            <a\n              href={`photo/${encodeURIComponent(name)}`}\n              target=\"_blank\"\n              onClick={handleSelect}\n            >\n              {name}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction Item({ name }: { name: string }) {\n  return (\n    <div\n      style={{\n        // position: \"fixed\",\n        bottom: 0,\n        right: 0,\n        border: \"2px solid black\",\n      }}\n    >\n      <img\n        style={{\n          maxWidth: \"100%\",\n        }}\n        src={name}\n      />\n    </div>\n  );\n}\n\nexport default function Section() {\n  const [name, setName] = useState(null);\n\n  return (\n    <section>\n      <h2>Photo</h2>\n      <List onSelect={setName} />\n      {name && <Item name={name} />}\n    </section>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// https://codepen.io/GeoffreyCrofte/pen/ZQrgZm\n// https://codepen.io/supah/pen/BjYLdW\n// https://codesandbox.io/s/m3v440z36j\nconst StyledSpinner = styled.div`\n  display: inline-block;\n  width: 1em;\n  height: 1em;\n  position: relative;\n\n  .spinner {\n    position: absolute;\n    width: 1.5em;\n    height: 1.5em;\n    margin: 0;\n  }\n\n  svg {\n    animation: rotate 2s linear infinite;\n    margin: -25px 0 0 -25px;\n    width: 50px;\n    height: 50px;\n\n    & .path {\n      stroke: #5652bf;\n      stroke-linecap: round;\n      animation: dash 1.5s ease-in-out infinite;\n    }\n  }\n\n  @keyframes rotate {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes dash {\n    0% {\n      stroke-dasharray: 1, 150;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -35;\n    }\n    100% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -124;\n    }\n  }\n`;\n\nexport function Spinner() {\n  return (\n    <StyledSpinner>\n      <svg className=\"spinner\" viewBox=\"0 0 50 50\">\n        <circle\n          className=\"path\"\n          cx=\"25\"\n          cy=\"25\"\n          r=\"20\"\n          fill=\"none\"\n          strokeWidth=\"5\"\n        />\n      </svg>\n    </StyledSpinner>\n  );\n}\n"],"names":["List","onSelect","list","setList","useState","useEffect","fetch","then","res","json","handleSelect","useCallback","e","preventDefault","target","href","React","Spinner","map","name","key","encodeURIComponent","onClick","Item","style","bottom","right","border","maxWidth","src","Section","setName","StyledSpinner","styled","div","className","viewBox","cx","cy","r","fill","strokeWidth"],"sourceRoot":""}
{"version":3,"file":"163.js","mappings":"kKAEe,SAASA,GAAc,KAAEC,IACtC,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KAAE,gBAEAA,EAAAA,cAAA,WAAMC,KAAKC,UAAUH,EAAM,KAAM,IAGvC,CCPe,SAASI,GAAe,MAAEC,IACvC,OACEJ,EAAAA,cAAAA,EAAAA,SAAA,KAAE,iBAEAA,EAAAA,cAAA,WAAMC,KAAKC,UAAUE,EAAO,KAAM,IAGxC,CCPe,SAASC,GAAY,KAAEN,EAAI,OAAEO,EAAM,UAAEC,IAClD,MAAMC,GAAMC,EAAAA,EAAAA,QAAO,MACbC,GAAoBC,EAAAA,EAAAA,cAAY,KAChCJ,GACFA,GACF,GACC,CAACA,IACEK,GAAiBD,EAAAA,EAAAA,cACpBE,IACKP,GACFA,EAAOO,EAAEC,OAAOC,GAClB,GAEF,CAACT,IAgBH,OAdAU,EAAAA,EAAAA,YAAU,KAER,MAAMC,EAAaT,GAAKU,QAKxB,OAJID,IACFA,EAAWE,iBAAiB,UAAWT,GACvCO,EAAWE,iBAAiB,OAAQP,IAE/B,KACDJ,IACFS,EAAWG,oBAAoB,UAAWV,GAC1CO,EAAWG,oBAAoB,OAAQR,GACzC,CACD,GACA,CAACF,EAAmBE,EAAgBJ,IAErCR,EAAAA,cAAA,OAAKQ,IAAKA,GAAK,cAEbR,EAAAA,cAAA,WAAMC,KAAKC,UAAUH,EAAM,KAAM,IAGvC,CCnCe,SAASsB,GAAe,KAAEtB,IACvC,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KAAE,iBAEAA,EAAAA,cAAA,WAAMC,KAAKC,UAAUH,EAAM,KAAM,IAGvC,CCPO,SAASuB,IAEd,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAEjC,MAAO,CACLC,OAFaC,QAGbJ,OAEJ,CCAA,MAAMK,EACJ,0BAmEa,SAASC,IACtB,MAAM,KAAEN,EAAI,OAAEG,GAAWJ,KAClBQ,EAAQC,IAAaN,EAAAA,EAAAA,UAAS,OAC9BO,EAAaC,IAAkBR,EAAAA,EAAAA,UAAS,KACxCS,EAAQC,IAAaV,EAAAA,EAAAA,UAAS,OAE/B,MAAEW,EAAK,IAAEC,EAAG,KAAEC,EAAI,cAAEC,IAAkBC,EAAAA,EAAAA,KAEtCC,EAAkBA,EAAG1B,SACzB,MAAM2B,EAxDH,WACL,IACE,OAAOzC,KAAK0C,MACVC,eAAeC,QAAQjB,GAE3B,CAAE,MACA,MAAO,CAAC,CACV,CACF,CAgDgCkB,GAC5BpB,EAAOqB,IAAI,CAAEC,MAAO,iBAAkBC,QAAS,CAAElC,QACjDkB,GAAgBiB,GAAa,IACxBA,EACH,CAAEC,QAAST,IAAsB3B,IAAO,EAAGe,OAAQf,KACnD,EAEEqC,EAAqBA,EAAGrC,SAC5BW,EAAOqB,IAAI,CAAEC,MAAO,oBAAqBC,QAAS,CAAElC,QACpDkB,GAAgBiB,GAEdA,EAASG,QAAO,EAAGvB,YAAaA,IAAWf,KAC5C,EAEGuC,EAASA,EAAGvC,MAAMhB,KACtB2B,EAAOqB,IAAI,CAAEC,MAAO,OAAQjD,OAAMgB,OAClCkB,GAAgBiB,IACd,MAAMK,EA/DL,SAAwBA,GAAO,KAAExD,EAAI,GAAEgB,IAC5C,OAAOwC,EAAMC,QAAO,CAACC,EAAKC,KACxB,GAAIA,EAAI5B,SAAWf,EACjB,OAAQhB,EAAK4D,MACX,IAAK,oBACHF,EAAIG,KAAK,IACJF,EACHP,QAASO,EAAIP,QAAU,IAEzB,MACF,IAAK,oBACHM,EAAIG,KAAK,IACJF,EACHP,QAASO,EAAIP,QAAU,IAEzB,MACF,IAAK,kBACHM,EAAIG,KAAK,IACJF,EACHG,KAAM9D,EAAK8D,OAEb,MACF,QACEJ,EAAIG,KAAKF,QAIbD,EAAIG,KAAKF,GAEX,OAAOD,CAAG,GACT,GACL,CAgCoBK,CAAeZ,EAAU,CAAEnD,OAAMgB,OAE/C,OA7FC,SAAkCmC,GACvC,IAAID,EACJ,IACEA,EAAUhD,KAAKC,UACbgD,EAASM,QAAO,CAACC,EAAKC,KACpBD,EAAIC,EAAI5B,QAAU4B,EAAIP,QACfM,IACN,CAAC,GAER,CAAE,MACAR,EAAUhD,KAAKC,UAAU,CAAC,EAC5B,CACA0C,eAAemB,QACbnC,EACAqB,EAEJ,CA4EMe,CAAyBT,GAClBA,CAAK,GACZ,EAEEU,EAAeC,IACnBnC,EAAU,MACVL,EAAOwC,MAAM,CAAElB,MAAO,QAASkB,UAC/B/B,EAAU,CAACI,EAAc2B,IAAQ,EAqCnC,OAlCAlD,EAAAA,EAAAA,YAAU,KACJsB,GACFA,EAAK6B,GAAG,QAASF,GAEZ,KACD3B,GACFA,EAAK8B,IAAI,QAASH,EACpB,IAGD,CAAC3B,KAEJtB,EAAAA,EAAAA,YAAU,KACJoB,IACFL,EAAUO,EAAKvB,IACfW,EAAOqB,IAAI,CACTC,MAAO,OACPqB,QAAS,mBACTpB,QAAS,CAAElC,GAAIuB,EAAKvB,MAEtBsB,EAAI8B,GAAG,iBAAkB1B,GACzBJ,EAAI8B,GAAG,oBAAqBf,GAC5Bf,EAAI8B,GAAG,OAAQb,IAEV,KACL3B,QAAQoB,IAAI,sBACRX,IACFC,EAAI+B,IAAI,iBAAkB3B,GAC1BJ,EAAI+B,IAAI,oBAAqBhB,GAC7Bf,EAAI+B,IAAI,OAAQd,GAClB,IAGD,CAAClB,IAEFpC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACF,EAAa,CAACC,KAAMmC,IAGpBJ,GACC9B,EAAAA,cAAA,WACEA,EAAAA,cAAA,KACEsE,KAAO,GAAEC,SAASD,QAAQxC,IAC1B0C,OAAO,SACPC,IAAI,uBAEH3C,IAIP9B,EAAAA,cAAA,WAAK,mBACaA,EAAAA,cAACG,EAAc,CAACC,OA5FZ8C,EA4F+BlB,EA3FlDkB,EAASM,QAAO,CAACC,GAAON,aAAcA,EAAUM,GAAK,OA6FxDzD,EAAAA,cAACK,EAAW,CACVN,KAAMiC,EACNzB,UAAWA,KAKP,EAGJD,OAASS,IAKL,IAINf,EAAAA,cAACqB,EAAc,CAACtB,KAAM,IAAIwB,GAAMmD,aAjH/B,IAAqBxB,CAoH5B,CC5Le,SAASyB,GAAmB,YACzCC,EAAW,YACXC,EAAW,SACXC,IAEA,OACE9E,EAAAA,cAAA,OAAK+E,UAAU,mBACb/E,EAAAA,cAAA,UACE2D,KAAK,SACLoB,UAAU,sBACVC,QAASA,IAAMJ,IACfK,MAAO,CAAEC,YAAa,OACtBJ,SAAUA,GACX,KAGD9E,EAAAA,cAAA,UACE2D,KAAK,SACLoB,UAAU,sBACVC,QAASA,IAAMH,IACfI,MAAO,CAAEE,WAAY,OACrBL,SAAUA,GACX,KAKP,CC3Be,SAASM,GAAkB,aACxCC,EAAY,cACZC,EAAa,KACbzB,EAAI,SACJiB,IAEA,OACE9E,EAAAA,cAAA,QACE+E,UAAU,gBACVQ,OAAO,IACPC,SAAW3E,IACTA,EAAE4E,iBACFH,EAAezE,EAAE2D,OAAeX,KAAK6B,MAAM,GAG7C1F,EAAAA,cAAA,aACEA,EAAAA,cAAA,SACE2D,KAAK,OACLgC,YAAY,aACZC,SAAW/E,GAAMwE,EAAaxE,EAAE2D,OAAOkB,OACvCA,MAAO7B,EACPiB,SAAUA,IAEZ9E,EAAAA,cAAA,UAAQ2D,KAAK,SAASmB,SAAUA,GAAU,OAMlD,CCrBe,SAASe,IACtB,MAAM,KAAEtE,EAAI,OAAEG,GAAWJ,KAClBQ,EAAQC,IAAaN,EAAAA,EAAAA,UAAS,OAC9BoC,EAAMiC,GJAR,SAA2BC,EAAKC,GAGrC,MAAOC,EAAaC,IAAkBzE,EAAAA,EAAAA,WAAS,KAC7C,GAAsB,oBAAX0E,OACT,MILqD,GJOvD,IAEE,MAAMC,EAAOD,OAAOvD,eAAeC,QAAQkD,GAE3C,OAAOK,EAAOnG,KAAK0C,MAAMyD,GIX4B,EJYvD,CAAE,MAAOlC,GAGP,OADAvC,QAAQoB,IAAImB,GIdyC,EJgBvD,KAoBF,MAAO,CAAC+B,EAhBUP,IAChB,IAEE,MAAMW,EACJX,aAAiBY,SAAWZ,EAAMO,GAAeP,EAEnDQ,EAAeG,GAEO,oBAAXF,QACTA,OAAOvD,eAAemB,QAAQgC,EAAK9F,KAAKC,UAAUmG,GAEtD,CAAE,MAAOnC,GAEPvC,QAAQoB,IAAImB,EACd,GAGJ,CIrC0BqC,CAAkB,gBACnCrE,EAAQC,IAAaV,EAAAA,EAAAA,UAAS,OAE/B,MAAEW,EAAK,IAAEC,EAAG,KAAEC,EAAI,cAAEC,IAAkBC,EAAAA,EAAAA,KAEtCY,EAAsBH,IAC1BvB,EAAOqB,IAAI,CAAEC,MAAO,oBAAqBC,WAAU,EAE/CuD,EAAqBvD,IACzBvB,EAAOqB,IAAI,CAAEC,MAAO,mBAAoBC,YACpCY,GACDxB,EAAYoE,KAAK,CAAE9C,KAAM,kBAAmBE,QAC/C,EAEII,EAAeC,IACnBnC,EAAU,MACVL,EAAOwC,MAAM,CAAElB,MAAO,QAASkB,UAC/B/B,EAAU,CAACI,EAAc2B,IAAQ,EAE7BZ,EAASA,CAACoD,EAAG3G,KACjB2B,EAAOqB,IAAI,CAAEC,MAAO,OAAQjD,QAAO,EA6DrC,OAvDAiB,EAAAA,EAAAA,YAAU,KACJsB,GACFA,EAAK6B,GAAG,QAASF,GAEZ,KACD3B,GACFA,EAAK8B,IAAI,QAASH,EACpB,IAGD,CAAC3B,KAEJtB,EAAAA,EAAAA,YAAU,KACJoB,IACFL,EAAUO,EAAKvB,IACfW,EAAOqB,IAAI,CACTC,MAAO,OACPqB,QAAS,mBACTpB,QAAS,CAAElC,GAAIuB,EAAKvB,MAEtBsB,EAAI8B,GAAG,oBAAqBf,GAC5Bf,EAAI8B,GAAG,mBAAoBqC,GAC3BnE,EAAI8B,GAAG,OAAQb,GACXO,GACDxB,EAAYoE,KAAK,CAAE9C,KAAM,kBAAmBE,UAG1C,KACLlC,QAAQoB,IAAI,sBACRX,IACFC,EAAI+B,IAAI,oBAAqBhB,GAC7Bf,EAAI+B,IAAI,mBAAoBoC,GAC5BnE,EAAI+B,IAAI,OAAQd,GAClB,IAED,CAAClB,IAqBFpC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACF,EAAa,CAACC,KAAMmC,IACrBlC,EAAAA,cAAC2E,EAAkB,CACjBC,YAtBN,WACMxC,GACDC,EAAYoE,KAAK,CAAE9C,KAAM,qBAE9B,EAmBMkB,YAlBN,WACMzC,GACDC,EAAYoE,KAAK,CAAE9C,KAAM,qBAE9B,EAeMmB,UAAWhD,IAEb9B,EAAAA,cAACoF,EAAiB,CAChBC,aAjBN,SAAsBK,GACpBI,EAAQJ,EACV,EAgBM7B,KAAMA,EACNyB,cAhBN,WACMlD,GACDC,EAAYoE,KAAK,CAAE9C,KAAM,kBAAmBE,QAEjD,EAaMiB,UAAWhD,IAEb9B,EAAAA,cAAA,SAAG,mFAIHA,EAAAA,cAACqB,EAAc,CAACtB,KAAM,IAAIwB,GAAMmD,YAGtC,CC7GO,MAEDiC,GAA6B,EAuBpB,SAASC,IACtB,MAAO,CAAEC,EAAe,OAAQC,EAAAA,EAAAA,UAC9B,IAAMC,UAAUxC,SAASyC,MAAMC,MAAM,kBAAoB,IACzD,IAEIC,GAAOJ,EAAAA,EAAAA,UACX,IAAOD,EAAe,SAAW,UACjC,CAACA,IAKH,OAFAlF,QAAQoB,IAAI,CAAE8D,eAAcK,SAG1BlH,EAAAA,cAAA,eACEA,EAAAA,cAAA,UAAI,UACHkH,GACClH,EAAAA,cAACmH,EAAAA,EAA2B,CAC1BD,KAAMA,EACNE,KAAMA,EAAGC,eACP,IAAIC,EAAAA,GACFD,IAtCRV,EACK,CACLY,KAAM,YACNC,KAAM,IACNC,KAAM,UAMH,CACLF,KAAM,eACNC,KAAM,IACNC,KAAM,MA8BAZ,aAAcA,EACda,kBAAkB,uCAER,WAATR,EAAoBlH,EAAAA,cAAC6F,EAAM,MAAM7F,EAAAA,cAAC6B,EAAM,OAKnD,C","sources":["webpack://@dev/web/../webrtc/src/containers/ErrorsDisplay.tsx","webpack://@dev/web/../webrtc/src/containers/CounterDisplay.tsx","webpack://@dev/web/../webrtc/src/containers/RemotesList.tsx","webpack://@dev/web/../webrtc/src/containers/ConsoleDisplay.tsx","webpack://@dev/web/../webrtc/src/containers/react-common.ts","webpack://@dev/web/../webrtc/src/containers/Master.tsx","webpack://@dev/web/../webrtc/src/containers/RemoteCountControl.tsx","webpack://@dev/web/../webrtc/src/containers/RemoteNameControl.tsx","webpack://@dev/web/../webrtc/src/containers/Remote.tsx","webpack://@dev/web/../webrtc/src/containers/index.tsx"],"sourcesContent":["import React from \"react\";\n\nexport default function ErrorsDisplay({ data }: { data: any }) {\n  return (\n    <>\n      ErrorsDisplay\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function CounterDisplay({ count }) {\n  return (\n    <>\n      CounterDisplay\n      <pre>{JSON.stringify(count, null, 2)}</pre>\n    </>\n  );\n}\n","import React, { useCallback, useEffect, useRef } from \"react\";\n\nexport default function RemotesList({ data, onPing, onPingAll }) {\n  const ref = useRef(null);\n  const onPingAllCallback = useCallback(() => {\n    if (onPingAll) {\n      onPingAll();\n    }\n  }, [onPingAll]);\n  const onPingCallback = useCallback(\n    (e) => {\n      if (onPing) {\n        onPing(e.detail.id);\n      }\n    },\n    [onPing],\n  );\n  useEffect(() => {\n    // copy the ref to be able to cleanup the right one if it changed\n    const refCurrent = ref?.current;\n    if (refCurrent) {\n      refCurrent.addEventListener(\"pingAll\", onPingAllCallback);\n      refCurrent.addEventListener(\"ping\", onPingCallback);\n    }\n    return () => {\n      if (ref) {\n        refCurrent.removeEventListener(\"pingAll\", onPingAllCallback);\n        refCurrent.removeEventListener(\"ping\", onPingCallback);\n      }\n    };\n  }, [onPingAllCallback, onPingCallback, ref]);\n  return (\n    <div ref={ref}>\n      RemotesList\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function ConsoleDisplay({ data }: { data: any }) {\n  return (\n    <>\n      ConsoleDisplay\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </>\n  );\n}\n","import { useState } from \"react\";\n\nexport function useLogger() {\n  // const loggerRef = useRef(makeLogger());\n  const [logs, setLogs] = useState([]);\n  const logger = console;\n  return {\n    logger,\n    logs,\n  };\n}\n\n// inspired by https://usehooks.com/useLocalStorage/\nexport function useSessionStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    if (typeof window === \"undefined\") {\n      return initialValue;\n    }\n    try {\n      // Get from local storage by key\n      const item = window.sessionStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to sessionStorage.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to session storage\n      if (typeof window !== \"undefined\") {\n        window.sessionStorage.setItem(key, JSON.stringify(valueToStore));\n      }\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n  return [storedValue, setValue];\n}\n","import React, { useEffect, useState } from \"react\";\nimport { usePeer } from \"@webrtc-remote-control/react\";\n\nimport ErrorsDisplay from \"./ErrorsDisplay\";\nimport CounterDisplay from \"./CounterDisplay\";\nimport RemotesList from \"./RemotesList\";\nimport ConsoleDisplay from \"./ConsoleDisplay\";\n\nimport { useLogger } from \"./react-common\";\n\nconst MASTER_PERSISTANCE_COUNTERS_SESSION_STORAGE_KEY =\n  \"master-persist-counters\";\n\nexport function persistCountersToStorage(counters) {\n  let payload;\n  try {\n    payload = JSON.stringify(\n      counters.reduce((acc, cur) => {\n        acc[cur.peerId] = cur.counter;\n        return acc;\n      }, {}),\n    );\n  } catch {\n    payload = JSON.stringify({});\n  }\n  sessionStorage.setItem(\n    MASTER_PERSISTANCE_COUNTERS_SESSION_STORAGE_KEY,\n    payload,\n  );\n}\n\nexport function getCountersFromStorage() {\n  try {\n    return JSON.parse(\n      sessionStorage.getItem(MASTER_PERSISTANCE_COUNTERS_SESSION_STORAGE_KEY),\n    );\n  } catch {\n    return {};\n  }\n}\n\nexport function counterReducer(state, { data, id }) {\n  return state.reduce((acc, cur) => {\n    if (cur.peerId === id) {\n      switch (data.type) {\n        case \"COUNTER_INCREMENT\":\n          acc.push({\n            ...cur,\n            counter: cur.counter + 1,\n          });\n          break;\n        case \"COUNTER_DECREMENT\":\n          acc.push({\n            ...cur,\n            counter: cur.counter - 1,\n          });\n          break;\n        case \"REMOTE_SET_NAME\":\n          acc.push({\n            ...cur,\n            name: data.name,\n          });\n          break;\n        default:\n          acc.push(cur);\n          break;\n      }\n    } else {\n      acc.push(cur);\n    }\n    return acc;\n  }, []);\n}\n\nexport function globalCount(counters) {\n  return counters.reduce((acc, { counter }) => counter + acc, 0);\n}\n\nexport default function Master() {\n  const { logs, logger } = useLogger();\n  const [peerId, setPeerId] = useState(null);\n  const [remotesList, setRemotesList] = useState([]);\n  const [errors, setErrors] = useState(null);\n\n  const { ready, api, peer, humanizeError } = usePeer();\n\n  const onRemoteConnect = ({ id }) => {\n    const countersFromStorage = getCountersFromStorage();\n    logger.log({ event: \"remote.connect\", payload: { id } });\n    setRemotesList((counters) => [\n      ...counters,\n      { counter: countersFromStorage?.[id] ?? 0, peerId: id },\n    ]);\n  };\n  const onRemoteDisconnect = ({ id }) => {\n    logger.log({ event: \"remote.disconnect\", payload: { id } });\n    setRemotesList((counters) =>\n      // eslint-disable-next-line no-shadow\n      counters.filter(({ peerId }) => peerId !== id),\n    );\n  };\n  const onData = ({ id }, data) => {\n    logger.log({ event: \"data\", data, id });\n    setRemotesList((counters) => {\n      const state = counterReducer(counters, { data, id });\n      persistCountersToStorage(state);\n      return state;\n    });\n  };\n  const onPeerError = (error) => {\n    setPeerId(null);\n    logger.error({ event: \"error\", error });\n    setErrors([humanizeError(error)]);\n  };\n\n  useEffect(() => {\n    if (peer) {\n      peer.on(\"error\", onPeerError);\n    }\n    return () => {\n      if (peer) {\n        peer.off(\"error\", onPeerError);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [peer]);\n\n  useEffect(() => {\n    if (ready) {\n      setPeerId(peer.id);\n      logger.log({\n        event: \"open\",\n        comment: \"Master connected\",\n        payload: { id: peer.id },\n      });\n      api.on(\"remote.connect\", onRemoteConnect);\n      api.on(\"remote.disconnect\", onRemoteDisconnect);\n      api.on(\"data\", onData);\n    }\n    return () => {\n      console.log(\"Master.jsx.cleanup\");\n      if (ready) {\n        api.off(\"remote.connect\", onRemoteConnect);\n        api.off(\"remote.disconnect\", onRemoteDisconnect);\n        api.off(\"data\", onData);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ready]);\n  return (\n    <>\n      <ErrorsDisplay data={errors} />\n      {/* {peerId ? <QrcodeDisplay data={makeRemotePeerUrl(peerId)} /> : null}\n      <OpenRemote peerId={peerId} /> */}\n      {peerId && (\n        <div>\n          <a\n            href={`${location.href}:${peerId}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {peerId}\n          </a>\n        </div>\n      )}\n      <div>\n        Global counter: <CounterDisplay count={globalCount(remotesList)} />\n      </div>\n      <RemotesList\n        data={remotesList}\n        onPingAll={() => {\n          if (ready) {\n            // api.sendAll({\n            //   type: \"PING\",\n            //   date: new Date(),\n            // });\n          }\n        }}\n        onPing={(id) => {\n          if (ready) {\n            // api.sendTo(id, {\n            //   type: \"PING\",\n            //   date: new Date(),\n            // });\n          }\n        }}\n      />\n      <ConsoleDisplay data={[...logs].reverse()} />\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function RemoteCountControl({\n  onIncrement,\n  onDecrement,\n  disabled,\n}) {\n  return (\n    <div className=\"counter-control\">\n      <button\n        type=\"button\"\n        className=\"counter-control-add\"\n        onClick={() => onIncrement()}\n        style={{ marginRight: \"2px\" }}\n        disabled={disabled}\n      >\n        +\n      </button>\n      <button\n        type=\"button\"\n        className=\"counter-control-sub\"\n        onClick={() => onDecrement()}\n        style={{ marginLeft: \"2px\" }}\n        disabled={disabled}\n      >\n        -\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function RemoteNameControl({\n  onChangeName,\n  onConfirmName,\n  name,\n  disabled,\n}) {\n  return (\n    <form\n      className=\"form-set-name\"\n      action=\".\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        onConfirmName((e.target as any).name.value);\n      }}\n    >\n      <label>\n        <input\n          type=\"text\"\n          placeholder=\"Enter name\"\n          onChange={(e) => onChangeName(e.target.value)}\n          value={name}\n          disabled={disabled}\n        />\n        <button type=\"submit\" disabled={disabled}>\n          OK\n        </button>\n      </label>\n    </form>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { usePeer } from \"@webrtc-remote-control/react\";\n\nimport ErrorsDisplay from \"./ErrorsDisplay\";\nimport RemoteCountControl from \"./RemoteCountControl\";\nimport RemoteNameControl from \"./RemoteNameControl\";\nimport ConsoleDisplay from \"./ConsoleDisplay\";\n\nimport { useLogger, useSessionStorage } from \"./react-common\";\n\nexport default function Remote() {\n  const { logs, logger } = useLogger();\n  const [peerId, setPeerId] = useState(null);\n  const [name, setName] = useSessionStorage(\"remote-name\", \"\");\n  const [errors, setErrors] = useState(null);\n\n  const { ready, api, peer, humanizeError } = usePeer();\n\n  const onRemoteDisconnect = (payload) => {\n    logger.log({ event: \"remote.disconnect\", payload });\n  };\n  const onRemoteReconnect = (payload) => {\n    logger.log({ event: \"remote.reconnect\", payload });\n    if (name) {\n      (api as any).send({ type: \"REMOTE_SET_NAME\", name });\n    }\n  };\n  const onPeerError = (error) => {\n    setPeerId(null);\n    logger.error({ event: \"error\", error });\n    setErrors([humanizeError(error)]);\n  };\n  const onData = (_, data) => {\n    logger.log({ event: \"data\", data });\n    // if (data.type === \"PING\") {\n    //   window?.frameworkIconPlay();\n    // }\n  };\n\n  useEffect(() => {\n    if (peer) {\n      peer.on(\"error\", onPeerError);\n    }\n    return () => {\n      if (peer) {\n        peer.off(\"error\", onPeerError);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [peer]);\n\n  useEffect(() => {\n    if (ready) {\n      setPeerId(peer.id);\n      logger.log({\n        event: \"open\",\n        comment: \"Remote connected\",\n        payload: { id: peer.id },\n      });\n      api.on(\"remote.disconnect\", onRemoteDisconnect);\n      api.on(\"remote.reconnect\", onRemoteReconnect);\n      api.on(\"data\", onData);\n      if (name) {\n        (api as any).send({ type: \"REMOTE_SET_NAME\", name });\n      }\n    }\n    return () => {\n      console.log(\"Remote.jsx.cleanup\");\n      if (ready) {\n        api.off(\"remote.disconnect\", onRemoteDisconnect);\n        api.off(\"remote.reconnect\", onRemoteReconnect);\n        api.off(\"data\", onData);\n      }\n    };\n  }, [ready]);\n\n  function onIncrement() {\n    if (ready) {\n      (api as any).send({ type: \"COUNTER_INCREMENT\" });\n    }\n  }\n  function onDecrement() {\n    if (ready) {\n      (api as any).send({ type: \"COUNTER_DECREMENT\" });\n    }\n  }\n  function onChangeName(value) {\n    setName(value);\n  }\n  function onConfirmName() {\n    if (ready) {\n      (api as any).send({ type: \"REMOTE_SET_NAME\", name });\n    }\n  }\n  return (\n    <>\n      <ErrorsDisplay data={errors} />\n      <RemoteCountControl\n        onIncrement={onIncrement}\n        onDecrement={onDecrement}\n        disabled={!peerId}\n      />\n      <RemoteNameControl\n        onChangeName={onChangeName}\n        name={name}\n        onConfirmName={onConfirmName}\n        disabled={!peerId}\n      />\n      <p>\n        Check the counter updating in real-time on the original page, thanks to\n        WebRTC.\n      </p>\n      <ConsoleDisplay data={[...logs].reverse()} />\n    </>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport Peer from \"peerjs\";\nimport { WebRTCRemoteControlProvider } from \"@webrtc-remote-control/react\";\nimport Master from \"./Master\";\nimport Remote from \"./Remote\";\n\nexport const API_URL = process.env.API_URL || \"\";\n\nconst VITE_USE_LOCAL_PEER_SERVER = true;\n\nexport function getPeerjsConfig() {\n  // when using the local signaling server\n  // if (import.meta.env.VITE_USE_LOCAL_PEER_SERVER) {\n  if (VITE_USE_LOCAL_PEER_SERVER) {\n    return {\n      host: \"localhost\",\n      port: 9000,\n      path: \"/myapp\",\n    };\n  }\n  // // default case, we use the alternate server since on some mobile carriers (orange - France)\n  // the default host 0.peerjs.com hangs on forever - see https://github.com/peers/peerjs/issues/948#issuecomment-1107437915\n  // todo what if this fix triggers the same kind of problem on other carriers ? implement some kind of balancing ?\n  return {\n    host: \"0.peerjs.com\",\n    port: 443,\n    path: \"/\",\n  };\n}\n\n// https://github.com/topheman/webrtc-remote-control\nexport default function Section() {\n  const [, masterPeerId = null] = useMemo(\n    () => decodeURI(location.hash).match(/^#[^:]+:(.+)?/) || [],\n    [],\n  );\n  const mode = useMemo(\n    () => (masterPeerId ? \"remote\" : \"master\"),\n    [masterPeerId],\n  );\n\n  console.log({ masterPeerId, mode });\n\n  return (\n    <section>\n      <h2>WebRtc</h2>\n      {mode && (\n        <WebRTCRemoteControlProvider\n          mode={mode}\n          init={({ getPeerId }) =>\n            new Peer(\n              getPeerId(),\n              // line bellow is optional - you can rely on the signaling server exposed by peerjs\n              getPeerjsConfig(),\n            )\n          }\n          masterPeerId={masterPeerId}\n          sessionStorageKey=\"webrtc-remote-control-peer-id-react\"\n        >\n          {mode === \"remote\" ? <Remote /> : <Master />}\n        </WebRTCRemoteControlProvider>\n      )}\n    </section>\n  );\n}\n"],"names":["ErrorsDisplay","data","React","JSON","stringify","CounterDisplay","count","RemotesList","onPing","onPingAll","ref","useRef","onPingAllCallback","useCallback","onPingCallback","e","detail","id","useEffect","refCurrent","current","addEventListener","removeEventListener","ConsoleDisplay","useLogger","logs","setLogs","useState","logger","console","MASTER_PERSISTANCE_COUNTERS_SESSION_STORAGE_KEY","Master","peerId","setPeerId","remotesList","setRemotesList","errors","setErrors","ready","api","peer","humanizeError","usePeer","onRemoteConnect","countersFromStorage","parse","sessionStorage","getItem","getCountersFromStorage","log","event","payload","counters","counter","onRemoteDisconnect","filter","onData","state","reduce","acc","cur","type","push","name","counterReducer","setItem","persistCountersToStorage","onPeerError","error","on","off","comment","href","location","target","rel","reverse","RemoteCountControl","onIncrement","onDecrement","disabled","className","onClick","style","marginRight","marginLeft","RemoteNameControl","onChangeName","onConfirmName","action","onSubmit","preventDefault","value","placeholder","onChange","Remote","setName","key","initialValue","storedValue","setStoredValue","window","item","valueToStore","Function","useSessionStorage","onRemoteReconnect","send","_","VITE_USE_LOCAL_PEER_SERVER","Section","masterPeerId","useMemo","decodeURI","hash","match","mode","WebRTCRemoteControlProvider","init","getPeerId","Peer","host","port","path","sessionStorageKey"],"sourceRoot":""}
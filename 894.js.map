{"version":3,"file":"894.js","mappings":"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","sources":["webpack://@dev/web/../../node_modules/.pnpm/suspend-react@0.1.3_react@18.2.0/node_modules/suspend-react/index.js","webpack://@dev/web/../audio/src/containers/Filters/index.tsx","webpack://@dev/web/../audio/src/containers/Player/index.tsx","webpack://@dev/web/../audio/src/containers/Volume/index.tsx","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/skip.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/filter.js","webpack://@dev/web/../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/tap.js","webpack://@dev/web/../audio/src/containers/index.tsx"],"sourcesContent":["const isPromise = promise => typeof promise === 'object' && typeof promise.then === 'function';\n\nconst globalCache = [];\n\nfunction shallowEqualArrays(arrA, arrB, equal = (a, b) => a === b) {\n  if (arrA === arrB) return true;\n  if (!arrA || !arrB) return false;\n  const len = arrA.length;\n  if (arrB.length !== len) return false;\n\n  for (let i = 0; i < len; i++) if (!equal(arrA[i], arrB[i])) return false;\n\n  return true;\n}\n\nfunction query(fn, keys = null, preload = false, config = {}) {\n  // If no keys were given, the function is the key\n  if (keys === null) keys = [fn];\n\n  for (const entry of globalCache) {\n    // Find a match\n    if (shallowEqualArrays(keys, entry.keys, entry.equal)) {\n      // If we're pre-loading and the element is present, just return\n      if (preload) return undefined; // If an error occurred, throw\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'error')) throw entry.error; // If a response was successful, return\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'response')) {\n        if (config.lifespan && config.lifespan > 0) {\n          if (entry.timeout) clearTimeout(entry.timeout);\n          entry.timeout = setTimeout(entry.remove, config.lifespan);\n        }\n\n        return entry.response;\n      } // If the promise is still unresolved, throw\n\n\n      if (!preload) throw entry.promise;\n    }\n  } // The request is new or has changed.\n\n\n  const entry = {\n    keys,\n    equal: config.equal,\n    remove: () => {\n      const index = globalCache.indexOf(entry);\n      if (index !== -1) globalCache.splice(index, 1);\n    },\n    promise: // Execute the promise\n    (isPromise(fn) ? fn : fn(...keys) // When it resolves, store its value\n    ).then(response => {\n      entry.response = response; // Remove the entry in time if a lifespan was given\n\n      if (config.lifespan && config.lifespan > 0) {\n        entry.timeout = setTimeout(entry.remove, config.lifespan);\n      }\n    }) // Store caught errors, they will be thrown in the render-phase to bubble into an error-bound\n    .catch(error => entry.error = error)\n  }; // Register the entry\n\n  globalCache.push(entry); // And throw the promise, this yields control back to React\n\n  if (!preload) throw entry.promise;\n  return undefined;\n}\n\nconst suspend = (fn, keys, config) => query(fn, keys, false, config);\n\nconst preload = (fn, keys, config) => void query(fn, keys, true, config);\n\nconst peek = keys => {\n  var _globalCache$find;\n\n  return (_globalCache$find = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal))) == null ? void 0 : _globalCache$find.response;\n};\n\nconst clear = keys => {\n  if (keys === undefined || keys.length === 0) globalCache.splice(0, globalCache.length);else {\n    const entry = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal));\n    if (entry) entry.remove();\n  }\n};\n\nexport { clear, peek, preload, suspend };\n","import React, {\n  type Dispatch,\n  type SetStateAction,\n  useEffect,\n  useMemo,\n  useState,\n  useCallback,\n} from \"react\";\nimport { Subject, debounceTime, distinctUntilChanged, map } from \"rxjs\";\n\nconst INITIAL_FILTERS = {\n  search: \"\",\n};\n\ntype FiltersState = typeof INITIAL_FILTERS;\n\nexport const stringifyFilters = ({ search, ...filters }: FiltersState) =>\n  JSON.stringify({\n    ...filters,\n    search: search.toLowerCase().trim(),\n  });\n\nexport const initialQueries = () =>\n  JSON.parse(stringifyFilters(INITIAL_FILTERS));\n\nexport default function Filters({\n  setQueries,\n}: {\n  setQueries: Dispatch<SetStateAction<FiltersState>>;\n}) {\n  const [filters, setFilters] = useState(INITIAL_FILTERS);\n  const search$ = useMemo(() => new Subject<any>(), []);\n\n  useEffect(() => {\n    const subscription = search$\n      .pipe(map(stringifyFilters), distinctUntilChanged(), debounceTime(400))\n      .subscribe((filters) =>\n        setQueries((queries) => ({ ...queries, ...JSON.parse(filters) })),\n      );\n    return () => subscription.unsubscribe();\n  }, [search$]);\n\n  useEffect(() => {\n    search$.next(filters);\n  }, [filters]);\n\n  return (\n    <div>\n      <input\n        type=\"search\"\n        value={filters.search}\n        onChange={useCallback(\n          ({ target }) =>\n            setFilters((filters) => ({\n              ...filters,\n              search: target.value,\n            })),\n          [],\n        )}\n      />\n    </div>\n  );\n}\n","import React, {\n  type ComponentProps,\n  type MouseEventHandler,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\n\nexport interface MetaType {\n  title: string;\n  album?: string;\n  artist?: string;\n  artwork?: { src: string }[];\n}\n\nexport const Button = ({\n  title,\n  onPress,\n  ...rest\n}: {\n  title: string;\n  onPress: MouseEventHandler;\n  disabled?: boolean;\n}) => (\n  <button onClick={onPress} {...rest}>\n    {title}\n  </button>\n);\n\nexport const Link = ({\n  title,\n  onPress,\n  ...rest\n}: ComponentProps<\"a\"> & {\n  title: string;\n  onPress: MouseEventHandler;\n}) => (\n  <a\n    href=\"#\"\n    onClick={onPress ? (e) => (e.preventDefault(), onPress(e)) : undefined}\n    {...rest}\n  >\n    {title}\n  </a>\n);\n\nexport const Text = \"div\";\nexport const View = \"div\";\n\nexport default function Player({\n  uri,\n  loop,\n  meta,\n  onEnded,\n}: {\n  uri: string;\n  loop: boolean;\n  meta: MetaType;\n  onEnded?: () => void;\n}) {\n  const [playing, setPlaying] = useState(false);\n  const ref = useRef<HTMLAudioElement>(null);\n\n  async function play() {\n    if (ref.current) {\n      await ref.current.play();\n      console.log([\"play\"]);\n    }\n  }\n\n  async function pause() {\n    if (ref.current) {\n      ref.current.pause();\n    }\n  }\n\n  useEffect(() => {\n    const audio = ref.current;\n    if (audio) {\n      const onPlay = (e) => (console.log([\"onPlay\"], e), setPlaying(true));\n      const onPause = (e) => (console.log([\"onPause\"], e), setPlaying(false));\n      // const onEnded = (e) => (console.log([\"onEnded\"], e));\n\n      audio.addEventListener(\"play\", onPlay);\n      audio.addEventListener(\"pause\", onPause);\n      audio.addEventListener(\"ended\", onEnded);\n\n      return () => {\n        audio.removeEventListener(\"play\", onPlay);\n        audio.removeEventListener(\"pause\", onPause);\n        audio.removeEventListener(\"ended\", onEnded);\n      };\n    }\n  }, [ref, onEnded]);\n\n  useEffect(() => {\n    if (playing) {\n      // https://web.dev/media-session/\n      if (\"mediaSession\" in navigator) {\n        navigator.mediaSession.metadata = new MediaMetadata(meta);\n      }\n    }\n  }, [playing, meta]);\n\n  return (\n    <View>\n      {playing ? (\n        <Button title=\"Pause\" onPress={pause} />\n      ) : (\n        <Button title=\"Play\" onPress={play} disabled={!uri} />\n      )}\n      <audio ref={ref} src={uri} loop={loop} autoPlay controls />\n      <Button\n        title=\"Forward\"\n        onPress={() => {\n          const audio = ref.current;\n          if (audio && audio.duration) {\n            audio.currentTime = audio.duration - 3;\n          }\n        }}\n        disabled={!ref}\n      />\n    </View>\n  );\n}\n","import React, {\n  type ChangeEventHandler,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { Subject, debounceTime, distinctUntilChanged, skip, tap } from \"rxjs\";\n\nconst useId = () => \"volume-list\";\n\nexport default function Volume() {\n  const [volume, setVolume] = useState(NaN);\n\n  useEffect(() => {\n    fetch(\"api/audio/volume\")\n      .then((res) => res.json())\n      .then(({ volume }) => volume)\n      .then(setVolume);\n  }, []);\n\n  const volume$ = useMemo(() => new Subject<number>(), []);\n\n  useEffect(() => {\n    const subscription = volume$\n      .pipe(\n        skip(1),\n        tap(console.log),\n        distinctUntilChanged(),\n        debounceTime(400),\n      )\n      .subscribe((volume) =>\n        fetch(`api/audio/volume/${volume}`)\n          .then((res) => res.json())\n          .then(console.log),\n      );\n    return () => subscription.unsubscribe();\n  }, [volume$]);\n\n  useEffect(() => {\n    if (!Number.isNaN(volume)) {\n      volume$.next(volume);\n    }\n  }, [volume]);\n\n  const handleChange = useCallback<ChangeEventHandler<HTMLInputElement>>(\n    ({ target }) => setVolume(Number(target.value)),\n    [],\n  );\n\n  const listId = useId();\n\n  return (\n    <div>\n      {!Number.isNaN(volume) && (\n        <input\n          type=\"range\"\n          list={listId}\n          min=\"0\"\n          max=\"100\"\n          value={volume}\n          onChange={handleChange}\n        />\n      )}\n      <datalist id={listId}>\n        {[...Array(10 + 1)].map((_, index, array) => (\n          <option\n            key={index}\n            value={(100 / (array.length - 1)) * index}\n          ></option>\n        ))}\n      </datalist>\n    </div>\n  );\n}\n","import { filter } from './filter';\nexport function skip(count) {\n    return filter(function (_, index) { return count <= index; });\n}\n//# sourceMappingURL=skip.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function filter(predicate, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return predicate.call(thisArg, value, index++) && subscriber.next(value); }));\n    });\n}\n//# sourceMappingURL=filter.js.map","import { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nexport function tap(observerOrNext, error, complete) {\n    var tapObserver = isFunction(observerOrNext) || error || complete\n        ?\n            { next: observerOrNext, error: error, complete: complete }\n        : observerOrNext;\n    return tapObserver\n        ? operate(function (source, subscriber) {\n            var _a;\n            (_a = tapObserver.subscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n            var isUnsub = true;\n            source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n                var _a;\n                (_a = tapObserver.next) === null || _a === void 0 ? void 0 : _a.call(tapObserver, value);\n                subscriber.next(value);\n            }, function () {\n                var _a;\n                isUnsub = false;\n                (_a = tapObserver.complete) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n                subscriber.complete();\n            }, function (err) {\n                var _a;\n                isUnsub = false;\n                (_a = tapObserver.error) === null || _a === void 0 ? void 0 : _a.call(tapObserver, err);\n                subscriber.error(err);\n            }, function () {\n                var _a, _b;\n                if (isUnsub) {\n                    (_a = tapObserver.unsubscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n                }\n                (_b = tapObserver.finalize) === null || _b === void 0 ? void 0 : _b.call(tapObserver);\n            }));\n        })\n        :\n            identity;\n}\n//# sourceMappingURL=tap.js.map","import React, {\n  type ChangeEventHandler,\n  Suspense,\n  useCallback,\n  useMemo,\n  useState,\n} from \"react\";\nimport { suspend } from \"suspend-react\";\n\nimport Filters, { initialQueries } from \"./Filters\";\nimport Player, { MetaType, Link, Text, View } from \"./Player\";\nimport Volume from \"./Volume\";\n\nfunction Loading() {\n  return (\n    <View>\n      <Text>Loading...</Text>\n    </View>\n  );\n}\n\nfunction Data({\n  data,\n  expanded: initialExpanded = false,\n}: {\n  data: object;\n  expanded?: boolean;\n}) {\n  const [expanded, setExpanded] = useState(initialExpanded);\n\n  return (\n    <pre>\n      {expanded ? (\n        JSON.stringify(data, null, 2)\n      ) : (\n        <>\n          [\n          <a href=\"#\" onClick={(e) => (e.preventDefault(), setExpanded(true))}>\n            ...\n          </a>\n          ]\n        </>\n      )}\n    </pre>\n  );\n}\n\nconst API_URL = process.env.API_URL || \"\";\n\ninterface ItemType {\n  name: string;\n  year?: string;\n  album?: string;\n  title?: string;\n  artists?: string[];\n  artwork?: MetaType[\"artwork\"];\n  picture?: string[];\n}\n\nfunction Playlist({ version = 1 }) {\n  const [selected, setSelected] = useState<string[]>([]);\n  const [loop, setLoop] = useState(false);\n  const [href, setHref] = useState<string | undefined>();\n  const [meta, setMeta] = useState<MetaType | undefined>();\n  const data = suspend(async () => {\n    const res = await fetch(\n      `${API_URL ? `${API_URL}/` : \"\"}api/audio?${version}`,\n    );\n    return res.json() as Promise<ItemType[]>;\n  }, [version]);\n  const [queries, setQueries] = useState(() => initialQueries());\n\n  const handleSelect = useCallback<ChangeEventHandler<HTMLInputElement>>(\n    ({ target }) =>\n      ((id) =>\n        setSelected((selected) =>\n          target.checked\n            ? selected.concat(id)\n            : selected.filter((item) => item !== id),\n        ))(target.value),\n    [],\n  );\n\n  const list = useMemo(\n    () =>\n      (data || []).map(({ name, ...rest }) => ({\n        ...rest,\n        name,\n        href: `${API_URL}/api/audio/${encodeURIComponent(name)}`,\n      })),\n    [data],\n  );\n\n  const handlePlay = useCallback(\n    (id: string) =>\n      (({ name, href, title, album, artists, artwork }) => (\n        setHref(href),\n        setMeta(\n          Object.assign(\n            title\n              ? {\n                  title,\n                  album,\n                  artist: artists.join(\", \"),\n                }\n              : { title: name },\n            artwork && {\n              artwork: artwork.map(({ src, ...artwork }) => ({\n                src: new URL(\n                  `${href}/${src}`,\n                  document.location.origin || \"\",\n                ).toString(),\n                ...artwork,\n              })),\n            },\n          ),\n        )\n      ))(list.find((item) => item.href === id)),\n    [list],\n  );\n\n  const handleEnded = useCallback(() => {\n    console.log([\"onEnded\"]);\n    if (selected.length > 0) {\n      const index = selected.indexOf(href) + 1;\n      handlePlay(index < selected.length ? selected[index] : selected[0]);\n    }\n  }, [href, selected]);\n\n  const current = href;\n\n  const filtered = useMemo(\n    () =>\n      list.filter((item) =>\n        item.name.toLocaleLowerCase().includes(queries.search),\n      ),\n    [list, queries],\n  );\n\n  console.log({ filtered, list, meta });\n\n  return (\n    <View>\n      <Filters setQueries={setQueries} />\n      <ul>\n        {filtered.map(({ name, href, title, artists, picture }, key) => (\n          <li\n            key={key}\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              padding: 1,\n              alignItems: \"center\",\n              background: href === current ? \"aliceblue\" : \"\",\n            }}\n          >\n            <input\n              type=\"checkbox\"\n              value={href}\n              checked={selected.includes(href)}\n              onChange={handleSelect}\n            />\n            {picture &&\n              picture.map((src, key) => (\n                <img key={key} src={src} width=\"50\" height=\"50\" />\n              ))}\n            <Link\n              style={{ padding: 4 }}\n              title={title ? `${artists.join(\", \")} - ${title}` : name}\n              onPress={() => (setSelected([href]), handlePlay(href))}\n            />\n          </li>\n        ))}\n      </ul>\n      <Player\n        uri={href}\n        loop={selected.length === 1 && selected.includes(href)}\n        meta={meta}\n        onEnded={handleEnded}\n      />\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={loop}\n          onChange={({ target }) => setLoop(target.checked)}\n        />\n        <span>loop</span>\n      </label>\n      <Data data={data} />\n    </View>\n  );\n}\n\nexport default function Audio() {\n  return (\n    <View>\n      <Text>{`API_URL: ${API_URL}`}</Text>\n      <Volume />\n      <Suspense fallback={<Loading />}>\n        <Playlist />\n      </Suspense>\n    </View>\n  );\n}\n"],"names":["globalCache","shallowEqualArrays","arrA","arrB","equal","a","b","len","length","i","suspend","fn","keys","config","preload","entry","Object","prototype","hasOwnProperty","call","error","lifespan","timeout","clearTimeout","setTimeout","remove","response","promise","index","indexOf","splice","then","catch","push","query","INITIAL_FILTERS","search","stringifyFilters","filters","JSON","stringify","toLowerCase","trim","initialQueries","parse","Filters","setQueries","setFilters","useState","search$","useMemo","Subject","useEffect","subscription","pipe","map","distinctUntilChanged","debounceTime","subscribe","queries","unsubscribe","next","React","type","value","onChange","useCallback","target","Button","title","onPress","rest","_extends","onClick","Link","href","e","preventDefault","undefined","Text","View","Player","uri","loop","meta","onEnded","playing","setPlaying","ref","useRef","audio","current","onPlay","console","log","onPause","addEventListener","removeEventListener","navigator","mediaSession","metadata","MediaMetadata","async","pause","play","disabled","src","autoPlay","controls","duration","currentTime","useId","Volume","volume","setVolume","NaN","fetch","res","json","volume$","count","predicate","_","source","subscriber","thisArg","observerOrNext","tapObserver","isFunction","complete","_a","isUnsub","err","_b","finalize","identity","Number","isNaN","handleChange","listId","list","min","max","id","Array","array","key","Loading","Data","data","expanded","initialExpanded","setExpanded","API_URL","Playlist","version","selected","setSelected","setLoop","setHref","setMeta","handleSelect","checked","concat","filter","item","name","encodeURIComponent","handlePlay","album","artists","artwork","assign","artist","join","URL","document","location","origin","toString","find","handleEnded","filtered","toLocaleLowerCase","includes","picture","style","display","flexDirection","padding","alignItems","background","width","height","Audio","Suspense","fallback"],"sourceRoot":""}
{"version":3,"file":"141.js","mappings":"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","sources":["webpack://@dev/web/../stream/src/schema/index.ts","webpack://@dev/web/../stream/src/containers/index.tsx"],"sourcesContent":["import { z } from \"zod\";\n\nexport const StreamsSchema = z.object({\n  live: z\n    .record(\n      z.string(),\n      z.object({\n        publisher: z.object({\n          app: z.string(),\n          stream: z.string(),\n          clientId: z.string(),\n          connectCreated: z.string(),\n          bytes: z.number(),\n          ip: z.string(),\n          audio: z\n            .object({\n              codec: z.string(),\n              profile: z.string(),\n              samplerate: z.number(),\n              channels: z.number(),\n            })\n            .nullable(),\n          video: z.object({\n            codec: z.string(),\n            width: z.number(),\n            height: z.number(),\n            profile: z.string(),\n            level: z.number(),\n            fps: z.number(),\n          }),\n        }),\n        subscribers: z.array(z.unknown()),\n      }),\n    )\n    .optional(),\n});\n","// import flvjs from \"pro-flv.js\";\nimport flvjs from \"mpegts.js\";\nimport React, {\n  type ChangeEventHandler,\n  type FormEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { StreamsSchema } from \"../schema\";\n\nexport const MEDIA_URL =\n  process.env.MEDIA_URL ||\n  (({ protocol, hostname }) => `${protocol}//${hostname}:7000`)(\n    new URL(window.location.href),\n  );\n\n// https://github.com/illuspas/Node-Media-Server\nfunction Stream({ stream: url }: { stream: string }) {\n  const [error, setError] = useState<object>(null);\n  const videoRef = useRef(null);\n\n  useEffect(() => {\n    // https://github.com/illuspas/pro-fiv.js\n    if (flvjs.isSupported()) {\n      const video = videoRef.current;\n      const flvPlayer = flvjs.createPlayer({\n        type: \"flv\",\n        url,\n      });\n      flvPlayer.attachMediaElement(video);\n      flvPlayer.on(flvjs.Events.ERROR, setError);\n      flvPlayer.load();\n      // flvPlayer.play();\n    }\n  }, [url]);\n\n  return (\n    <div>\n      <video ref={videoRef} width=\"480\" height=\"270\" autoPlay controls></video>\n      {error && (\n        <pre\n          style={{\n            background: \"crimson\",\n            color: \"white\",\n            margin: \".5em\",\n            padding: \"1em\",\n          }}\n        >\n          {JSON.stringify(error)}\n        </pre>\n      )}\n    </div>\n  );\n}\n\nfunction MJPEGStream({ stream: url }: { stream: string }) {\n  return (\n    <div>\n      <video\n        crossOrigin=\"anonymous\"\n        src={url}\n        width=\"480\"\n        height=\"270\"\n        autoPlay\n        controls\n      ></video>\n    </div>\n  );\n}\n\nexport default function Section() {\n  const [item, setItem] = useState(() => ({\n    value: \"\",\n    error: \"\",\n  }));\n  const [list, setList] = useState<string[] | null>(null);\n  const [stream, setStream] = useState(null);\n\n  useEffect(() => {\n    (window\n      ? Promise.resolve({\n          live: {\n            NZXT: {},\n          },\n        })\n      : fetch(`${MEDIA_URL}/api/streams`, {\n          headers: {\n            Authorization: `Basic ${btoa([\"admin\", \"admin\"].join(\":\"))}`,\n          },\n        })\n          .then((res) => res.json())\n          .then(StreamsSchema.parseAsync)\n    )\n      .then((data) =>\n        Object.keys(data.live || {}).map(\n          (name) => `${MEDIA_URL}/live/${name}.flv`,\n        ),\n      )\n      // .then((list) => [\"http://192.168.2.23:8080/feed.flv\", ...list])\n      .then((list) => list.length > 0 && (setList(list), setStream(list[0])));\n  }, []);\n\n  const handleChangeStream = useCallback<ChangeEventHandler<HTMLSelectElement>>(\n    ({ target }) => setStream(target.value),\n    [],\n  );\n\n  const handleSubmit = useCallback(\n    (e: FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      try {\n        const url = new URL(item.value).toString();\n        console.log({ url });\n        setList((list) => list.filter((item) => item !== url).concat(url));\n        setItem((item) => ({ ...item, value: \"\" }));\n        setStream(url);\n      } catch (e) {\n        setItem((item) => ({ ...item, error: e.toString() }));\n      }\n    },\n    [item.value],\n  );\n\n  return (\n    <section>\n      <h2>Stream</h2>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: 480,\n        }}\n      >\n        <form onSubmit={handleSubmit}>\n          <div\n            style={{\n              display: \"flex\",\n              flex: \"1 auto\",\n            }}\n          >\n            <input\n              style={{ flexGrow: 1, margin: \".25em\" }}\n              type=\"text\"\n              value={item.value}\n              onChange={({ target }) =>\n                setItem((item) => ({ ...item, value: target.value, error: \"\" }))\n              }\n            />\n            <button\n              style={{ margin: \".25em\", height: \"2em\" }}\n              disabled={item.value.length <= 0}\n            >\n              add\n            </button>\n          </div>\n          {item.error && (\n            <pre\n              style={{\n                background: \"crimson\",\n                color: \"white\",\n                margin: \".5em\",\n                padding: \"1em\",\n              }}\n            >\n              {item.error}\n            </pre>\n          )}\n        </form>\n        {stream && list && (\n          <select\n            style={{ margin: \".25em\", height: \"2em\" }}\n            value={stream}\n            onChange={handleChangeStream}\n          >\n            {list.map((url) => (\n              <option key={url} value={url}>\n                {url}\n              </option>\n            ))}\n          </select>\n        )}\n        {stream && <Stream stream={stream} />}\n      </div>\n      <a href={`${MEDIA_URL}/admin/streams`} target=\"_blank\">\n        streams\n      </a>\n      <pre style={{ background: \"linen\", margin: \".5em\", padding: \"1em\" }}>\n        {`~ $ git clone https://github.com/illuspas/Node-Media-Server\n\n~/Node-Media-Server $ docker build . -t nms\n~/Node-Media-Server $ docker run --name nms -d -p 1935:1935 -p 7000:8000 -p 8443:8443 nms\n`}\n      </pre>\n      {stream && (\n        <pre style={{ background: \"linen\", margin: \".5em\", padding: \"1em\" }}>\n          {`ffmpeg -stream_loop -1 -re -i share/library/BilaShsQphM.mp4 -c copy -f flv ${((url) => `rtmp://${url.hostname}${url.pathname.split(\".\")[0]}`)(new URL(stream))}\n`}\n        </pre>\n      )}\n      <h2>MJPEGStream</h2>\n      <MJPEGStream stream=\"//192.168.2.23:8080/feed.mjpg\" />\n      <pre style={{ background: \"linen\", margin: \".5em\", padding: \"1em\" }}>\n        {`gphoto2 --set-config viewfinder=1\ngphoto2 --capture-movie --stdout | ffmpeg -re -i pipe:0 -pix_fmt yuv420p -s:v 1920x1080 -listen 1 -headers \"Access-Control-Allow-Origin: *\" -f mjpeg http://192.168.2.23:8080/feed.mjpg\n`}\n      </pre>\n    </section>\n  );\n}\n"],"names":["StreamsSchema","z","live","publisher","app","stream","clientId","connectCreated","bytes","ip","audio","codec","profile","samplerate","channels","nullable","video","width","height","level","fps","subscribers","optional","MEDIA_URL","protocol","hostname","URL","window","location","href","Stream","url","error","setError","useState","videoRef","useRef","useEffect","flvjs","current","flvPlayer","type","attachMediaElement","on","ERROR","load","React","ref","autoPlay","controls","style","background","color","margin","padding","JSON","stringify","MJPEGStream","crossOrigin","src","Section","item","setItem","value","list","setList","setStream","Promise","resolve","NZXT","fetch","headers","Authorization","btoa","join","then","res","json","parseAsync","data","Object","keys","map","name","length","handleChangeStream","useCallback","target","handleSubmit","e","preventDefault","toString","console","log","filter","concat","display","flexDirection","onSubmit","flex","flexGrow","onChange","disabled","key","pathname","split"],"sourceRoot":""}
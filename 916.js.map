{"version":3,"file":"916.js","mappings":"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","sources":["webpack://@dev/web/../../node_modules/suspend-react/dist/index.js","webpack://@dev/web/./src/containers/Audio/Player/index.tsx","webpack://@dev/web/./src/containers/Audio/index.tsx"],"sourcesContent":["const globalCache = [];\n\nfunction shallowEqualArrays(arrA, arrB, equal = (a, b) => a === b) {\n  if (arrA === arrB) return true;\n  if (!arrA || !arrB) return false;\n  const len = arrA.length;\n  if (arrB.length !== len) return false;\n\n  for (let i = 0; i < len; i++) if (!equal(arrA[i], arrB[i])) return false;\n\n  return true;\n}\n\nfunction query(fn, keys, preload = false, config = {}) {\n  for (const entry of globalCache) {\n    // Find a match\n    if (shallowEqualArrays(keys, entry.keys, entry.equal)) {\n      // If we're pre-loading and the element is present, just return\n      if (preload) return undefined; // If an error occurred, throw\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'error')) throw entry.error; // If a response was successful, return\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'response')) {\n        if (config.lifespan && config.lifespan > 0) {\n          if (entry.timeout) clearTimeout(entry.timeout);\n          entry.timeout = setTimeout(entry.remove, config.lifespan);\n        }\n\n        return entry.response;\n      } // If the promise is still unresolved, throw\n\n\n      if (!preload) throw entry.promise;\n    }\n  } // The request is new or has changed.\n\n\n  const entry = {\n    keys,\n    equal: config.equal,\n    remove: () => {\n      const index = globalCache.indexOf(entry);\n      if (index !== -1) globalCache.splice(index, 1);\n    },\n    promise: // Execute the promise\n    fn(...keys) // When it resolves, store its value\n    .then(response => {\n      entry.response = response; // Remove the entry in time if a lifespan was given\n\n      if (config.lifespan && config.lifespan > 0) {\n        entry.timeout = setTimeout(entry.remove, config.lifespan);\n      }\n    }) // Store caught errors, they will be thrown in the render-phase to bubble into an error-bound\n    .catch(error => entry.error = error)\n  }; // Register the entry\n\n  globalCache.push(entry); // And throw the promise, this yields control back to React\n\n  if (!preload) throw entry.promise;\n  return undefined;\n}\n\nconst suspend = (fn, keys, config) => query(fn, keys, false, config);\n\nconst preload = (fn, keys, config) => void query(fn, keys, true, config);\n\nconst peek = keys => {\n  var _globalCache$find;\n\n  return (_globalCache$find = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal))) == null ? void 0 : _globalCache$find.response;\n};\n\nconst clear = keys => {\n  if (keys === undefined || keys.length === 0) globalCache.splice(0, globalCache.length);else {\n    const entry = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal));\n    if (entry) entry.remove();\n  }\n};\n\nexport { clear, peek, preload, suspend };\n","import React, { MouseEventHandler, useRef, useState } from \"react\";\n\nexport const Button = ({\n  title,\n  onPress,\n}: {\n  title: string;\n  onPress: MouseEventHandler;\n}) => <button onClick={onPress}>{title}</button>;\nexport const Text = \"div\";\nexport const View = \"div\";\n\nexport default function Player({ uri }: { uri: string }) {\n  const [playing, setPlaying] = useState(false);\n  const ref = useRef<HTMLAudioElement>(null);\n  async function play() {\n    if (ref.current) {\n      setPlaying(true);\n      ref.current.play();\n    }\n  }\n  async function pause() {\n    if (ref.current) {\n      setPlaying(false);\n      ref.current.pause();\n    }\n  }\n\n  return (\n    <View>\n      {playing ? (\n        <Button title=\"Pause\" onPress={pause} />\n      ) : (\n        <Button title=\"Play\" onPress={play} />\n      )}\n      <audio ref={ref} src={uri} />\n    </View>\n  );\n}\n","import React, { Suspense, useMemo, useState } from \"react\";\nimport { suspend } from \"suspend-react\";\n\nimport Player, { Button, Text, View } from \"./Player\";\n\nfunction Loading() {\n  return (\n    <View>\n      <Text>Loading...</Text>\n    </View>\n  );\n}\n\nconst { API_URL = \"\" } = {};\n\nfunction Playlist({ version = 1 }) {\n  const [href, setHref] = useState<string | undefined>();\n  const data = suspend(async () => {\n    const res = await fetch(`${API_URL}/api/audio?${version}`);\n    return res.json() as Promise<string[]>;\n  }, [version]);\n\n  const list = useMemo(\n    () =>\n      (data || []).map((name) => ({\n        name,\n        href: `${API_URL}/api/audio/${encodeURIComponent(name)}`,\n      })),\n    [data]\n  );\n\n  console.log({ list });\n\n  return (\n    <View>\n      {list.map(({ name, href }, key) => (\n        <Button key={key} title={name} onPress={() => setHref(href)} />\n      ))}\n      {href && <Player key={href} uri={href} />}\n      <Text>{JSON.stringify(data, null, 2)}</Text>\n    </View>\n  );\n}\n\nexport default function Audio() {\n  return (\n    <View>\n      <Text>{`API_URL: ${API_URL}`}</Text>\n      <Suspense fallback={<Loading />}>\n        <Playlist />\n      </Suspense>\n    </View>\n  );\n}\n"],"names":["globalCache","shallowEqualArrays","arrA","arrB","equal","a","b","len","length","i","suspend","fn","keys","config","preload","entry","Object","prototype","hasOwnProperty","call","error","lifespan","timeout","clearTimeout","setTimeout","remove","response","promise","index","indexOf","splice","then","catch","push","query","Button","title","onPress","React","onClick","Text","View","Player","uri","playing","setPlaying","useState","ref","useRef","async","current","pause","play","src","Loading","API_URL","Playlist","version","href","setHref","data","fetch","json","list","useMemo","map","name","encodeURIComponent","console","log","key","JSON","stringify","Audio","Suspense","fallback"],"sourceRoot":""}
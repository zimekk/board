{"version":3,"file":"29.js","mappings":"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","sources":["webpack://@dev/web/../client/src/index.ts","webpack://@dev/web/../lan/src/containers/styles.module.scss?0014","webpack://@dev/web/../lan/src/containers/index.tsx","webpack://@dev/web/../lan/src/containers/styles.module.scss"],"sourcesContent":["import { GraphQLClient } from \"graphql-request\";\nimport { createClient } from \"graphql-ws\";\n\n// https://shammelburg.medium.com/subscriptions-with-graphql-dfa8279af050\n// https://github.com/shammelburg/graphql-rxjs-angular/blob/main/src/app/services/graphql.service.ts\nexport const client = new GraphQLClient(`${location.pathname}graphql`, {\n  headers: {\n    // authorization: `Bearer ${localStorage.getItem('token')}`,\n  },\n});\n\nexport const subscriptions = createClient({\n  url: `${{ \"https:\": \"wss:\" }[location.protocol] || \"ws:\"}//${location.host}${\n    location.pathname\n  }subscriptions`,\n});\n","\n      import API from \"!../../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.91.0/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.91.0/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.91.0/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.91.0/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.91.0/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.91.0/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/.pnpm/css-loader@7.1.1_webpack@5.91.0/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!../../../../node_modules/.pnpm/sass-loader@14.2.0_sass@1.75.0_webpack@5.91.0/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/.pnpm/css-loader@7.1.1_webpack@5.91.0/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!../../../../node_modules/.pnpm/sass-loader@14.2.0_sass@1.75.0_webpack@5.91.0/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  type Dispatch,\n  type SetStateAction,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { gql } from \"graphql-request\";\nimport { from } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { client, subscriptions } from \"@dev/client\";\nimport styles from \"./styles.module.scss\";\n\nimport type { WiFiNetwork } from \"node-wifi\";\n\nclass Service {\n  client = client;\n  subscriptions = subscriptions;\n}\n\nconst SCAN = gql`\n  query ScanQuery {\n    lan {\n      scan\n    }\n  }\n`;\n\nconst GET_CURRENT_CONNECTIONS = gql`\n  query GetCurrentConnectionsQuery {\n    lan {\n      currentConnections\n    }\n  }\n`;\n\nexport class LanService extends Service {\n  scan() {\n    return from(this.client.request(SCAN)).pipe(\n      map(({ lan: { scan } }) => scan),\n    );\n  }\n  getCurrentConnections() {\n    return from(this.client.request(GET_CURRENT_CONNECTIONS)).pipe(\n      map(({ lan: { currentConnections } }) => currentConnections),\n    );\n  }\n}\n\nconst service = new LanService();\n\nexport function useService() {\n  const [data, setData] = useState<WiFiNetwork[] | null>(() => []);\n\n  useEffect(() => {\n    service.getCurrentConnections().subscribe((data) => setData(data));\n  }, []);\n\n  return {\n    data,\n    scan: useCallback(\n      () => service.scan().subscribe((data) => setData(data)),\n      [],\n    ),\n  };\n}\n\nenum Sort {\n  ID,\n  IP,\n}\n\ntype DevicesType = { [key: string]: string };\n\nconst getDeviceData = (data: { mac: string }[], devices: DevicesType) =>\n  data.reduce((result, { mac }) => {\n    const entry = Object.entries(devices).find(([pattern]) =>\n      mac.includes(pattern),\n    );\n    return entry\n      ? Object.assign(result, {\n          [mac]: entry[1],\n        })\n      : result;\n  }, {});\n\nconst ipToInt = (ip: string) =>\n  ip.split(\".\").reduce((ipInt, octet) => ipInt * 256 + parseInt(octet, 10), 0);\n\nconst compareIds = (id1: string, id2: string) => Number(id1) - Number(id2);\n\nconst compareIps = (ip1: string, ip2: string) => ipToInt(ip1) - ipToInt(ip2);\n\nfunction AddressReservation({ devices }: { devices: DevicesType }) {\n  const [sort, setSort] = useState(Sort.ID);\n  const [text, setText] = useState(`ID\tMAC Address\tReserved IP Address\tStatus\tModify\n`);\n\n  const data = useMemo(\n    () =>\n      text\n        .split(\"\\n\")\n        .map((line: string) =>\n          line.match(/^(\\d+)\\t(\\S+-\\S+-\\S+-\\S+-\\S+-\\S+)\\t(\\S+)\\t(\\S+)/),\n        )\n        .filter(Boolean)\n        .map(([_, id, mac, ip, status]) => ({\n          id,\n          mac,\n          ip,\n          status,\n        }))\n        .toSorted((item1, item2) =>\n          sort === Sort.ID\n            ? compareIds(item1.id, item2.id)\n            : compareIps(item1.ip, item2.ip),\n        ),\n    [sort, text],\n  );\n\n  const deviceData = useMemo(\n    () => getDeviceData(data, devices),\n    [data, devices],\n  );\n\n  return (\n    <div className={styles.Section}>\n      <h3>Address Reservation</h3>\n      <div style={{ display: \"flex\" }}>\n        <textarea\n          style={{ flex: 1 }}\n          rows={5}\n          value={text}\n          onChange={({ target }) => setText(target.value)}\n        />\n      </div>\n      {data && (\n        <table>\n          <tbody>\n            <tr>\n              <th>\n                {sort === Sort.ID ? (\n                  <u>ID</u>\n                ) : (\n                  <a\n                    href=\"#\"\n                    onClick={(e) => (e.preventDefault(), setSort(Sort.ID))}\n                  >\n                    ID\n                  </a>\n                )}\n              </th>\n              <th>MAC Address</th>\n              <th>\n                {sort === Sort.IP ? (\n                  <u>Reserved IP Address</u>\n                ) : (\n                  <a\n                    href=\"#\"\n                    onClick={(e) => (e.preventDefault(), setSort(Sort.IP))}\n                  >\n                    Reserved IP Address\n                  </a>\n                )}\n              </th>\n              <th>Status</th>\n            </tr>\n            {data.map((item, key) => (\n              <tr key={key}>\n                <td>{item.id}</td>\n                <td>\n                  {item.mac}\n                  {deviceData[item.mac] && (\n                    <span> ({deviceData[item.mac]})</span>\n                  )}\n                </td>\n                <td>{item.ip}</td>\n                <td>{item.status}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n      <pre>{JSON.stringify(text, null, 2)}</pre>\n    </div>\n  );\n}\n\nfunction ClientsList({ devices }: { devices: DevicesType }) {\n  const [sort, setSort] = useState(Sort.ID);\n  const [text, setText] =\n    useState(`ID\tClient Name\tMAC Address\tAssigned IP\tLease Time\n`);\n\n  const data = useMemo(\n    () =>\n      text\n        .split(\"\\n\")\n        .map((line: string) =>\n          line.match(/^(\\d+)\\t(\\S+)\\t(\\S+-\\S+-\\S+-\\S+-\\S+-\\S+)\\t(\\S+)\\t(\\S+)/),\n        )\n        .filter(Boolean)\n        .map(([_, id, name, mac, ip, time]) => ({\n          id,\n          name,\n          mac,\n          ip,\n          time,\n        }))\n        .toSorted((item1, item2) =>\n          sort === Sort.ID\n            ? compareIds(item1.id, item2.id)\n            : compareIps(item1.ip, item2.ip),\n        ),\n    [sort, text],\n  );\n\n  const deviceData = useMemo(\n    () => getDeviceData(data, devices),\n    [data, devices],\n  );\n\n  return (\n    <div className={styles.Section}>\n      <h3>DHCP Clients List</h3>\n      <div style={{ display: \"flex\" }}>\n        <textarea\n          style={{ flex: 1 }}\n          rows={5}\n          value={text}\n          onChange={({ target }) => setText(target.value)}\n        />\n      </div>\n      {data && (\n        <table>\n          <tbody>\n            <tr>\n              <th>\n                {sort === Sort.ID ? (\n                  <u>ID</u>\n                ) : (\n                  <a\n                    href=\"#\"\n                    onClick={(e) => (e.preventDefault(), setSort(Sort.ID))}\n                  >\n                    ID\n                  </a>\n                )}\n              </th>\n              <th>Client Name</th>\n              <th>MAC Address</th>\n              <th>\n                {sort === Sort.IP ? (\n                  <u>Assigned IP</u>\n                ) : (\n                  <a\n                    href=\"#\"\n                    onClick={(e) => (e.preventDefault(), setSort(Sort.IP))}\n                  >\n                    Assigned IP\n                  </a>\n                )}\n              </th>\n              <th>Lease Time</th>\n            </tr>\n            {data.map((item, key) => (\n              <tr key={key}>\n                <td>{item.id}</td>\n                <td>{item.name}</td>\n                <td>\n                  {item.mac}\n                  {deviceData[item.mac] && (\n                    <span> ({deviceData[item.mac]})</span>\n                  )}\n                </td>\n                <td>{item.ip}</td>\n                <td>{item.time}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n      <pre>{JSON.stringify(text, null, 2)}</pre>\n    </div>\n  );\n}\n\nfunction DevicesList({\n  text,\n  setText,\n}: {\n  text: string;\n  setText: Dispatch<SetStateAction<string>>;\n}) {\n  return (\n    <div className={styles.Section}>\n      <h3>Devices List</h3>\n      <div style={{ display: \"flex\" }}>\n        <textarea\n          style={{ flex: 1 }}\n          rows={5}\n          value={text}\n          onChange={({ target }) => setText(target.value)}\n        />\n      </div>\n      <pre>{JSON.stringify(text, null, 2)}</pre>\n    </div>\n  );\n}\n\nexport default function Section() {\n  const { data, scan } = useService();\n  const [text, setText] = useState(`\nD9-11 pizero\n`);\n\n  const devices = useMemo(\n    () =>\n      text\n        .split(\"\\n\")\n        .map((line: string) => line.match(/^(\\S+)\\s+([^\\n|$]+)/))\n        .filter(Boolean)\n        .map(([_, pattern, name]) => ({\n          pattern,\n          name,\n        }))\n        .reduce(\n          (result, { pattern, name }) =>\n            Object.assign(result, { [pattern]: name }),\n          {},\n        ),\n    [text],\n  );\n\n  return (\n    <div className={styles.Section}>\n      <h2>Lan</h2>\n      {data && (\n        <table>\n          <tbody>\n            <tr>\n              <th>ssid</th>\n              <th>mac</th>\n              <th>channel</th>\n              <th>signal_level</th>\n              <th>quality</th>\n              <th>security</th>\n            </tr>\n            {data.map((item, key) => (\n              <tr key={key}>\n                <td>{item.ssid}</td>\n                <td>{item.mac}</td>\n                <td>{item.channel}</td>\n                <td>{item.signal_level}</td>\n                <td>{item.quality}</td>\n                <td>{item.security}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n      <button onClick={() => scan()}>scan</button>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n      <h2>DHCP</h2>\n      <DevicesList text={text} setText={setText} />\n      <ClientsList devices={devices} />\n      <AddressReservation devices={devices} />\n    </div>\n  );\n}\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../node_modules/.pnpm/css-loader@7.1.1_webpack@5.91.0/node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/.pnpm/css-loader@7.1.1_webpack@5.91.0/node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.jnL5aDk4hheBE_J1TFdb{color:green}.jnL5aDk4hheBE_J1TFdb table{border-collapse:collapse;width:100%}.jnL5aDk4hheBE_J1TFdb th,.jnL5aDk4hheBE_J1TFdb td{padding:.25em;text-align:left}`, \"\",{\"version\":3,\"sources\":[\"webpack://./../lan/src/containers/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACE,WAAA,CAEA,4BACE,wBAAA,CACA,UAAA,CAEF,kDAEE,aAAA,CACA,eAAA\",\"sourcesContent\":[\".Section {\\n  color: green;\\n\\n  table {\\n    border-collapse: collapse;\\n    width: 100%;\\n  }\\n  th,\\n  td {\\n    padding: 0.25em;\\n    text-align: left;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Section\": `jnL5aDk4hheBE_J1TFdb`\n};\nmodule.exports = ___CSS_LOADER_EXPORT___;\n"],"names":["client","GraphQLClient","location","pathname","headers","subscriptions","createClient","url","protocol","host","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","Service","SCAN","gql","GET_CURRENT_CONNECTIONS","service","scan","from","this","request","pipe","map","lan","getCurrentConnections","currentConnections","Sort","getDeviceData","data","devices","reduce","result","mac","entry","Object","entries","find","pattern","includes","assign","ipToInt","ip","split","ipInt","octet","parseInt","compareIds","id1","id2","Number","compareIps","ip1","ip2","AddressReservation","sort","setSort","useState","ID","text","setText","useMemo","line","match","filter","Boolean","_","id","status","toSorted","item1","item2","deviceData","React","className","styles","style","display","flex","rows","value","onChange","target","href","onClick","e","preventDefault","IP","item","key","JSON","stringify","ClientsList","name","time","DevicesList","Section","setData","useEffect","subscribe","useCallback","useService","ssid","channel","signal_level","quality","security","___CSS_LOADER_API_SOURCEMAP_IMPORT___","___CSS_LOADER_EXPORT___","___CSS_LOADER_API_IMPORT___","push","module","locals","exports"],"sourceRoot":""}